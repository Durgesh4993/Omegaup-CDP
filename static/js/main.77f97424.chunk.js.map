{"version":3,"sources":["ColorModeSwitcher.tsx","Assets/Images/logoDark.png","Assets/Images/logoLight.png","Components/Navbar.tsx","Redux/Models/TitleModel.ts","Redux/Models/CasesModel.ts","Redux/Models/WritingModel.ts","Redux/Store.ts","Redux/Models/InputModel.ts","Components/Header.tsx","Components/Cases/Sidebar/CaseItem.tsx","Components/Cases/Sidebar/EditGroupModal.tsx","Components/Cases/Sidebar/EditGroup.tsx","Components/Cases/Sidebar/DeleteGroup.tsx","Components/Cases/Sidebar/GroupItem.tsx","Components/Cases/Sidebar/Navigation.tsx","Util/chakraColors.ts","Components/External/ReactSelectDark.tsx","Components/Cases/Sidebar/AddCaseModal.tsx","Components/Cases/Sidebar/AddGroupModal.tsx","Components/Cases/Sidebar/Add.tsx","Components/Cases/Input/LayoutLine.tsx","Components/Cases/Input/LayoutLines.tsx","Components/Cases/Input/LayoutDrawer.tsx","Components/Cases/Sidebar/AddMultipleCasesModal.tsx","Components/Cases/Sidebar/LoadLayoutToAllModal.tsx","Components/Cases/Sidebar/Sidebar.tsx","Components/Cases/Sidebar/EditCaseModal.tsx","Components/Cases/Sidebar/EditCase.tsx","Components/Cases/Sidebar/DeleteItem.tsx","Components/Cases/Input/DeleteLinesModal.tsx","Components/Cases/Input/TopBar.tsx","Components/Cases/Input/ArrayGenDrawer.tsx","Components/Cases/Input/MatrixGenDrawer.tsx","Components/Cases/Input/Line.tsx","Hooks/useInputPage.ts","Components/Cases/Input/InputWindow.tsx","Hooks/useSelectedData.ts","Assets/Images/sloth.png","Components/Cases/Input/Input.tsx","Components/Cases/Main.tsx","Components/Writing/Markdown/Parser.ts","Components/Writing/Display.tsx","Hooks/useWriting.ts","Components/Writing/WritingWindow.tsx","Components/MainWindow.tsx","Pages/RawArray.tsx","Pages/RawMatrix.tsx","App.tsx","index.tsx"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","aria-label","Navbar","logo","light","dark","boxShadow","maxW","align","height","w","src","mr","label","TitleModel","titleName","setTitleName","action","state","payload","calculatePoints","maxPoints","notDefinedCount","forEach","element","name","cases","caseElement","defined","points","individualPoints","map","CasesModel","data","groupId","uuid","selected","caseId","lastState","selectedData","computed","groupState","find","groupElement","groupName","caseState","caseData","setData","addGroup","push","editGroup","groupIndex","findIndex","undefined","removeGroup","filter","addCase","editCase","case","lastId","newGroup","caseIndex","removeCase","setSelected","makeAll","description","input","output","example","limits","globalModel","title","layout","hidden","lastCreated","addData","inputPage","removeData","id","inputElement","addLine","lineGroup","_","isEqual","caseIdentifier","lines","line","lineId","setLines","lineArray","removeLine","lineElement","removeAllLines","lineData","updateLine","lineIndex","setLineArrayData","arrayData","setLineMatrixData","matrixData","setHidden","hide","setLayout","setLayoutToAll","newLines","layoutLine","addLayoutLine","updateLayoutLine","lineToUpdate","type","removeLayoutLine","handleGroupChange","newGroupId","writing","all","set","index","markdown","console","log","setAll","setDescription","setInput","setOutput","setExample","setLimits","GlobalStore","createStore","persist","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","Header","titleText","setTitleText","actions","useState","isEditTitleActive","setIsEditTitleActive","useDisclosure","isOpen","onOpen","onClose","cancelRef","useRef","mt","defaultValue","fontWeight","placeholder","onEdit","onSubmit","event","value","onCancel","width","leftIcon","TriangleDown","Download","colorScheme","leastDestructiveRef","isCentered","ref","ml","sessionStorage","clear","window","location","reload","CaseItem","shouldShowPoints","setSelectedCase","selectedCase","isActive","toFixed","React","AddGroupModal","autoPoints","setAutoPoints","nameRef","pointsRef","definedRef","groupData","toast","useToast","e","preventDefault","isValid","current","status","isClosable","handleSubmit","isRequired","onChange","target","valueAsNumber","min","max","isDisabled","isChecked","isFullWidth","EditGroup","mb","EditGroupModal","DeleteGroup","GroupItem","showCases","setShowCases","borderColor","isLargeScreen","useMediaPredicate","isOpenEdit","onOpenEdit","onCloseEdit","isOpenRemove","onOpenRemove","onCloseRemove","direction","my","cursor","transition","_hover","borderLeft","paddingLeft","pageX","currentTarget","offsetLeft","clientWidth","handleCasesToggleClick","parseFloat","Math","round","isLazy","as","IconButton","syle","zIndex","Edit","Delete","ChevronDown","ChevronUp","motion","div","initial","opacity","y","animate","style","display","Navigation","group","key","colors","transparent","black","white","whiteAlpha","50","100","200","300","400","500","600","700","800","900","blackAlpha","gray","red","orange","yellow","green","teal","blue","cyan","purple","pink","linkedin","facebook","messenger","whatsapp","twitter","telegram","ReactSelectDark","options","darkTheme","theme","primary","chakraColors","primary25","primary50","primary75","neutral0","neutral5","neutral10","neutral20","neutral30","neutral40","neutral50","neutral80","neutral90","AddCaseModal","selectedValue","setSelectedValue","hasGroup","setHasGroup","caseName","pointsDefined","selectedGroupId","obj","Add","LayoutLine","provided","setMode","typeRef","labelRef","deleteLine","handleUpdateLine","newLabel","children","innerHTML","p","border","borderRadius","h","dragHandleProps","DragHandle","isTruncated","textOverflow","minW","handleSelectChange","LayoutLines","isLeft","onDragEnd","result","destination","startIndex","source","endIndex","newArray","Array","from","splice","removed","handleDragEnd","droppableId","snapshot","droppableProps","innerRef","draggableId","isDragging","draggableProps","offset","x","innerWidth","left","top","LayoutDrawer","placement","displayWritingButton","selectedInputData","whiteSpace","overflowWrap","mappedLines","loadCurrentLayout","AddMultipleCasesModal","prefix","setPrefix","suffix","setSuffix","caseNumberRef","idsToDelete","toastBgColor","toastColor","undoCreation","selectedGroupData","closeAll","ids","caseNumber","i","newId","render","bg","rounded","Check","required","LoadLayoutToAllModal","loadLayoutToAll","Sidebar","divBorderColor","isOpenAdd","onOpenAdd","onCloseAdd","isOpenLayout","onOpenLayout","onCloseLayout","isOpenLoadAll","onOpenLoadAll","onCloseLoadAll","isOpenMultiple","onOpenMultiple","onCloseMultiple","borderRight","EditCaseModal","EditCase","DeleteItem","selectCase","DeleteLinesModal","deleteAllLines","TopBar","isOpenLines","onOpenLines","onCloseLines","addPage","selectedLines","pl","pr","checked","layoutNewIds","layoutElement","newCaseName","newCaseId","newIdLines","ArrayGenDrawer","arrayValue","setArrayValue","distinct","setDistinct","valid","setValid","sizeRef","minValueRef","maxValueRef","updateArrayData","handleGenerateArray","parseInt","minValue","maxValue","generatedArray","arrayValues","Set","randomValue","Infinity","floor","random","has","add","generateArray","isInvalid","to","localArrayVal","anyFails","arraySplitted","split","parsedValue","length","checkValidity","getRandom","matrixValue","setMatrixValue","rowsRef","colsRef","updateMatrixData","rows","cols","newMatrix","columns","generatedMatrix","rowValues","columnValues","fill","j","randomNumber","generateMatrix","Line","showInput","mode","inputRef","useEffect","focus","onBlur","onKeyPress","blur","handleEnterPress","disabled","substring","renderSwitch","MatrixGenDrawer","prevState","nextState","useInputPage","pageData","setPageData","inputData","addInputPage","InputWindow","addLineToStore","useCallback","useSelectedData","emptyObject","setGroupName","setCaseData","objectData","Input","sloth","href","Main","splitBetweenTwo","firstOccurrence","secondOccurrence","trim","slice","getLines","firstGlobalIndex","lastGlobalIndex","occurrences","first","second","iterator","row","inputTable","reduce","finalIndex","parse","includeTable","parser","MarkdownIt","html","use","markdownMath","engine","katex","delimiters","sanitizedInput","sanitizeMarkdown","allowedTags","replaceAll","finalTableOutput","join","sanitizedArray","firstPart","secondPart","finalArray","finalString","Display","markdownElements","markdownState","setMarkdownState","useWriting","setMarkdown","showEditor","setShowEditor","showAll","setShowAll","divRef","generateRef","hideRef","showAllRef","tabIndexRef","document","addEventListener","handleKeyPress","removeEventListener","setStoreMarkdown","ctrlKey","which","click","isFitted","className","pos","bottom","right","WritingWindow","MainWindow","padding","RawArray","useParams","useClipboard","hasCopied","onCopy","Copy","RawMatrix","App","isRehydrated","useStoreRehydrated","path","exact","ReactDOM","store","getElementById"],"mappings":"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","file":"static/js/main.77f97424.chunk.js","sourcesContent":["import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logoDark.406064cb.png\";","export default __webpack_public_path__ + \"static/media/logoLight.d4263283.png\";","import * as React from \"react\";\nimport {\n  Box,\n  Spacer,\n  Flex,\n  Image,\n  Container,\n  Tooltip,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { ColorModeSwitcher } from \"../ColorModeSwitcher\";\nimport dark from \"../Assets/Images/logoDark.png\";\nimport light from \"../Assets/Images/logoLight.png\";\n\nconst Navbar = () => {\n  const logo = useColorModeValue(light, dark);\n  return (\n    <Box boxShadow={\"md\"}>\n      <Container maxW={\"container.lg\"}>\n        <Flex align={\"center\"} height={\"38px\"}>\n          <Box w={\"86px\"}>\n            <Image w={\"100px\"} src={logo} />\n          </Box>\n          <Spacer />\n          <Box mr={5}>\n            <ColorModeSwitcher />\n          </Box>\n          <Box>\n            <Tooltip\n              label={\"Colabora con nosotros en Github!\"}\n              aria-label={\"Colabora\"}\n            >\n              <span>\n                <AiFillGithub size={25} />\n              </span>\n            </Tooltip>\n          </Box>\n        </Flex>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Navbar;\n","import { action, Action } from \"easy-peasy\";\n\nexport interface ITitleModel {\n  titleName: string;\n  setTitleName: Action<ITitleModel, string>;\n}\n\nconst TitleModel = <ITitleModel>{\n  titleName: \"Nuevo Problema\",\n  setTitleName: action((state, payload) => {\n    state.titleName = payload;\n  }),\n};\n\nexport default TitleModel;\n","import { action, Action, Computed, computed } from \"easy-peasy\";\nimport { uuid } from \"uuidv4\";\n\nexport interface IGroup {\n  groupId: string;\n  name: string;\n  points: number;\n  defined: boolean;\n  cases: ICase[];\n}\n\nexport interface ICase {\n  caseId: string;\n  name: string;\n  groupId: string;\n  points: number;\n  defined: boolean;\n}\n\ninterface caseIndentifier {\n  groupId: string;\n  caseId: string;\n}\n\nexport interface ICasesModel {\n  data: IGroup[];\n  selected: caseIndentifier;\n  lastState: IGroup[];\n  setData: Action<ICasesModel, IGroup[]>;\n  selectedData: Computed<\n    ICasesModel,\n    (groupId: string, caseId: string) => { groupName: string; caseData: ICase }\n  >;\n\n  addGroup: Action<ICasesModel, IGroup>;\n  editGroup: Action<ICasesModel, IGroup>;\n  removeGroup: Action<ICasesModel, string>;\n\n  addCase: Action<ICasesModel, ICase>;\n  editCase: Action<ICasesModel, { case: ICase; lastId: string }>;\n  removeCase: Action<ICasesModel, caseIndentifier>;\n\n  setSelected: Action<ICasesModel, caseIndentifier>;\n}\n\nfunction calculatePoints(state: IGroup[]) {\n  let maxPoints = 100;\n  let notDefinedCount = 0;\n\n  state.forEach((element) => {\n    if (element.name === \"Sin Grupo\") {\n      element.cases.forEach((caseElement) => {\n        if (caseElement.defined) {\n          maxPoints -= caseElement.points ? caseElement.points : 0;\n        } else {\n          notDefinedCount++;\n        }\n      });\n    } else {\n      if (element.defined) {\n        maxPoints -= element.points ? element.points : 0;\n      } else {\n        notDefinedCount++;\n      }\n    }\n  });\n\n  let individualPoints = maxPoints / notDefinedCount;\n\n  state = state.map((element) => {\n    if (element.name === \"Sin Grupo\") {\n      element.cases = element.cases.map((caseElement) => {\n        if (!caseElement.defined) {\n          caseElement.points = individualPoints;\n        }\n        return caseElement;\n      });\n    }\n    if (!element.defined) {\n      element.points = individualPoints;\n    }\n    return element;\n  });\n\n  return state;\n}\n\nconst CasesModel = {\n  data: [\n    {\n      groupId: uuid(),\n      name: \"Sin Grupo\",\n      cases: [],\n      defined: false,\n      points: 0,\n    },\n  ],\n  selected: {\n    groupId: \"None\",\n    caseId: \"None\",\n  },\n  lastState: [],\n  selectedData: computed((state) => {\n    return (groupId, caseId) => {\n      const groupState = state.data.find(\n        (groupElement) => groupElement.groupId === groupId\n      );\n\n      const groupName = groupState ? groupState.name : \"None\";\n\n      const caseState = groupState?.cases.find(\n        (caseElement) => caseElement.caseId === caseId\n      );\n\n      if (caseState) return { groupName: groupName, caseData: caseState };\n    };\n  }),\n  setData: action((state, payload) => {\n    state.data = payload;\n  }),\n  addGroup: action((state, payload) => {\n    state.data.push(payload);\n    state.data = calculatePoints(state.data);\n  }),\n  editGroup: action((state, payload) => {\n    const groupIndex = state.data.findIndex(\n      (groupElement) => groupElement.groupId === payload.groupId\n    );\n\n    if (groupIndex !== undefined) state.data[groupIndex] = payload;\n\n    state.data = calculatePoints(state.data);\n  }),\n  removeGroup: action((state, payload) => {\n    state.data = state.data.filter((element) => {\n      return element.groupId !== payload;\n    });\n    state.data = calculatePoints(state.data);\n  }),\n  addCase: action((state, payload) => {\n    const groupState = state.data.find(\n      (groupElement) => groupElement.groupId === payload.groupId\n    );\n    groupState?.cases.push(payload);\n    state.data = calculatePoints(state.data);\n  }),\n  editCase: action((state, payload) => {\n    const { case: caseData, lastId } = payload;\n\n    const groupState = state.data.find(\n      (groupElement) => groupElement.groupId === lastId\n    );\n\n    if (lastId !== caseData.groupId) {\n      if (groupState) {\n        groupState.cases = groupState.cases.filter(\n          (caseElement) => caseElement.caseId !== caseData.caseId\n        );\n      }\n\n      const newGroup = state.data.find(\n        (groupElement) => groupElement.groupId === caseData.groupId\n      );\n\n      newGroup?.cases.push(caseData);\n      state.data = calculatePoints(state.data);\n      return;\n    }\n\n    const caseIndex = groupState?.cases.findIndex(\n      (caseElement) => caseElement.caseId === caseData.caseId\n    );\n\n    if (groupState !== undefined && caseIndex !== undefined) {\n      groupState.cases[caseIndex] = caseData;\n    }\n\n    state.data = calculatePoints(state.data);\n  }),\n\n  removeCase: action((state, payload) => {\n    const groupState = state.data.find(\n      (groupElement) => groupElement.groupId === payload.groupId\n    );\n\n    if (groupState !== undefined) {\n      groupState.cases = groupState.cases.filter(\n        (caseElement) => caseElement.caseId !== payload.caseId\n      );\n    }\n    state.data = calculatePoints(state.data);\n  }),\n  setSelected: action((state, payload) => {\n    state.selected = payload;\n  }),\n} as ICasesModel;\n\nexport default CasesModel;\n","import { action, Action } from \"easy-peasy\";\n\nfunction makeAll(state: any) {\n  return (\n    state.description +\n    \"\\n\" +\n    state.input +\n    \"\\n\" +\n    state.output +\n    \"\\n\" +\n    state.example +\n    \"\\n\" +\n    state.limits\n  );\n  // ${state.description}\n  //\n  // ${state.input}\n  //\n  // ${state.output}\n  //\n  // ${state.example}\n  //\n  // ${state.limits}\n  // `;\n}\n\nexport interface IWritingModel {\n  all: string;\n  description: string;\n  input: string;\n  output: string;\n  example: string;\n  limits: string;\n\n  set: Action<IWritingModel, { markdown: string; index: number }>;\n  setAll: Action<IWritingModel, string>;\n  setDescription: Action<IWritingModel, string>;\n  setInput: Action<IWritingModel, string>;\n  setOutput: Action<IWritingModel, string>;\n  setExample: Action<IWritingModel, string>;\n  setLimits: Action<IWritingModel, string>;\n\n  handleAll: () => string;\n}\n\nconst WritingModel = {\n  all: `# Descripción\n\nEsta es la descripción del problema. Inventa una historia creativa.\nPuedes utilizar matemáticas inline para hacer $x_i, y_i$, o $z_i$ o incluso:\n$$x=\\\\frac{b\\\\pm \\\\sqrt{b^2 -4ac}}{2a}$$\n\n# Entrada\n\nAquí va la descripción de la entrada del problema.\n\n# Salida\n\nEsta es la descripción de la salida esperada.\n\n# Ejemplo\n\n||input\n1\n2\n||output\nCase #1: 3\n||description\nExplicación\n||input\n5\n10\n||output\nCase #2: 15\n||description\nhola\n||end\n\n# Límites\n\n* Aquí\n* Van\n* Los\n* Límites\n`,\n  description: `# Descripción\n  \nEsta es la descripción del problema. Inventa una historia creativa.\nPuedes utilizar matemáticas inline para hacer $x_i, y_i$, o $z_i$ o incluso:\n$$x=\\\\frac{b\\\\pm \\\\sqrt{b^2 -4ac}}{2a}$$\n`,\n  input: `# Entrada\n\nAquí va la descripción de la entrada del problema.\n`,\n  output: `# Salida\n\nEsta es la descripción de la salida esperada.\n`,\n  example: `# Ejemplo \n\n||input\n1\n2\n||output\nCase #1: 3\n||description\nExplicación\n||input\n5\n10\n||output\nCase #2: 15\n||description\nhola\n||end\n`,\n  limits: `# Límites\n\n* Aquí\n* Van\n* Los\n* Límites\n`,\n\n  set: action((state, payload) => {\n    switch (payload.index) {\n      case 0:\n        state.all = payload.markdown;\n        break;\n      case 1:\n        state.description = payload.markdown;\n        break;\n      case 2:\n        state.input = payload.markdown;\n        break;\n      case 3:\n        state.output = payload.markdown;\n        break;\n      case 4:\n        state.example = payload.markdown;\n        break;\n      case 5:\n        state.limits = payload.markdown;\n        break;\n    }\n    state.all = makeAll(state);\n    console.log(state.all);\n  }),\n  setAll: action((state, payload) => {\n    state.all = payload;\n    makeAll(state);\n  }),\n  setDescription: action((state, payload) => {\n    state.description = payload;\n    makeAll(state);\n  }),\n  setInput: action((state, payload) => {\n    state.input = payload;\n    makeAll(state);\n  }),\n  setOutput: action((state, payload) => {\n    state.output = payload;\n    makeAll(state);\n  }),\n  setExample: action((state, payload) => {\n    state.example = payload;\n    makeAll(state);\n  }),\n  setLimits: action((state, payload) => {\n    state.limits = payload;\n    makeAll(state);\n  }),\n} as IWritingModel;\n\nexport default WritingModel;\n","import title, { ITitleModel } from \"./Models/TitleModel\";\nimport cases, { ICasesModel } from \"./Models/CasesModel\";\nimport input, { IInputModel } from \"./Models/InputModel\";\nimport writing, { IWritingModel } from \"./Models/WritingModel\";\n\nimport { createStore, createTypedHooks, persist } from \"easy-peasy\";\n\nconst globalModel = {\n  title,\n  cases,\n  input,\n  writing,\n};\n\ninterface IGlobalModel {\n  title: ITitleModel;\n  cases: ICasesModel;\n  input: IInputModel;\n  writing: IWritingModel;\n}\n\nconst GlobalStore = createStore(persist(globalModel));\nexport default GlobalStore;\n\nconst typedHooks = createTypedHooks<IGlobalModel>();\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n","import { action, Action, computed, Computed } from \"easy-peasy\";\nimport _ from \"lodash\";\nimport { uuid } from \"uuidv4\";\n\nexport interface IArrayData {\n  size: number;\n  minValue: number;\n  maxValue: number;\n  distinct: boolean;\n  value: string;\n}\n\nexport interface IMatrixData {\n  rows: number;\n  columns: number;\n  minValue: number;\n  maxValue: number;\n  distinct: \"row\" | \"column\" | \"all\" | \"none\";\n  value: string;\n}\nexport interface ILine {\n  lineId: string;\n  type: \"line\" | \"multiline\" | \"array\" | \"matrix\";\n  label: string;\n  value: string;\n  arrayData: IArrayData | undefined;\n  matrixData: IMatrixData | undefined;\n}\n\nexport interface IInput {\n  id: caseIdentifier;\n  lines: ILine[];\n}\n\nexport interface caseIdentifier {\n  groupId: string;\n  caseId: string;\n}\n\nexport interface IInputModel {\n  data: IInput[];\n  layout: ILine[] | undefined;\n  hidden: boolean;\n  lastCreated: string;\n\n  addData: Action<IInputModel, IInput>;\n  removeData: Action<IInputModel, caseIdentifier>;\n\n  addLine: Action<IInputModel, { caseIdentifier: caseIdentifier; line: ILine }>;\n  setLines: Action<\n    IInputModel,\n    {\n      caseIdentifier: caseIdentifier;\n      lineArray: ILine[];\n    }\n  >;\n  removeLine: Action<\n    IInputModel,\n    { caseIdentifier: caseIdentifier; lineId: string }\n  >;\n  removeAllLines: Action<IInputModel, caseIdentifier>;\n  lineData: Computed<\n    IInputModel,\n    (caseIdentifier: caseIdentifier, lineId: string) => ILine\n  >;\n  updateLine: Action<\n    IInputModel,\n    { caseIdentifier: caseIdentifier; lineId: string; lineData: ILine }\n  >;\n  handleGroupChange: Action<\n    IInputModel,\n    { caseId: string; newGroupId: string }\n  >;\n  setLineArrayData: Action<\n    IInputModel,\n    { caseIdentifier: caseIdentifier; lineId: string; arrayData: IArrayData }\n  >;\n  setLineMatrixData: Action<\n    IInputModel,\n    { caseIdentifier: caseIdentifier; lineId: string; matrixData: IMatrixData }\n  >;\n  setHidden: Action<IInputModel, boolean>;\n\n  setLayout: Action<IInputModel, ILine[]>;\n  setLayoutToAll: Action<IInputModel>;\n  addLayoutLine: Action<IInputModel, ILine>;\n  updateLayoutLine: Action<IInputModel, ILine>;\n  removeLayoutLine: Action<IInputModel, string>;\n}\n\nconst InputModel = {\n  data: [],\n  layout: [],\n  hidden: false,\n  lastCreated: \"\",\n\n  addData: action((state, inputPage) => {\n    state.data.push(inputPage);\n  }),\n  removeData: action((state, id) => {\n    state.data.filter((inputElement) => {\n      return inputElement.id !== id;\n    });\n  }),\n  addLine: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, payload.caseIdentifier)\n    );\n    lineGroup?.lines.push(payload.line);\n    state.lastCreated = payload.line.lineId;\n  }),\n  setLines: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, payload.caseIdentifier)\n    );\n\n    if (lineGroup !== undefined) {\n      lineGroup.lines = payload.lineArray;\n    }\n  }),\n  removeLine: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, payload.caseIdentifier)\n    );\n    if (lineGroup !== undefined) {\n      lineGroup.lines = lineGroup?.lines.filter(\n        (lineElement) => lineElement.lineId !== payload.lineId\n      );\n    }\n  }),\n  removeAllLines: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(payload, inputElement.id)\n    );\n\n    if (lineGroup !== undefined) {\n      lineGroup.lines = [];\n    }\n  }),\n  lineData: computed((state) => {\n    return (caseIdentifier, lineId) => {\n      const lineGroup = state.data.find(\n        (inputElement) => inputElement.id === caseIdentifier\n      );\n\n      const line = lineGroup?.lines.find(\n        (lineElement) => lineElement.lineId === lineId\n      );\n\n      if (line) return line;\n    };\n  }),\n  updateLine: action((state, { caseIdentifier, lineId, lineData }) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, caseIdentifier)\n    );\n\n    const lineIndex = lineGroup?.lines.findIndex(\n      (lineElement) => lineElement.lineId === lineId\n    );\n\n    if (lineGroup !== undefined && lineIndex !== undefined) {\n      lineGroup.lines[lineIndex] = lineData;\n    }\n  }),\n  setLineArrayData: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, payload.caseIdentifier)\n    );\n\n    const line = lineGroup?.lines.find(\n      (lineElement) => lineElement.lineId === payload.lineId\n    );\n\n    if (line !== undefined) {\n      line.arrayData = payload.arrayData;\n    }\n  }),\n  setLineMatrixData: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, payload.caseIdentifier)\n    );\n\n    const line = lineGroup?.lines.find(\n      (lineElement) => lineElement.lineId === payload.lineId\n    );\n\n    if (line !== undefined) {\n      line.matrixData = payload.matrixData;\n    }\n  }),\n  setHidden: action((state, hide) => {\n    state.hidden = hide;\n  }),\n\n  setLayout: action((state, layout) => {\n    state.layout = layout;\n  }),\n  setLayoutToAll: action((state) => {\n    state.data.forEach((inputElement) => {\n      if (state.layout !== undefined) {\n        const newLines = state.layout.map((layoutLine) => {\n          return { ...layoutLine, lineId: uuid() };\n        });\n        inputElement.lines = newLines;\n      }\n    });\n  }),\n  addLayoutLine: action((state, payload) => {\n    state.layout?.push(payload);\n  }),\n  updateLayoutLine: action((state, payload) => {\n    const lineToUpdate = state.layout?.find(\n      (lineElement) => lineElement.lineId === payload.lineId\n    );\n    if (lineToUpdate !== undefined) {\n      lineToUpdate.label = payload.label;\n      lineToUpdate.type = payload.type;\n    }\n  }),\n  removeLayoutLine: action((state, payload) => {\n    state.layout = state.layout?.filter(\n      (lineElement) => lineElement.lineId !== payload\n    );\n  }),\n\n  handleGroupChange: action((state, { caseId, newGroupId }) => {\n    const inputPage = state.data.find(\n      (inputElement) => inputElement.id.caseId === caseId\n    );\n    if (inputPage !== undefined) {\n      inputPage.id.groupId = newGroupId;\n    }\n  }),\n} as IInputModel;\n\nexport default InputModel;\n","import * as React from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  Editable,\n  EditableInput,\n  EditablePreview,\n  HStack,\n  Spacer,\n  useDisclosure,\n  AlertDialogOverlay,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogBody,\n  AlertDialog,\n} from \"@chakra-ui/react\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../Redux/Store\";\nimport { AddIcon, DownloadIcon, TriangleDownIcon } from \"@chakra-ui/icons\";\n\nconst Header = () => {\n  const titleText = useStoreState((state) => state.title.titleName);\n  const setTitleText = useStoreActions((actions) => actions.title.setTitleName);\n\n  const [isEditTitleActive, setIsEditTitleActive] = useState(false);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = useRef<HTMLButtonElement>(null);\n\n  function handleTitleSubmit(value: string) {\n    setIsEditTitleActive(false);\n    setTitleText(value);\n  }\n\n  function createNewProblem() {\n    sessionStorage.clear();\n    window.location.reload();\n  }\n\n  return (\n    <Container maxW={\"container.lg\"}>\n      <Box mt={\"5\"}>\n        <HStack>\n          <Editable\n            defaultValue={titleText}\n            fontSize={\"xl\"}\n            fontWeight={\"bold\"}\n            placeholder={\"Escribe el nombre del problema\"}\n            onEdit={() => setIsEditTitleActive(true)}\n            onSubmit={(event) => handleTitleSubmit(event)}\n            onCancel={() => setIsEditTitleActive(false)}\n            width={isEditTitleActive ? \"50%\" : undefined}\n          >\n            <EditablePreview />\n            <EditableInput />\n          </Editable>\n          <span>\n            <AiFillEdit />\n          </span>\n          <Spacer />\n          <Button leftIcon={<TriangleDownIcon />} size={\"sm\"}>\n            Cargar Problema{\" \"}\n          </Button>\n          <Button leftIcon={<DownloadIcon />} size={\"sm\"} colorScheme={\"blue\"}>\n            Guardar Problema\n          </Button>\n          <Button\n            leftIcon={<AddIcon />}\n            size={\"sm\"}\n            colorScheme={\"orange\"}\n            onClick={onOpen}\n          >\n            Nuevo Problema\n          </Button>\n          <AlertDialog\n            leastDestructiveRef={cancelRef}\n            onClose={onClose}\n            isOpen={isOpen}\n            isCentered\n          >\n            <AlertDialogOverlay />\n\n            <AlertDialogContent>\n              <AlertDialogHeader>Crear nuevo problema</AlertDialogHeader>\n              <AlertDialogBody>\n                ¿Deseas crear un nuevo problema? Se borrará TODO el problema\n                anterior. Guarda el problema primero antes de crear uno nuevo.\n              </AlertDialogBody>\n              <AlertDialogFooter>\n                <Button ref={cancelRef} onClick={onClose}>\n                  No\n                </Button>\n                <Button\n                  colorScheme=\"red\"\n                  ml={3}\n                  onClick={() => createNewProblem()}\n                >\n                  Sí\n                </Button>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialog>\n        </HStack>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport { Badge, Button, HStack } from \"@chakra-ui/react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase } from \"../../../Redux/Models/CasesModel\";\n\ninterface PropTypes extends ICase {\n  shouldShowPoints: boolean;\n}\nconst CaseItem = (props: PropTypes) => {\n  const { name, points, caseId, groupId, defined, shouldShowPoints } = props;\n\n  const setSelectedCase = useStoreActions(\n    (actions) => actions.cases.setSelected\n  );\n  const selectedCase = useStoreState((state) => state.cases.selected);\n\n  function handleSelectedCase() {\n    setSelectedCase({ caseId: caseId, groupId: groupId });\n  }\n\n  return (\n    <Button\n      variant={\"ghost\"}\n      size={\"sm\"}\n      onClick={() => handleSelectedCase()}\n      isActive={\n        selectedCase.caseId === caseId && selectedCase.groupId === groupId\n      }\n    >\n      <HStack>\n        <span>{name}</span>\n        {shouldShowPoints && (\n          <Badge colorScheme={defined ? \"green\" : \"blue\"}>\n            {points.toFixed(2) + \" PTS\"}\n          </Badge>\n        )}\n      </HStack>\n    </Button>\n  );\n};\n\nexport default React.memo(CaseItem);\n","import * as React from \"react\";\nimport {\n  Checkbox,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Select,\n  toast,\n  useToast,\n  Button,\n} from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase, IGroup } from \"../../../Redux/Models/CasesModel\";\nimport { uuid } from \"uuidv4\";\n\ninterface PropTypes extends IGroup {\n  onClose: () => void;\n}\n\nconst AddGroupModal = (props: PropTypes) => {\n  const { groupId, name, points, defined, onClose, cases } = props;\n\n  const [autoPoints, setAutoPoints] = useState(!defined);\n\n  const nameRef = useRef<string>(name);\n  const pointsRef = useRef<number>(points);\n  const definedRef = useRef<boolean>(defined);\n\n  const editGroup = useStoreActions((actions) => actions.cases.editGroup);\n  const groupData = useStoreState((state) => state.cases.data);\n\n  const toast = useToast();\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    let isValid = true;\n    groupData.forEach((groupElement) => {\n      if (groupElement.name === nameRef.current && nameRef.current !== name) {\n        isValid = false;\n        return;\n      }\n    });\n\n    if (!isValid) {\n      toast({\n        title: \"Error al crear grupo\",\n        description: \"No puedes tener grupos con el mismo nombre\",\n        status: \"error\",\n        isClosable: true,\n      });\n      return;\n    }\n\n    editGroup({\n      groupId: groupId,\n      points: pointsRef.current,\n      defined: definedRef.current,\n      name: nameRef.current,\n      cases: cases,\n    });\n\n    onClose();\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <FormControl mt={3} isRequired>\n        <FormLabel> Nombre del grupo</FormLabel>\n        <Input\n          onChange={(e) => (nameRef.current = e.target.value)}\n          defaultValue={name}\n        />\n      </FormControl>\n      <FormControl mt={5}>\n        <FormLabel> Puntaje </FormLabel>\n        <NumberInput\n          defaultValue={points}\n          onChange={(e, valueAsNumber) => (pointsRef.current = valueAsNumber)}\n          min={0}\n          max={100}\n          isDisabled={autoPoints}\n        >\n          <NumberInputField />\n          <NumberInputStepper>\n            <NumberIncrementStepper />\n            <NumberDecrementStepper />\n          </NumberInputStepper>\n        </NumberInput>\n        {autoPoints && (\n          <FormHelperText>\n            El programa calculará automáticamente el puntaje\n          </FormHelperText>\n        )}\n        <Checkbox\n          mt={3}\n          isChecked={autoPoints}\n          onChange={() => {\n            setAutoPoints(!autoPoints);\n            definedRef.current = autoPoints;\n          }}\n        >\n          Puntaje automático\n        </Checkbox>\n      </FormControl>\n      <Button colorScheme=\"green\" isFullWidth mt={10} type={\"submit\"}>\n        Agregar Problema\n      </Button>\n    </form>\n  );\n};\n\nexport default AddGroupModal;\n","import * as React from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport AddCaseModal from \"./AddCaseModal\";\nimport AddGroupModal from \"./AddGroupModal\";\nimport { IGroup } from \"../../../Redux/Models/CasesModel\";\nimport EditGroupModal from \"./EditGroupModal\";\n\ninterface PropTypes extends IGroup {\n  isOpen: boolean;\n  onClose: () => void;\n}\nconst EditGroup = (props: PropTypes) => {\n  const { isOpen, onClose } = props;\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader> Editar Grupo </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody mb={5}>\n          <EditGroupModal {...props} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default EditGroup;\n","import * as React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useStoreActions } from \"../../../Redux/Store\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n  groupId: string;\n}\n\nconst DeleteGroup = (props: PropTypes) => {\n  const { isOpen, onClose, groupId } = props;\n\n  const toast = useToast();\n\n  const removeGroup = useStoreActions((actions) => actions.cases.removeGroup);\n\n  function deleteGroup() {\n    toast({\n      title: \"Grupo borrado\",\n      description: \"El grupo ha sido borrado exitosamente\",\n      status: \"success\",\n      isClosable: true,\n    });\n\n    removeGroup(groupId);\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Borar Grupo</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          ¿Estás seguro que deseas borrar este grupo? Este cambio no se puede\n          deshacer\n        </ModalBody>\n        <ModalFooter>\n          <Button variant={\"ghost\"} mr={3} onClick={onClose}>\n            Cerrar\n          </Button>\n          <Button\n            colorScheme=\"red\"\n            type={\"submit\"}\n            onClick={() => deleteGroup()}\n          >\n            Borrar Grupo\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DeleteGroup;\n","import * as React from \"react\";\nimport {\n  Badge,\n  Box,\n  Divider,\n  HStack,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Spacer,\n  Tooltip,\n  useColorModeValue,\n  useDisclosure,\n  Flex,\n} from \"@chakra-ui/react\";\nimport { HiOutlineDotsVertical as Dots } from \"react-icons/hi\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport CaseItem from \"./CaseItem\";\nimport { useStoreState } from \"../../../Redux/Store\";\nimport { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport EditGroup from \"./EditGroup\";\nimport { IGroup } from \"../../../Redux/Models/CasesModel\";\nimport DeleteGroup from \"./DeleteGroup\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n  DeleteIcon,\n  EditIcon,\n} from \"@chakra-ui/icons\";\n\ninterface PropTypes extends IGroup {}\n\nconst GroupItem = (props: PropTypes) => {\n  const { name, defined, points, groupId } = props;\n  const [showCases, setShowCases] = useState(name === \"Sin Grupo\");\n\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\n  const caseState = useStoreState((state) => {\n    return state.cases.data.find((element) => element.name === name);\n  });\n\n  const isLargeScreen = useMediaPredicate(\"(min-width: 830px)\");\n\n  const {\n    isOpen: isOpenEdit,\n    onOpen: onOpenEdit,\n    onClose: onCloseEdit,\n  } = useDisclosure();\n  const {\n    isOpen: isOpenRemove,\n    onOpen: onOpenRemove,\n    onClose: onCloseRemove,\n  } = useDisclosure();\n\n  function handleCasesToggleClick(event: React.MouseEvent<HTMLDivElement>) {\n    let percentage =\n      ((event.pageX - event.currentTarget.offsetLeft) * 100) /\n      event.currentTarget.clientWidth;\n    if (percentage < 80) setShowCases(!showCases);\n  }\n\n  return (\n    <Flex direction={\"column\"}>\n      <Box my={2}>\n        <HStack\n          mb={2}\n          cursor={\"pointer\"}\n          transition={\"padding-left 0.1s\"}\n          _hover={{\n            borderLeft: \"2px\",\n            borderColor: `${borderColor}`,\n            paddingLeft: \"5px\",\n          }}\n          onClick={(event) => handleCasesToggleClick(event)}\n        >\n          <Box>{name}</Box>\n          <Spacer />\n          {name !== \"Sin Grupo\" ? (\n            <>\n              <Tooltip\n                label={\n                  \"Estos serán los puntos que obtendrá el usuario si resuelve correctamente el grupo\"\n                }\n              >\n                <Badge colorScheme={defined ? \"green\" : \"blue\"} size={\"sm\"}>\n                  {isLargeScreen ? (\n                    <span> {parseFloat(\"\" + points).toFixed(2) + \" pts\"}</span>\n                  ) : (\n                    <span>{points && Math.round(points)} </span>\n                  )}\n                </Badge>\n              </Tooltip>\n\n              <Menu isLazy>\n                <MenuButton\n                  as={IconButton}\n                  icon={<Dots />}\n                  size={\"sm\"}\n                  syle={{ zIndex: 99 }}\n                />\n                <MenuList>\n                  <MenuItem\n                    icon={<EditIcon />}\n                    fontSize={\"sm\"}\n                    onClick={onOpenEdit}\n                  >\n                    Editar Grupo\n                  </MenuItem>\n                  <MenuItem\n                    icon={<DeleteIcon />}\n                    fontSize={\"sm\"}\n                    onClick={onOpenRemove}\n                  >\n                    Eliminar Grupo\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n              <EditGroup {...props} isOpen={isOpenEdit} onClose={onCloseEdit} />\n              <DeleteGroup\n                isOpen={isOpenRemove}\n                onClose={onCloseRemove}\n                groupId={groupId}\n              />\n            </>\n          ) : showCases ? (\n            <ChevronDownIcon />\n          ) : (\n            <ChevronUpIcon />\n          )}\n        </HStack>\n        <Divider />\n      </Box>\n      <Box ml={2}>\n        {caseState &&\n          showCases &&\n          caseState.cases.map((element) => (\n            <motion.div\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              style={{ display: \"inline-block\" }}\n              key={element.caseId}\n            >\n              <CaseItem {...element} shouldShowPoints={name === \"Sin Grupo\"} />\n            </motion.div>\n          ))}\n      </Box>\n    </Flex>\n  );\n};\n\nexport default GroupItem;\n","import * as React from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport {\n  Box,\n  Modal,\n  ModalContent,\n  ModalOverlay,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport GroupItem from \"./GroupItem\";\n\nconst Navigation = () => {\n  const caseState = useStoreState((state) => state.cases.data);\n\n  return (\n    <>\n      <Box mt={2} mb={10}>\n        {caseState.map((group) => (\n          <GroupItem {...group} key={group.groupId} />\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default Navigation;\n","/**\n * @deprecated\n * You can derive the Colors type from the DefaultChakraTheme:\n *\n * type Colors = DefaultChakraTheme[\"colors\"]\n */\nexport type Colors = typeof colors;\n\nconst colors = {\n  transparent: \"transparent\",\n  current: \"currentColor\",\n  black: \"#000000\",\n  white: \"#FFFFFF\",\n\n  whiteAlpha: {\n    50: \"rgba(255, 255, 255, 0.04)\",\n    100: \"rgba(255, 255, 255, 0.06)\",\n    200: \"rgba(255, 255, 255, 0.08)\",\n    300: \"rgba(255, 255, 255, 0.16)\",\n    400: \"rgba(255, 255, 255, 0.24)\",\n    500: \"rgba(255, 255, 255, 0.36)\",\n    600: \"rgba(255, 255, 255, 0.48)\",\n    700: \"rgba(255, 255, 255, 0.64)\",\n    800: \"rgba(255, 255, 255, 0.80)\",\n    900: \"rgba(255, 255, 255, 0.92)\",\n  },\n\n  blackAlpha: {\n    50: \"rgba(0, 0, 0, 0.04)\",\n    100: \"rgba(0, 0, 0, 0.06)\",\n    200: \"rgba(0, 0, 0, 0.08)\",\n    300: \"rgba(0, 0, 0, 0.16)\",\n    400: \"rgba(0, 0, 0, 0.24)\",\n    500: \"rgba(0, 0, 0, 0.36)\",\n    600: \"rgba(0, 0, 0, 0.48)\",\n    700: \"rgba(0, 0, 0, 0.64)\",\n    800: \"rgba(0, 0, 0, 0.80)\",\n    900: \"rgba(0, 0, 0, 0.92)\",\n  },\n\n  gray: {\n    50: \"#F7FAFC\",\n    100: \"#EDF2F7\",\n    200: \"#E2E8F0\",\n    300: \"#CBD5E0\",\n    400: \"#A0AEC0\",\n    500: \"#718096\",\n    600: \"#4A5568\",\n    700: \"#2D3748\",\n    800: \"#1A202C\",\n    900: \"#171923\",\n  },\n\n  red: {\n    50: \"#FFF5F5\",\n    100: \"#FED7D7\",\n    200: \"#FEB2B2\",\n    300: \"#FC8181\",\n    400: \"#F56565\",\n    500: \"#E53E3E\",\n    600: \"#C53030\",\n    700: \"#9B2C2C\",\n    800: \"#822727\",\n    900: \"#63171B\",\n  },\n\n  orange: {\n    50: \"#FFFAF0\",\n    100: \"#FEEBC8\",\n    200: \"#FBD38D\",\n    300: \"#F6AD55\",\n    400: \"#ED8936\",\n    500: \"#DD6B20\",\n    600: \"#C05621\",\n    700: \"#9C4221\",\n    800: \"#7B341E\",\n    900: \"#652B19\",\n  },\n\n  yellow: {\n    50: \"#FFFFF0\",\n    100: \"#FEFCBF\",\n    200: \"#FAF089\",\n    300: \"#F6E05E\",\n    400: \"#ECC94B\",\n    500: \"#D69E2E\",\n    600: \"#B7791F\",\n    700: \"#975A16\",\n    800: \"#744210\",\n    900: \"#5F370E\",\n  },\n\n  green: {\n    50: \"#F0FFF4\",\n    100: \"#C6F6D5\",\n    200: \"#9AE6B4\",\n    300: \"#68D391\",\n    400: \"#48BB78\",\n    500: \"#38A169\",\n    600: \"#2F855A\",\n    700: \"#276749\",\n    800: \"#22543D\",\n    900: \"#1C4532\",\n  },\n\n  teal: {\n    50: \"#E6FFFA\",\n    100: \"#B2F5EA\",\n    200: \"#81E6D9\",\n    300: \"#4FD1C5\",\n    400: \"#38B2AC\",\n    500: \"#319795\",\n    600: \"#2C7A7B\",\n    700: \"#285E61\",\n    800: \"#234E52\",\n    900: \"#1D4044\",\n  },\n\n  blue: {\n    50: \"#ebf8ff\",\n    100: \"#bee3f8\",\n    200: \"#90cdf4\",\n    300: \"#63b3ed\",\n    400: \"#4299e1\",\n    500: \"#3182ce\",\n    600: \"#2b6cb0\",\n    700: \"#2c5282\",\n    800: \"#2a4365\",\n    900: \"#1A365D\",\n  },\n\n  cyan: {\n    50: \"#EDFDFD\",\n    100: \"#C4F1F9\",\n    200: \"#9DECF9\",\n    300: \"#76E4F7\",\n    400: \"#0BC5EA\",\n    500: \"#00B5D8\",\n    600: \"#00A3C4\",\n    700: \"#0987A0\",\n    800: \"#086F83\",\n    900: \"#065666\",\n  },\n\n  purple: {\n    50: \"#FAF5FF\",\n    100: \"#E9D8FD\",\n    200: \"#D6BCFA\",\n    300: \"#B794F4\",\n    400: \"#9F7AEA\",\n    500: \"#805AD5\",\n    600: \"#6B46C1\",\n    700: \"#553C9A\",\n    800: \"#44337A\",\n    900: \"#322659\",\n  },\n\n  pink: {\n    50: \"#FFF5F7\",\n    100: \"#FED7E2\",\n    200: \"#FBB6CE\",\n    300: \"#F687B3\",\n    400: \"#ED64A6\",\n    500: \"#D53F8C\",\n    600: \"#B83280\",\n    700: \"#97266D\",\n    800: \"#702459\",\n    900: \"#521B41\",\n  },\n\n  linkedin: {\n    50: \"#E8F4F9\",\n    100: \"#CFEDFB\",\n    200: \"#9BDAF3\",\n    300: \"#68C7EC\",\n    400: \"#34B3E4\",\n    500: \"#00A0DC\",\n    600: \"#008CC9\",\n    700: \"#0077B5\",\n    800: \"#005E93\",\n    900: \"#004471\",\n  },\n\n  facebook: {\n    50: \"#E8F4F9\",\n    100: \"#D9DEE9\",\n    200: \"#B7C2DA\",\n    300: \"#6482C0\",\n    400: \"#4267B2\",\n    500: \"#385898\",\n    600: \"#314E89\",\n    700: \"#29487D\",\n    800: \"#223B67\",\n    900: \"#1E355B\",\n  },\n\n  messenger: {\n    50: \"#D0E6FF\",\n    100: \"#B9DAFF\",\n    200: \"#A2CDFF\",\n    300: \"#7AB8FF\",\n    400: \"#2E90FF\",\n    500: \"#0078FF\",\n    600: \"#0063D1\",\n    700: \"#0052AC\",\n    800: \"#003C7E\",\n    900: \"#002C5C\",\n  },\n\n  whatsapp: {\n    50: \"#dffeec\",\n    100: \"#b9f5d0\",\n    200: \"#90edb3\",\n    300: \"#65e495\",\n    400: \"#3cdd78\",\n    500: \"#22c35e\",\n    600: \"#179848\",\n    700: \"#0c6c33\",\n    800: \"#01421c\",\n    900: \"#001803\",\n  },\n\n  twitter: {\n    50: \"#E5F4FD\",\n    100: \"#C8E9FB\",\n    200: \"#A8DCFA\",\n    300: \"#83CDF7\",\n    400: \"#57BBF5\",\n    500: \"#1DA1F2\",\n    600: \"#1A94DA\",\n    700: \"#1681BF\",\n    800: \"#136B9E\",\n    900: \"#0D4D71\",\n  },\n\n  telegram: {\n    50: \"#E3F2F9\",\n    100: \"#C5E4F3\",\n    200: \"#A2D4EC\",\n    300: \"#7AC1E4\",\n    400: \"#47A9DA\",\n    500: \"#0088CC\",\n    600: \"#007AB8\",\n    700: \"#006BA1\",\n    800: \"#005885\",\n    900: \"#003F5E\",\n  },\n};\n\nexport default colors;\n","import * as React from \"react\";\nimport RSelect from \"react-select\";\nimport chakraColors from \"../../Util/chakraColors\";\n\ninterface PropTypes {\n  onChange: (e: any) => any;\n  value: object | undefined;\n  options: { value: string; label: string }[];\n  defaultValue?: object | undefined;\n  darkTheme: boolean;\n}\nconst ReactSelectDark = (props: PropTypes) => {\n  const {\n    onChange,\n    value,\n    options,\n    defaultValue = undefined,\n    darkTheme,\n  } = props;\n  return (\n    <RSelect\n      defaultValue={defaultValue}\n      options={options}\n      value={value}\n      onChange={onChange}\n      theme={\n        darkTheme\n          ? (theme) => ({\n              ...theme,\n              colors: {\n                ...theme.colors,\n                primary: chakraColors.blue[200], // Selected\n                primary25: chakraColors.gray[600], // Ring\n                primary50: chakraColors.blue[600], // Ring\n                primary75: chakraColors.blue[700], // Ring\n                neutral0: chakraColors.gray[700],\n                neutral5: chakraColors.gray[700],\n                neutral10: chakraColors.gray[700],\n                neutral20: chakraColors.gray[600],\n                neutral30: chakraColors.gray[500],\n                neutral40: chakraColors.white,\n                neutral50: chakraColors.white,\n                neutral80: chakraColors.white,\n                neutral90: chakraColors.white,\n              },\n            })\n          : undefined\n      }\n    />\n  );\n};\n\nexport default ReactSelectDark;\n","import * as React from \"react\";\nimport {\n  Button,\n  Checkbox,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  useColorModeValue,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport RSelect from \"react-select\";\nimport { uuid } from \"uuidv4\";\nimport chakraColors from \"../../../Util/chakraColors\";\nimport ReactSelectDark from \"../../External/ReactSelectDark\";\n\ninterface PropTypes {\n  onClose: () => void;\n}\n\n// TODO handle logic for no group cases\n\nconst AddCaseModal = ({ onClose }: PropTypes) => {\n  const [autoPoints, setAutoPoints] = useState(true);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [hasGroup, setHasGroup] = useState(false);\n\n  const caseName = useRef<string>(\"\");\n  const points = useRef<number>(50);\n  const pointsDefined = useRef<boolean>(false);\n\n  const addCase = useStoreActions((actions) => actions.cases.addCase);\n  const groupData = useStoreState((state) => state.cases.data);\n\n  const toast = useToast();\n  const darkTheme = useColorModeValue(false, true);\n\n  let options = groupData.map((groupElement) => {\n    return {\n      value: groupElement.groupId,\n      label: groupElement.name,\n    };\n  });\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    let isValid = true;\n    let selectedGroupId = selectedValue;\n\n    if (selectedGroupId === \"\") {\n      selectedGroupId = options[0].value;\n    }\n\n    groupData.forEach((groupElement) => {\n      if (groupElement.groupId === selectedGroupId) {\n        groupElement.cases.forEach((caseElement) => {\n          if (caseElement.name === caseName.current) {\n            isValid = false;\n            return;\n          }\n        });\n      }\n      if (!isValid) return;\n    });\n\n    if (!isValid) {\n      toast({\n        title: \"Error al crear caso\",\n        description:\n          \"No puedes tener casos con el mismo nombre en un mismo grupo\",\n        status: \"error\",\n        isClosable: true,\n      });\n      return;\n    }\n\n    addCase({\n      caseId: uuid(),\n      name: caseName.current,\n      groupId: selectedGroupId,\n      points: points.current,\n      defined: pointsDefined.current,\n    });\n\n    onClose();\n  }\n\n  function handleSelectChange(event: any) {\n    setSelectedValue(event.value);\n    setHasGroup(event.value !== options[0].value);\n  }\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <FormControl mt={3} isRequired>\n        <FormLabel> Nombre del caso</FormLabel>\n        <Input onChange={(e) => (caseName.current = e.target.value)} />\n      </FormControl>\n      <FormControl mt={5} isRequired>\n        <FormLabel> Nombre del grupo</FormLabel>\n        <ReactSelectDark\n          onChange={handleSelectChange}\n          value={options.find((obj) => obj.value === selectedValue)}\n          options={options}\n          defaultValue={{ label: \"Sin Grupo\", value: options[0].value }}\n          darkTheme={darkTheme}\n        />\n      </FormControl>\n      {!hasGroup && (\n        <FormControl mt={5}>\n          <FormLabel> Puntaje </FormLabel>\n          <NumberInput\n            onChange={(e, valueAsNumber) => (points.current = valueAsNumber)}\n            min={0}\n            max={100}\n            isDisabled={autoPoints}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n          {autoPoints && (\n            <FormHelperText>\n              El programa calculará automáticamente el puntaje\n            </FormHelperText>\n          )}\n          <Checkbox\n            mt={3}\n            isChecked={autoPoints}\n            onChange={() => {\n              setAutoPoints(!autoPoints);\n              pointsDefined.current = autoPoints;\n            }}\n          >\n            Puntaje automático\n          </Checkbox>\n        </FormControl>\n      )}\n      <Button colorScheme=\"green\" isFullWidth mt={10} type=\"submit\">\n        Agregar Caso\n      </Button>\n    </form>\n  );\n};\n\nexport default AddCaseModal;\n","import * as React from \"react\";\nimport {\n  Checkbox,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Select,\n  toast,\n  useToast,\n  Button,\n} from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase } from \"../../../Redux/Models/CasesModel\";\nimport { uuid } from \"uuidv4\";\n\ninterface PropTypes {\n  onClose: () => void;\n}\n\nconst AddGroupModal = ({ onClose }: PropTypes) => {\n  const [autoPoints, setAutoPoints] = useState(true);\n\n  const groupName = useRef<string>(\"\");\n  const points = useRef<number>(50);\n  const pointsDefined = useRef<boolean>(false);\n\n  const addGroup = useStoreActions((actions) => actions.cases.addGroup);\n  const groupData = useStoreState((state) => state.cases.data);\n\n  const toast = useToast();\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    let isValid = true;\n    groupData.forEach((groupElement) => {\n      if (groupElement.name === groupName.current) {\n        isValid = false;\n        return;\n      }\n    });\n\n    if (!isValid) {\n      toast({\n        title: \"Error al crear grupo\",\n        description: \"No puedes tener grupos con el mismo nombre\",\n        status: \"error\",\n        isClosable: true,\n      });\n      return;\n    }\n\n    addGroup({\n      groupId: uuid(),\n      name: groupName.current,\n      points: points.current,\n      defined: pointsDefined.current,\n      cases: [],\n    });\n\n    onClose();\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <FormControl mt={3} isRequired>\n        <FormLabel> Nombre del grupo</FormLabel>\n        <Input onChange={(e) => (groupName.current = e.target.value)} />\n      </FormControl>\n      <FormControl mt={5}>\n        <FormLabel> Puntaje </FormLabel>\n        <NumberInput\n          onChange={(e, valueAsNumber) => (points.current = valueAsNumber)}\n          min={0}\n          max={100}\n          isDisabled={autoPoints}\n        >\n          <NumberInputField />\n          <NumberInputStepper>\n            <NumberIncrementStepper />\n            <NumberDecrementStepper />\n          </NumberInputStepper>\n        </NumberInput>\n        {autoPoints && (\n          <FormHelperText>\n            El programa calculará automáticamente el puntaje\n          </FormHelperText>\n        )}\n        <Checkbox\n          mt={3}\n          isChecked={autoPoints}\n          onChange={() => {\n            setAutoPoints(!autoPoints);\n            pointsDefined.current = autoPoints;\n          }}\n        >\n          Puntaje automático\n        </Checkbox>\n      </FormControl>\n      <Button colorScheme=\"green\" isFullWidth mt={10} type={\"submit\"}>\n        Agregar Problema\n      </Button>\n    </form>\n  );\n};\n\nexport default AddGroupModal;\n","import * as React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n} from \"@chakra-ui/react\";\nimport AddCaseModal from \"./AddCaseModal\";\nimport AddGroupModal from \"./AddGroupModal\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst Add = ({ isOpen, onClose }: PropTypes) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Agregar </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Tabs size={\"sm\"}>\n            <TabList>\n              <Tab> Caso </Tab>\n              <Tab> Grupo </Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <AddCaseModal onClose={onClose} />\n              </TabPanel>\n              <TabPanel>\n                <AddGroupModal onClose={onClose} />\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default Add;\n","import { DragHandleIcon, EditIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  HStack,\n  Editable,\n  EditablePreview,\n  EditableInput,\n  Textarea,\n  Input,\n  Select,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { useRef, useState } from \"react\";\nimport { DraggableProvided } from \"react-beautiful-dnd\";\nimport { ILine } from \"../../../Redux/Models/InputModel\";\nimport { useStoreActions } from \"../../../Redux/Store\";\n\ninterface PropTypes extends ILine {\n  provided: DraggableProvided;\n}\nconst LayoutLine = (props: PropTypes) => {\n  const { provided, label, type, lineId, arrayData, matrixData } = props;\n\n  const [mode, setMode] = useState(type);\n\n  const typeRef = useRef(type);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const updateLine = useStoreActions(\n    (actions) => actions.input.updateLayoutLine\n  );\n  const deleteLine = useStoreActions(\n    (actions) => actions.input.removeLayoutLine\n  );\n\n  function handleSelectChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const value = e.currentTarget.value;\n    if (\n      value === \"line\" ||\n      value === \"multiline\" ||\n      value === \"array\" ||\n      value === \"matrix\"\n    ) {\n      setMode(value);\n      typeRef.current = value;\n    }\n    handleUpdateLine();\n  }\n\n  function handleUpdateLine() {\n    const newLabel =\n      labelRef.current !== null ? labelRef.current.children[0].innerHTML : \"\";\n    updateLine({\n      label: newLabel,\n      lineId: lineId,\n      type: typeRef.current,\n      value: \"\",\n      arrayData: arrayData,\n      matrixData: matrixData,\n    });\n  }\n\n  return (\n    <Box w={\"100%\"} p={3} border={\"1px solid rgba(5,5,5,0.1)\"} borderRadius={5}>\n      <HStack w={\"100%\"} h={\"100%\"}>\n        <Box {...provided.dragHandleProps}>\n          <DragHandleIcon />\n        </Box>\n\n        <Editable\n          ref={labelRef}\n          defaultValue={label}\n          isTruncated\n          fontSize={\"sm\"}\n          textOverflow={\"clip\"}\n          minW={\"40px\"}\n          maxW={\"40px\"}\n          onSubmit={() => handleUpdateLine()}\n        >\n          <EditablePreview />\n          <EditableInput />\n        </Editable>\n        <Select\n          size={\"sm\"}\n          value={type}\n          onChange={(e) => handleSelectChange(e)}\n        >\n          <option value={\"line\"}> Linea </option>\n          <option value={\"multiline\"}> Multilínea</option>\n          <option value={\"array\"}> Arreglo </option>\n          <option value={\"matrix\"}> Matriz </option>\n        </Select>\n        <DeleteIcon cursor={\"pointer\"} onClick={() => deleteLine(lineId)} />\n      </HStack>\n    </Box>\n  );\n};\n\nexport default LayoutLine;\n","import { Box, Button, Center, VStack } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport { uuid } from \"uuidv4\";\nimport { ILine } from \"../../../Redux/Models/InputModel\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport LayoutLine from \"./LayoutLine\";\nimport Line from \"./Line\";\n\ninterface PropTypes {\n  isLeft?: boolean;\n}\nconst LayoutLines = (props: PropTypes) => {\n  const { isLeft = false } = props;\n  const layout = useStoreState((state) => state.input.layout);\n  const setLayout = useStoreActions((actions) => actions.input.setLayout);\n  const addLine = useStoreActions((actions) => actions.input.addLayoutLine);\n\n  function handleDragEnd(result: DropResult) {\n    if (!result.destination) return;\n\n    const startIndex = result.source.index;\n    const endIndex = result.destination.index;\n\n    if (layout !== undefined) {\n      const newArray = Array.from(layout);\n      const [removed] = newArray.splice(startIndex, 1);\n      newArray.splice(endIndex, 0, removed);\n      setLayout(newArray);\n    }\n  }\n\n  function handleAddLine() {\n    addLine({\n      lineId: uuid(),\n      label: \"New\",\n      type: \"line\",\n      value: \"\",\n      arrayData: undefined,\n      matrixData: undefined,\n    });\n  }\n\n  return (\n    <VStack>\n      <DragDropContext onDragEnd={(result) => handleDragEnd(result)}>\n        <Droppable droppableId={\"layout\"}>\n          {(provided, snapshot) => (\n            <Box\n              w={\"full\"}\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {layout !== undefined &&\n                layout.map((line, index) => (\n                  <Draggable\n                    key={line.lineId}\n                    draggableId={line.lineId}\n                    index={index}\n                  >\n                    {(provided, snapshot) => {\n                      if (\n                        snapshot.isDragging &&\n                        provided.draggableProps.style !== undefined\n                      ) {\n                        const offset = {\n                          x: isLeft ? 0 : window.innerWidth - 320,\n                          y: 0,\n                        }; // your fixed container left/top position\n                        // @ts-ignore\n                        const x = provided.draggableProps.style.left - offset.x;\n                        // @ts-ignore\n                        const y = provided.draggableProps.style.top - offset.y;\n                        // @ts-ignore\n                        provided.draggableProps.style.left = x;\n                        // @ts-ignore\n                        provided.draggableProps.style.top = y;\n                      }\n                      return (\n                        <Box\n                          w={\"full\"}\n                          mb={3}\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                        >\n                          <LayoutLine provided={provided} {...line} />\n                        </Box>\n                      );\n                    }}\n                  </Draggable>\n                ))}\n              {provided.placeholder}\n            </Box>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Center>\n        <Button size={\"sm\"} onClick={handleAddLine}>\n          +\n        </Button>\n      </Center>\n    </VStack>\n  );\n};\n\nexport default LayoutLines;\n","import {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerBody,\n  Input,\n  DrawerFooter,\n  Button,\n  HStack,\n  VStack,\n  Center,\n  Flex,\n} from \"@chakra-ui/react\";\nimport _ from \"lodash\";\nimport * as React from \"react\";\nimport { uuid } from \"uuidv4\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport LayoutLines from \"./LayoutLines\";\nimport { useRef } from \"react\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n  placement?: \"right\" | \"left\";\n  displayWritingButton?: boolean;\n}\nconst LayoutDrawer = (props: PropTypes) => {\n  const {\n    isOpen,\n    onClose,\n    placement = \"right\",\n    displayWritingButton = false,\n  } = props;\n\n  const setLayout = useStoreActions((actions) => actions.input.setLayout);\n  const selectedCase = useStoreState((state) => state.cases.selected);\n  const selectedInputData = useStoreState((state) =>\n    state.input.data.find((inputElement) =>\n      _.isEqual(inputElement.id, selectedCase)\n    )\n  );\n\n  function loadCurrentLayout() {\n    if (selectedInputData !== undefined) {\n      const mappedLines = selectedInputData.lines.map((inputElement) => {\n        return {\n          ...inputElement,\n          value: \"\",\n          lineId: uuid(),\n          arrayData:\n            inputElement.arrayData !== undefined\n              ? { ...inputElement.arrayData, value: \"\" }\n              : undefined,\n        };\n      });\n      setLayout(mappedLines);\n    }\n  }\n\n  return (\n    <Drawer isOpen={isOpen} placement={placement} onClose={onClose}>\n      <DrawerOverlay />\n      <DrawerContent>\n        <DrawerCloseButton />\n        <DrawerHeader>Layout</DrawerHeader>\n\n        <DrawerBody>\n          <LayoutLines isLeft={!displayWritingButton} />\n        </DrawerBody>\n\n        <DrawerFooter>\n          <VStack w={\"100%\"}>\n            {displayWritingButton && (\n              <Button isFullWidth size={\"sm\"} colorScheme=\"blue\">\n                Ver Reddacción\n              </Button>\n            )}\n            <Button\n              isFullWidth\n              colorScheme=\"red\"\n              size={\"sm\"}\n              onClick={() => setLayout([])}\n            >\n              Borrar Layout\n            </Button>\n            <Button\n              isFullWidth\n              p={7}\n              whiteSpace={\"normal\"}\n              overflowWrap={\"break-word\"}\n              colorScheme=\"green\"\n              onClick={() => loadCurrentLayout()}\n            >\n              Crear Layout a partir del caso seleccionado\n            </Button>\n          </VStack>\n        </DrawerFooter>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport default LayoutDrawer;\n","import * as React from \"react\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  HStack,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n  useColorModeValue,\n  useToast,\n} from \"@chakra-ui/react\";\nimport AddCaseModal from \"./AddCaseModal\";\nimport AddGroupModal from \"./AddGroupModal\";\nimport { FormEvent, useRef, useState } from \"react\";\nimport ReactSelectDark from \"../../External/ReactSelectDark\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { uuid } from \"uuidv4\";\nimport { CheckIcon } from \"@chakra-ui/icons\";\nimport { IGroup } from \"../../../Redux/Models/CasesModel\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n}\nconst AddMultipleCasesModal = (props: PropTypes) => {\n  const { isOpen, onClose } = props;\n\n  const [prefix, setPrefix] = useState(\"\");\n  const [suffix, setSuffix] = useState(\"\");\n\n  const groupData = useStoreState((state) => state.cases.data);\n\n  const caseNumberRef = useRef(0);\n  const idsToDelete = useRef<string[]>([]);\n\n  const darkTheme = useColorModeValue(false, true);\n\n  const addCase = useStoreActions((actions) => actions.cases.addCase);\n  const removeCase = useStoreActions((actions) => actions.cases.removeCase);\n  const options = groupData.map((groupElement) => {\n    return {\n      value: groupElement.groupId,\n      label: groupElement.name,\n    };\n  });\n\n  const toastBgColor = useColorModeValue(\"green.500\", \"green.200\");\n  const toastColor = useColorModeValue(\"white\", \"black\");\n  const [selectedValue, setSelectedValue] = useState(options[0].value);\n\n  const toast = useToast();\n\n  function handleSelectChange(event: any) {\n    setSelectedValue(event.value);\n  }\n\n  function handleSubmit(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    const selectedGroupData = groupData.find(\n      (groupElement) => groupElement.groupId === selectedValue\n    );\n    let ids: string[] = [];\n    if (selectedGroupData !== undefined) {\n      let caseNumber = 0;\n      for (let i = 0; i < caseNumberRef.current; i++) {\n        do {\n          caseNumber++;\n          const name = prefix + caseNumber + suffix;\n          const caseExist = selectedGroupData.cases.find(\n            (caseElement) => caseElement.name === name\n          );\n          if (caseExist === undefined) {\n            const newId = uuid();\n            ids.push(newId);\n            addCase({\n              caseId: newId,\n              name: name,\n              groupId: selectedGroupData.groupId,\n              defined: false,\n              points: 0,\n            });\n            break;\n          }\n        } while (true);\n      }\n      idsToDelete.current = ids;\n      console.log(ids);\n    }\n    toast({\n      render: () => (\n        <Box\n          bg={toastBgColor}\n          color={toastColor}\n          rounded={\"md\"}\n          p={4}\n          onClick={undoCreation}\n          cursor={\"pointer\"}\n        >\n          <HStack>\n            <CheckIcon />\n            <Text fontWeight={\"bold\"}> Creado multiples casos!</Text>\n          </HStack>\n          {\"    \"}Click para deshacer\n        </Box>\n      ),\n    });\n    onClose();\n  }\n\n  function undoCreation() {\n    const selectedGroupData = groupData.find(\n      (groupElement) => groupElement.groupId === selectedValue\n    );\n    console.log(idsToDelete);\n    if (selectedGroupData !== undefined) {\n      idsToDelete.current.forEach((id) => {\n        removeCase({ caseId: id, groupId: selectedGroupData.groupId });\n      });\n    }\n    toast.closeAll();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Agregar Multiples Casos</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <HStack mt={3}>\n              <FormControl>\n                <FormLabel> Prefijo</FormLabel>\n                <Input onChange={(e) => setPrefix(e.target.value)} />\n              </FormControl>\n              <FormControl>\n                <FormLabel> Sufijo</FormLabel>\n                <Input onChange={(e) => setSuffix(e.target.value)} />\n              </FormControl>\n            </HStack>\n            <FormControl mt={5} isRequired>\n              <FormLabel> Número de casos</FormLabel>\n              <NumberInput\n                onChange={(e, valueAsNumber) =>\n                  (caseNumberRef.current = valueAsNumber)\n                }\n              >\n                <NumberInputField required />\n                <NumberInputStepper>\n                  <NumberIncrementStepper />\n                  <NumberDecrementStepper />\n                </NumberInputStepper>\n              </NumberInput>\n            </FormControl>\n            <FormControl mt={5} isRequired>\n              <FormLabel> Grupo</FormLabel>\n              <ReactSelectDark\n                onChange={handleSelectChange}\n                value={options.find((obj) => obj.value === selectedValue)}\n                options={options}\n                darkTheme={darkTheme}\n                defaultValue={{ label: \"Sin Grupo\", value: options[0].value }}\n              />\n              <FormHelperText>\n                Tus casos tendrán el nombre {prefix}1{suffix}, {prefix}2{suffix}\n                , ...\n              </FormHelperText>\n            </FormControl>\n            <Button\n              type={\"submit\"}\n              colorScheme={\"green\"}\n              isFullWidth\n              mt={10}\n              mb={5}\n            >\n              Agregar\n            </Button>\n          </form>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default AddMultipleCasesModal;\n","import * as React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst LoadLayoutToAllModal = (props: PropTypes) => {\n  const { isOpen, onClose } = props;\n\n  const loadLayoutToAll = useStoreActions(\n    (actions) => actions.input.setLayoutToAll\n  );\n\n  function handleLoadLayout() {\n    loadLayoutToAll();\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Cargar Layout</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          Esta operación cargará el layout definido a TODOS los casos,\n          sobreescribiendo la información que tengan. ¿Estás seguro que deseas\n          realizar la operación? No se puede deshacer\n        </ModalBody>\n        <ModalFooter>\n          <Button variant={\"ghost\"} mr={3} onClick={onClose}>\n            Cerrar\n          </Button>\n          <Button\n            colorScheme=\"blue\"\n            type={\"submit\"}\n            onClick={() => handleLoadLayout()}\n          >\n            Cargar Layout\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default LoadLayoutToAllModal;\n","import * as React from \"react\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Spacer,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { motion } from \"framer-motion\";\nimport Navigation from \"./Navigation\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Add from \"./Add\";\nimport { HiOutlineDotsVertical as Dots } from \"react-icons/hi\";\nimport LayoutDrawer from \"../Input/LayoutDrawer\";\nimport AddMultipleCasesModal from \"./AddMultipleCasesModal\";\nimport LoadLayoutToAllModal from \"./LoadLayoutToAllModal\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  BsReverseLayoutTextSidebarReverse,\n  CgLayoutList,\n} from \"react-icons/all\";\n\nconst Sidebar = () => {\n  const divBorderColor = useColorModeValue(\"gray.200\", \"gray.600\");\n\n  const {\n    isOpen: isOpenAdd,\n    onOpen: onOpenAdd,\n    onClose: onCloseAdd,\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenLayout,\n    onOpen: onOpenLayout,\n    onClose: onCloseLayout,\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenLoadAll,\n    onOpen: onOpenLoadAll,\n    onClose: onCloseLoadAll,\n  } = useDisclosure();\n\n  const {\n    isOpen: isOpenMultiple,\n    onOpen: onOpenMultiple,\n    onClose: onCloseMultiple,\n  } = useDisclosure();\n\n  const isLargeScreen = useMediaPredicate(\"(min-width: 830px)\");\n\n  return (\n    <motion.div initial={{ opacity: 0, x: -50 }} animate={{ opacity: 1, x: 0 }}>\n      <Box\n        w={\"100%\"}\n        h={\"75vh\"}\n        borderRight={\"1px\"}\n        borderColor={divBorderColor}\n      >\n        <Box width={\"90%\"}>\n          <Flex align={\"center\"} mb={4}>\n            <Text mr={5} fontSize={\"xl\"} fontWeight={\"bold\"}>\n              Grupos\n            </Text>\n            <Spacer />\n            <Button\n              size={\"sm\"}\n              colorScheme={\"green\"}\n              onClick={onOpenAdd}\n              mr={2}\n            >\n              {isLargeScreen ? <p> Agregar</p> : <p> + </p>}\n            </Button>\n            <Menu>\n              <MenuButton\n                as={IconButton}\n                icon={<Dots />}\n                size={\"sm\"}\n                syle={{ zIndex: 99 }}\n              />\n              <MenuList>\n                <MenuItem\n                  icon={<AddIcon />}\n                  fontSize={\"sm\"}\n                  onClick={onOpenMultiple}\n                >\n                  Agregar Multiples Casos\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem\n                  icon={<BsReverseLayoutTextSidebarReverse />}\n                  fontSize={\"sm\"}\n                  onClick={onOpenLayout}\n                >\n                  Layout\n                </MenuItem>\n                <MenuItem\n                  icon={<CgLayoutList />}\n                  fontSize={\"sm\"}\n                  onClick={onOpenLoadAll}\n                >\n                  Cargar Layout en todos los Casos\n                </MenuItem>\n                {/*<MenuDivider />*/}\n                {/*<MenuItem fontSize={\"sm\"} onClick={onOpenLoadAll}>*/}\n                {/*  Seleccionar*/}\n                {/*</MenuItem>*/}\n              </MenuList>\n            </Menu>\n            <Add isOpen={isOpenAdd} onClose={onCloseAdd} />\n            <AddMultipleCasesModal\n              isOpen={isOpenMultiple}\n              onClose={onCloseMultiple}\n            />\n            <LayoutDrawer\n              isOpen={isOpenLayout}\n              onClose={onCloseLayout}\n              displayWritingButton\n            />\n            <LoadLayoutToAllModal\n              isOpen={isOpenLoadAll}\n              onClose={onCloseLoadAll}\n            />\n          </Flex>\n          <Divider />\n          <Navigation />\n        </Box>\n      </Box>\n    </motion.div>\n  );\n};\n\nexport default Sidebar;\n","import * as React from \"react\";\nimport {\n  Checkbox,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Select,\n  toast,\n  useToast,\n  Button,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase, IGroup } from \"../../../Redux/Models/CasesModel\";\nimport RSelect from \"react-select\";\nimport chakraColors from \"../../../Util/chakraColors\";\ninterface PropTypes extends ICase {\n  onClose: () => void;\n}\nconst EditCaseModal = (props: PropTypes) => {\n  const { groupId, caseId, name, points, defined, onClose } = props;\n\n  const [autoPoints, setAutoPoints] = useState(!defined);\n  const [selectedValue, setSelectedValue] = useState(groupId);\n\n  const nameRef = useRef<string>(name);\n  const pointsRef = useRef<number>(points);\n  const definedRef = useRef<boolean>(defined);\n\n  const editCase = useStoreActions((actions) => actions.cases.editCase);\n  const groupData = useStoreState((state) => state.cases.data);\n  const handleGroupChange = useStoreActions(\n    (actions) => actions.input.handleGroupChange\n  );\n\n  const toast = useToast();\n  const darkTheme = useColorModeValue(false, true);\n\n  let options = groupData.map((groupElement) => {\n    return {\n      value: groupElement.groupId,\n      label: groupElement.name,\n    };\n  });\n\n  const [hasGroup, setHasGroup] = useState(groupId !== options[0].value);\n\n  // Tengo que quitarlo primero del grupo donde estaba antes\n  // Tengo que agregarlo al nuevo grupo\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    let isValid = true;\n    let selectedGroupId = selectedValue;\n\n    if (selectedGroupId === \"\") {\n      selectedGroupId = options[0].value;\n    }\n\n    groupData.forEach((groupElement) => {\n      if (groupElement.groupId === groupId) {\n        groupElement.cases.forEach((caseElement) => {\n          if (\n            caseElement.name === nameRef.current &&\n            nameRef.current !== name\n          ) {\n            isValid = false;\n            return;\n          }\n        });\n        if (!isValid) return;\n      }\n    });\n\n    if (!isValid) {\n      toast({\n        title: \"Error al crear grupo\",\n        description: \"No puedes tener grupos con el mismo nombre\",\n        status: \"error\",\n        isClosable: true,\n      });\n      return;\n    }\n\n    // cambiar el selected\n    editCase({\n      case: {\n        caseId: caseId,\n        name: nameRef.current,\n        points: pointsRef.current,\n        groupId: selectedGroupId,\n        defined: definedRef.current,\n      },\n      lastId: groupId,\n    });\n\n    handleGroupChange({ caseId: caseId, newGroupId: selectedGroupId });\n\n    onClose();\n  }\n\n  function handleSelectChange(event: any) {\n    setSelectedValue(event.value);\n    setHasGroup(event.value !== options[0].value);\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <FormControl mt={3} isRequired>\n        <FormLabel> Nombre del caso</FormLabel>\n        <Input\n          onChange={(e) => (nameRef.current = e.target.value)}\n          defaultValue={name}\n        />\n      </FormControl>\n      <FormControl mt={5} isRequired>\n        <FormLabel> Nombre del grupo</FormLabel>\n        <RSelect\n          defaultValue={options.find((obj) => obj.value === groupId)}\n          options={options}\n          value={options.find((obj) => obj.value === selectedValue)}\n          onChange={handleSelectChange}\n          theme={\n            darkTheme\n              ? (theme) => ({\n                  ...theme,\n                  colors: {\n                    ...theme.colors,\n                    primary: chakraColors.blue[200], // Selected\n                    primary25: chakraColors.gray[600], // Ring\n                    primary50: chakraColors.blue[600], // Ring\n                    primary75: chakraColors.blue[700], // Ring\n                    neutral0: chakraColors.gray[700],\n                    neutral5: chakraColors.gray[700],\n                    neutral10: chakraColors.gray[700],\n                    neutral20: chakraColors.gray[600],\n                    neutral30: chakraColors.gray[500],\n                    neutral40: chakraColors.white,\n                    neutral50: chakraColors.white,\n                    neutral80: chakraColors.white,\n                    neutral90: chakraColors.white,\n                  },\n                })\n              : undefined\n          }\n        />\n      </FormControl>\n      {!hasGroup && (\n        <FormControl mt={5}>\n          <FormLabel> Puntaje </FormLabel>\n          <NumberInput\n            onChange={(e, valueAsNumber) => (pointsRef.current = valueAsNumber)}\n            defaultValue={points}\n            min={0}\n            max={100}\n            isDisabled={autoPoints}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n          {autoPoints && (\n            <FormHelperText>\n              El programa calculará automáticamente el puntaje\n            </FormHelperText>\n          )}\n          <Checkbox\n            mt={3}\n            isChecked={autoPoints}\n            onChange={() => {\n              setAutoPoints(!autoPoints);\n              definedRef.current = autoPoints;\n            }}\n          >\n            Puntaje automático\n          </Checkbox>\n        </FormControl>\n      )}\n      <Button colorScheme=\"green\" isFullWidth mt={10} type={\"submit\"}>\n        Editar Caso\n      </Button>\n    </form>\n  );\n};\n\nexport default EditCaseModal;\n","import * as React from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport AddCaseModal from \"./AddCaseModal\";\nimport AddGroupModal from \"./AddGroupModal\";\nimport { ICase, IGroup } from \"../../../Redux/Models/CasesModel\";\nimport EditGroupModal from \"./EditGroupModal\";\nimport EditCaseModal from \"./EditCaseModal\";\n\ninterface PropTypes extends ICase {\n  isOpen: boolean;\n  onClose: () => void;\n}\nconst EditCase = (props: PropTypes) => {\n  const { isOpen, onClose } = props;\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader> Editar Caso </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody mb={5}>\n          <EditCaseModal {...props} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default EditCase;\n","import * as React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useStoreActions } from \"../../../Redux/Store\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n  groupId: string;\n  caseId: string;\n}\n\nconst DeleteItem = (props: PropTypes) => {\n  const { isOpen, onClose, groupId, caseId } = props;\n\n  const toast = useToast();\n\n  const removeCase = useStoreActions((actions) => actions.cases.removeCase);\n  const selectCase = useStoreActions((actions) => actions.cases.setSelected);\n\n  function deleteCase() {\n    toast({\n      title: \"Caso borrado\",\n      description: \"El caso ha sido borrado exitosamente\",\n      status: \"success\",\n      isClosable: true,\n    });\n\n    removeCase({\n      caseId: caseId,\n      groupId: groupId,\n    });\n    selectCase({ caseId: \"None\", groupId: \"None\" });\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Borrar Caso</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          ¿Estás seguro que deseas borrar este caso? Este cambio no se puede\n          deshacer\n        </ModalBody>\n        <ModalFooter>\n          <Button variant={\"ghost\"} mr={3} onClick={onClose}>\n            Cerrar\n          </Button>\n          <Button\n            colorScheme=\"red\"\n            type={\"submit\"}\n            onClick={() => deleteCase()}\n          >\n            Borrar Caso\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DeleteItem;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { caseIdentifier } from \"../../../Redux/Models/InputModel\";\nimport { useStoreActions } from \"../../../Redux/Store\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n  caseIdentifier: caseIdentifier;\n}\nconst DeleteLinesModal = (props: PropTypes) => {\n  const { isOpen, onClose, caseIdentifier } = props;\n  const deleteAllLines = useStoreActions(\n    (actions) => actions.input.removeAllLines\n  );\n\n  function handleDeleteAllLines() {\n    deleteAllLines(caseIdentifier);\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader> Borrar todas las Líneas </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          ¿Estás seguro que deseas borrar todas las líneas? Todo el contenido\n          dentro de estas será borrado. Esta acción no se puede deshacer.\n        </ModalBody>\n        <ModalFooter>\n          <Button variant={\"ghost\"} mr={3} onClick={onClose}>\n            Cerrar\n          </Button>\n          <Button\n            colorScheme=\"red\"\n            type={\"submit\"}\n            onClick={() => handleDeleteAllLines()}\n          >\n            Borrar Líneas\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DeleteLinesModal;\n","import * as React from \"react\";\nimport {\n  HStack,\n  Text,\n  Spacer,\n  Button,\n  useDisclosure,\n  Box,\n  Switch,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/react\";\nimport EditCase from \"../Sidebar/EditCase\";\nimport { HiOutlineDotsVertical as Dots } from \"react-icons/hi\";\nimport DeleteItem from \"../Sidebar/DeleteItem\";\nimport { useSelectedData } from \"../../../Hooks/useSelectedData\";\nimport { ICase } from \"../../../Redux/Models/CasesModel\";\nimport {\n  BiDuplicate,\n  BsEye,\n  BsFillEyeSlashFill,\n  FaFileDownload,\n  FiDelete,\n  GrDuplicate,\n} from \"react-icons/all\";\nimport { ChangeEvent } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport DeleteLinesModal from \"./DeleteLinesModal\";\nimport LayoutDrawer from \"./LayoutDrawer\";\nimport { uuid } from \"uuidv4\";\nimport _ from \"lodash\";\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\n\ninterface PropTypes {\n  groupName: string;\n  caseData: ICase;\n}\n\nconst TopBar = (props: PropTypes) => {\n  const { groupName, caseData } = props;\n  const {\n    isOpen: isOpenEdit,\n    onOpen: onOpenEdit,\n    onClose: onCloseEdit,\n  } = useDisclosure();\n  const {\n    isOpen: isOpenRemove,\n    onOpen: onOpenRemove,\n    onClose: onCloseRemove,\n  } = useDisclosure();\n  const {\n    isOpen: isOpenLines,\n    onOpen: onOpenLines,\n    onClose: onCloseLines,\n  } = useDisclosure();\n\n  const hidden = useStoreState((state) => state.input.hidden);\n  const setHidden = useStoreActions((actions) => actions.input.setHidden);\n  const setLines = useStoreActions((actions) => actions.input.setLines);\n  const layout = useStoreState((state) => state.input.layout);\n  const addCase = useStoreActions((actions) => actions.cases.addCase);\n  const addPage = useStoreActions((actions) => actions.input.addData);\n  const selectedLines = useStoreState((state) =>\n    state.input.data.find((inputElement) =>\n      _.isEqual(inputElement.id, {\n        groupId: caseData.groupId,\n        caseId: caseData.caseId,\n      })\n    )\n  );\n  const groupState = useStoreState((state) =>\n    state.cases.data.find(\n      (groupElement) => groupElement.groupId === caseData.groupId\n    )\n  );\n\n  function handleHidden(event: ChangeEvent<HTMLInputElement>) {\n    setHidden(event.target.checked);\n  }\n\n  function handleLayoutLoad() {\n    if (layout !== undefined) {\n      const layoutNewIds = layout.map((layoutElement) => {\n        return { ...layoutElement, lineId: uuid() };\n      });\n      setLines({\n        caseIdentifier: { groupId: caseData.groupId, caseId: caseData.caseId },\n        lineArray: layoutNewIds,\n      });\n    }\n  }\n\n  function duplicateCase() {\n    const newCaseId = uuid();\n    let newCaseName: string;\n    let i = 1;\n    while (true) {\n      newCaseName = caseData.name + ` (${i})`;\n      if (\n        groupState?.cases.find(\n          (caseElement) => caseElement.name === newCaseName\n        ) === undefined\n      ) {\n        break;\n      }\n      i++;\n    }\n    addCase({\n      ...caseData,\n      caseId: newCaseId,\n      name: newCaseName,\n    });\n    const newIdLines = selectedLines?.lines.map((lineElement) => {\n      return { ...lineElement, lineId: uuid() };\n    });\n    if (newIdLines !== undefined) {\n      addPage({\n        id: { groupId: caseData.groupId, caseId: newCaseId },\n        lines: newIdLines,\n      });\n    }\n  }\n\n  return (\n    <Box mb={2}>\n      <HStack h={\"20%\"} w={\"100%\"} pl={5}>\n        <Text fontWeight={\"bold\"} fontSize={20}>\n          {caseData.name}\n        </Text>\n        <h2> {groupName}</h2>\n        <Spacer />\n        <HStack pr={5}>\n          <BsFillEyeSlashFill />\n          <Switch onChange={(e) => handleHidden(e)} isChecked={hidden} />\n        </HStack>\n        <Button leftIcon={<EditIcon />} size={\"sm\"} onClick={onOpenEdit}>\n          Editar Caso\n        </Button>\n        <Button leftIcon={<DeleteIcon />} size={\"sm\"} onClick={onOpenRemove}>\n          {\" \"}\n          Eliminar Caso{\" \"}\n        </Button>\n        <Menu>\n          <MenuButton\n            as={IconButton}\n            icon={<Dots />}\n            size={\"sm\"}\n            syle={{ zIndex: 99 }}\n          />\n          <MenuList>\n            <MenuItem\n              icon={<FaFileDownload />}\n              fontSize={\"sm\"}\n              onClick={handleLayoutLoad}\n            >\n              Cargar Layout\n            </MenuItem>\n            <MenuItem\n              icon={<BiDuplicate />}\n              fontSize={\"sm\"}\n              onClick={duplicateCase}\n            >\n              Duplicar Caso\n            </MenuItem>\n            <MenuItem icon={<FiDelete />} fontSize={\"sm\"} onClick={onOpenLines}>\n              Borrar Lineas\n            </MenuItem>\n          </MenuList>\n        </Menu>\n      </HStack>\n      <EditCase isOpen={isOpenEdit} onClose={onCloseEdit} {...caseData} />\n      <DeleteItem\n        isOpen={isOpenRemove}\n        onClose={onCloseRemove}\n        groupId={caseData.groupId}\n        caseId={caseData.caseId}\n      />\n      <DeleteLinesModal\n        isOpen={isOpenLines}\n        onClose={onCloseLines}\n        caseIdentifier={{ groupId: caseData.groupId, caseId: caseData.caseId }}\n      />\n    </Box>\n  );\n};\n\nexport default TopBar;\n","import {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerBody,\n  DrawerFooter,\n  VStack,\n  Button,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  FormControl,\n  FormLabel,\n  HStack,\n  Center,\n  Checkbox,\n  Textarea,\n  FormErrorMessage,\n  FormHelperText,\n  Spacer,\n  useDisclosure,\n  Text,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { caseIdentifier, IArrayData } from \"../../../Redux/Models/InputModel\";\nimport { useStoreActions } from \"../../../Redux/Store\";\nimport LayoutLines from \"./LayoutLines\";\nimport LayoutDrawer from \"./LayoutDrawer\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n  caseIdentifier: caseIdentifier;\n  lineId: string;\n  arrayData: IArrayData | undefined;\n  label: string;\n}\n\nfunction getRandom(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction generateArray(\n  size: number,\n  minValue: number,\n  maxValue: number,\n  distinct: boolean\n) {\n  var generatedArray = \"\";\n  const arrayValues = new Set();\n\n  if (distinct && maxValue - minValue < size - 1) {\n    return \"No se puede generar un arreglo con estos parámetros\";\n  }\n\n  for (var i = 0; i < size; i++) {\n    let randomValue = Infinity;\n    do {\n      randomValue = getRandom(minValue, maxValue + 1);\n    } while (distinct && arrayValues.has(randomValue));\n    arrayValues.add(randomValue);\n    generatedArray += randomValue + \" \";\n  }\n  return generatedArray;\n}\n\nconst ArrayGenDrawer = (props: PropTypes) => {\n  const { isOpen, onClose, caseIdentifier, lineId, arrayData, label } = props;\n\n  const [arrayValue, setArrayValue] = useState<string>(\n    arrayData !== undefined ? arrayData.value : \"\"\n  );\n  const [distinct, setDistinct] = useState<boolean>(\n    arrayData !== undefined ? arrayData.distinct : false\n  );\n  const [valid, setValid] = useState<\"size\" | \"min\" | \"max\" | \"none\">(\"none\");\n\n  const sizeRef = useRef<HTMLInputElement>(null);\n  const minValueRef = useRef<HTMLInputElement>(null);\n  const maxValueRef = useRef<HTMLInputElement>(null);\n\n  const updateArrayData = useStoreActions(\n    (actions) => actions.input.setLineArrayData\n  );\n\n  const {\n    isOpen: isOpenLayout,\n    onClose: onCloseLayout,\n    onOpen: onOpenLayout,\n  } = useDisclosure();\n\n  function handleGenerateArray() {\n    setValid(\"none\");\n    if (\n      sizeRef.current !== null &&\n      minValueRef.current !== null &&\n      maxValueRef.current !== null\n    ) {\n      const size = parseInt(sizeRef.current.value);\n      const minValue = parseInt(minValueRef.current.value);\n      const maxValue = parseInt(maxValueRef.current.value);\n\n      const newArray = generateArray(size, minValue, maxValue, distinct);\n\n      const arrayData: IArrayData = {\n        size: size,\n        minValue: minValue,\n        maxValue: maxValue,\n        distinct: distinct,\n        value: newArray,\n      };\n      setArrayValue(newArray);\n      updateArrayData({\n        caseIdentifier: caseIdentifier,\n        lineId: lineId,\n        arrayData: arrayData,\n      });\n    }\n  }\n\n  function checkValidity(e: React.ChangeEvent<HTMLTextAreaElement>) {\n    const localArrayVal = e.target.value;\n    let anyFails = false;\n    const arraySplitted = localArrayVal.split(\" \").filter((value) => {\n      const parsedValue = parseInt(value);\n      if (minValueRef.current !== null && maxValueRef.current !== null) {\n        if (parsedValue < parseInt(minValueRef.current.value)) {\n          setValid(\"min\");\n          anyFails = true;\n        }\n\n        if (parsedValue > parseInt(maxValueRef.current.value)) {\n          setValid(\"max\");\n          anyFails = true;\n        }\n      }\n      return value !== \"\";\n    });\n    if (\n      sizeRef.current !== null &&\n      arraySplitted.length !== parseInt(sizeRef.current.value)\n    ) {\n      setValid(\"size\");\n      anyFails = true;\n    }\n    console.log(arraySplitted);\n    if (!anyFails) setValid(\"none\");\n    setArrayValue(e.target.value);\n    if (arrayData !== undefined)\n      updateArrayData({\n        caseIdentifier: caseIdentifier,\n        lineId: lineId,\n        arrayData: { ...arrayData, value: e.target.value },\n      });\n  }\n\n  return (\n    <>\n      <Drawer isOpen={isOpen} placement=\"right\" size={\"sm\"} onClose={onClose}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>\n            <Text maxW={\"95%\"} isTruncated>\n              Generador de Arreglos - {label}\n            </Text>\n          </DrawerHeader>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              handleGenerateArray();\n            }}\n          >\n            <DrawerBody>\n              <FormControl isRequired>\n                <FormLabel> Tamaño del Arreglo</FormLabel>\n                <NumberInput defaultValue={arrayData?.size}>\n                  <NumberInputField ref={sizeRef} required />\n                  <NumberInputStepper>\n                    <NumberIncrementStepper />\n                    <NumberDecrementStepper />\n                  </NumberInputStepper>\n                </NumberInput>\n              </FormControl>\n              <HStack mt={5}>\n                <FormControl isRequired>\n                  <FormLabel> Valor Mínimo</FormLabel>\n                  <NumberInput defaultValue={arrayData?.minValue}>\n                    <NumberInputField ref={minValueRef} required />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </FormControl>\n                <FormControl isRequired>\n                  <FormLabel> Valor Máximo</FormLabel>\n                  <NumberInput defaultValue={arrayData?.maxValue}>\n                    <NumberInputField ref={maxValueRef} required />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </FormControl>\n              </HStack>\n              <Center mt={5}>\n                <Checkbox\n                  isChecked={distinct}\n                  onChange={(e) => setDistinct(e.target.checked)}\n                >\n                  Valores Distintos\n                </Checkbox>\n              </Center>\n              <FormControl mt={5} isInvalid={valid !== \"none\"}>\n                <FormLabel>\n                  <HStack>\n                    <span>Arreglo Generado:</span>\n                    <Spacer />\n                    <Link to={`/array/${lineId}`}>\n                      <Button size=\"sm\" variant=\"link\">\n                        Ver Raw\n                      </Button>\n                    </Link>\n                  </HStack>\n                </FormLabel>\n                <Textarea\n                  h={valid !== \"none\" ? \"170px\" : \"195px\"}\n                  value={arrayValue}\n                  onChange={(e) => checkValidity(e)}\n                ></Textarea>\n                <FormErrorMessage>\n                  {valid === \"size\" && (\n                    <span>El tamaño del arreglo no coincide</span>\n                  )}\n                  {valid === \"min\" && (\n                    <span>Algún valor del arreglo es menor </span>\n                  )}\n                  {valid === \"max\" && (\n                    <span>Algún valor del arreglo es mayor </span>\n                  )}\n                </FormErrorMessage>\n              </FormControl>\n            </DrawerBody>\n\n            <DrawerFooter>\n              <VStack w={\"100%\"}>\n                <HStack w={\"100%\"}>\n                  <Button isFullWidth size={\"sm\"} colorScheme=\"blue\">\n                    Ver Redacción\n                  </Button>\n                  <Button\n                    isFullWidth\n                    size={\"sm\"}\n                    colorScheme=\"blue\"\n                    onClick={onOpenLayout}\n                  >\n                    Ver Layout\n                  </Button>\n                </HStack>\n                <Button\n                  isFullWidth\n                  colorScheme=\"red\"\n                  size={\"sm\"}\n                  onClick={() => {\n                    setValid(\"none\");\n                    setArrayValue(\"\");\n                  }}\n                >\n                  Reiniciar\n                </Button>\n                <Button\n                  type=\"submit\"\n                  isFullWidth\n                  colorScheme=\"green\"\n                  // onClick={() => handleGenerateArray()}\n                >\n                  Generar\n                </Button>\n              </VStack>\n            </DrawerFooter>\n          </form>\n        </DrawerContent>\n      </Drawer>\n      <LayoutDrawer\n        isOpen={isOpenLayout}\n        onClose={onCloseLayout}\n        placement={\"left\"}\n      />\n    </>\n  );\n};\nexport default ArrayGenDrawer;\n","import {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerBody,\n  DrawerFooter,\n  VStack,\n  Button,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  FormControl,\n  FormLabel,\n  HStack,\n  Center,\n  Checkbox,\n  Textarea,\n  FormErrorMessage,\n  FormHelperText,\n  Spacer,\n  Select,\n  useDisclosure,\n  Text,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  caseIdentifier,\n  IArrayData,\n  IMatrixData,\n} from \"../../../Redux/Models/InputModel\";\nimport { useStoreActions } from \"../../../Redux/Store\";\nimport LayoutLines from \"./LayoutLines\";\nimport LayoutDrawer from \"./LayoutDrawer\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n  caseIdentifier: caseIdentifier;\n  lineId: string;\n  matrixData: IMatrixData | undefined;\n  label: string;\n}\n\nfunction getRandom(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction generateMatrix(\n  rows: number,\n  columns: number,\n  minValue: number,\n  maxValue: number,\n  distinct: \"row\" | \"column\" | \"all\" | \"none\"\n) {\n  var generatedMatrix = \"\";\n  const rowValues = new Array(rows);\n  const columnValues = new Array(columns);\n\n  rowValues.fill(new Set());\n  columnValues.fill(new Set());\n\n  if (distinct !== \"none\" && maxValue - minValue < rows * columns - 1) {\n    return \"No se puede generar un arreglo con estos parámetros\";\n  }\n\n  for (var i = 0; i < rows; i++) {\n    for (var j = 0; j < columns; j++) {\n      let randomNumber: number;\n      switch (distinct) {\n        case \"row\": {\n          do {\n            randomNumber = getRandom(minValue, maxValue + 1);\n          } while (rowValues[i].has(randomNumber));\n          break;\n        }\n        case \"column\": {\n          do {\n            randomNumber = getRandom(minValue, maxValue + 1);\n          } while (columnValues[j].has(randomNumber));\n          break;\n        }\n        case \"all\": {\n          do {\n            randomNumber = getRandom(minValue, maxValue + 1);\n          } while (\n            rowValues[i].has(randomNumber) ||\n            columnValues[j].has(randomNumber)\n          );\n          break;\n        }\n        default: {\n          randomNumber = getRandom(minValue, maxValue + 1);\n        }\n      }\n\n      rowValues[i].add(randomNumber);\n      columnValues[j].add(randomNumber);\n      generatedMatrix += randomNumber + \" \";\n    }\n    generatedMatrix += \"\\n\";\n  }\n  return generatedMatrix;\n}\n\nconst ArrayGenDrawer = (props: PropTypes) => {\n  const { isOpen, onClose, caseIdentifier, lineId, matrixData, label } = props;\n\n  const [matrixValue, setMatrixValue] = useState<string>(\n    matrixData !== undefined ? matrixData.value : \"\"\n  );\n  const [distinct, setDistinct] = useState<\"row\" | \"column\" | \"all\" | \"none\">(\n    \"none\"\n  );\n\n  const rowsRef = useRef<HTMLInputElement>(null);\n  const colsRef = useRef<HTMLInputElement>(null);\n  const minValueRef = useRef<HTMLInputElement>(null);\n  const maxValueRef = useRef<HTMLInputElement>(null);\n\n  const updateMatrixData = useStoreActions(\n    (actions) => actions.input.setLineMatrixData\n  );\n\n  const {\n    isOpen: isOpenLayout,\n    onClose: onCloseLayout,\n    onOpen: onOpenLayout,\n  } = useDisclosure();\n\n  function handleGenerateArray() {\n    if (\n      rowsRef.current !== null &&\n      colsRef.current !== null &&\n      minValueRef.current !== null &&\n      maxValueRef.current !== null\n    ) {\n      const rows = parseInt(rowsRef.current.value);\n      const cols = parseInt(colsRef.current.value);\n      const minValue = parseInt(minValueRef.current.value);\n      const maxValue = parseInt(maxValueRef.current.value);\n\n      const newMatrix = generateMatrix(\n        rows,\n        cols,\n        minValue,\n        maxValue,\n        distinct\n      );\n\n      const matrixData: IMatrixData = {\n        rows: rows,\n        columns: cols,\n        minValue: minValue,\n        maxValue: maxValue,\n        distinct: distinct,\n        value: newMatrix,\n      };\n\n      setMatrixValue(newMatrix);\n      updateMatrixData({\n        caseIdentifier: caseIdentifier,\n        lineId: lineId,\n        matrixData: matrixData,\n      });\n    }\n  }\n\n  return (\n    <>\n      <Drawer isOpen={isOpen} placement=\"right\" size={\"sm\"} onClose={onClose}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>\n            <Text maxW={\"95%\"} isTruncated>\n              Generador de Matriz - {label}\n            </Text>\n          </DrawerHeader>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              handleGenerateArray();\n            }}\n          >\n            <DrawerBody>\n              <HStack>\n                <FormControl isRequired>\n                  <FormLabel> Columnas</FormLabel>\n                  <NumberInput defaultValue={matrixData?.columns}>\n                    <NumberInputField ref={colsRef} required />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </FormControl>\n                <FormControl isRequired>\n                  <FormLabel> Filas</FormLabel>\n                  <NumberInput defaultValue={matrixData?.rows}>\n                    <NumberInputField ref={rowsRef} required />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </FormControl>\n              </HStack>\n              <HStack mt={5}>\n                <FormControl isRequired>\n                  <FormLabel> Valor Mínimo</FormLabel>\n                  <NumberInput defaultValue={matrixData?.minValue}>\n                    <NumberInputField ref={minValueRef} required />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </FormControl>\n                <FormControl isRequired>\n                  <FormLabel> Valor Máximo</FormLabel>\n                  <NumberInput defaultValue={matrixData?.maxValue}>\n                    <NumberInputField ref={maxValueRef} required />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </FormControl>\n              </HStack>\n              <FormControl mt={5}>\n                <FormLabel> Valores distintos:</FormLabel>\n                <Select\n                  onChange={(e) => {\n                    const selectedValue = e.target.value;\n                    if (\n                      selectedValue === \"none\" ||\n                      selectedValue === \"row\" ||\n                      selectedValue === \"column\" ||\n                      selectedValue === \"all\"\n                    ) {\n                      setDistinct(selectedValue);\n                    }\n                  }}\n                >\n                  <option value=\"none\">Ninguno</option>\n                  <option value=\"row\">Filas</option>\n                  <option value=\"column\">Columnas</option>\n                  <option value=\"all\">Ambas</option>\n                </Select>\n              </FormControl>\n              <FormControl mt={5}>\n                <FormLabel>\n                  <HStack>\n                    <span>Matriz Generada:</span>\n                    <Spacer />\n                    <Link to={`/matrix/${lineId}`}>\n                      <Button size=\"sm\" variant=\"link\">\n                        Ver Raw\n                      </Button>\n                    </Link>\n                  </HStack>\n                </FormLabel>\n                <Textarea h={\"150px\"} value={matrixValue} />\n              </FormControl>\n            </DrawerBody>\n\n            <DrawerFooter>\n              <VStack w={\"100%\"}>\n                <HStack w={\"100%\"}>\n                  <Button isFullWidth size={\"sm\"} colorScheme=\"blue\">\n                    Ver Redacción\n                  </Button>\n                  <Button\n                    isFullWidth\n                    size={\"sm\"}\n                    colorScheme=\"blue\"\n                    onClick={onOpenLayout}\n                  >\n                    Ver Layout\n                  </Button>\n                </HStack>\n                <Button\n                  isFullWidth\n                  colorScheme=\"red\"\n                  size={\"sm\"}\n                  onClick={() => {\n                    setMatrixValue(\"\");\n                  }}\n                >\n                  Reiniciar\n                </Button>\n                <Button\n                  type=\"submit\"\n                  isFullWidth\n                  colorScheme=\"green\"\n                  // onClick={() => handleGenerateArray()}\n                >\n                  Generar\n                </Button>\n              </VStack>\n            </DrawerFooter>\n          </form>\n        </DrawerContent>\n      </Drawer>\n      <LayoutDrawer\n        isOpen={isOpenLayout}\n        onClose={onCloseLayout}\n        placement={\"left\"}\n      />\n    </>\n  );\n};\nexport default ArrayGenDrawer;\n","import * as React from \"react\";\nimport {\n  Input,\n  Editable,\n  Flex,\n  EditablePreview,\n  EditableInput,\n  Box,\n  HStack,\n  Select,\n  Textarea,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { DeleteIcon, DragHandleIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useRef, useState } from \"react\";\nimport {\n  caseIdentifier as ICaseIdentifier,\n  ILine,\n} from \"../../../Redux/Models/InputModel\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport _ from \"lodash\";\nimport { DraggableProvided } from \"react-beautiful-dnd\";\nimport ArrayGenDrawer from \"./ArrayGenDrawer\";\nimport MatrixGenDrawer from \"./MatrixGenDrawer\";\n\n// TODO: Focus automatico al presionar enter\n// TODO: no deberia de mostrar nada si ninguna caso esta seleccionado\n// TODO: Al borrar caso/grupo deberia ir al modo no seleccionado\n\ninterface PropTypes extends ILine {\n  caseIdentifier: ICaseIdentifier;\n  addLine: () => void;\n  hide?: boolean;\n  provided: DraggableProvided;\n  showInput?: boolean;\n}\n\nconst Line = (props: PropTypes) => {\n  const {\n    hide = false,\n    lineId,\n    type,\n    value,\n    label,\n    caseIdentifier,\n    addLine,\n    provided,\n    arrayData,\n    matrixData,\n    showInput = true,\n  } = props;\n\n  const [mode, setMode] = useState(type);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<any>(null);\n\n  const updateLine = useStoreActions((actions) => actions.input.updateLine);\n  const deleteLine = useStoreActions((actions) => actions.input.removeLine);\n  const lastCreated = useStoreState((state) => state.input.lastCreated);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  useEffect(() => {\n    handleUpdateLine();\n  }, [mode]);\n\n  useEffect(() => {\n    if (lastCreated === lineId) {\n      inputRef.current.focus();\n    }\n  }, [lastCreated]);\n\n  function handleUpdateLine() {\n    const label =\n      labelRef.current !== null ? labelRef.current.children[0].innerHTML : \"\";\n    const value = inputRef.current !== null ? inputRef.current.value : \"\";\n\n    updateLine({\n      lineId: lineId,\n      caseIdentifier: caseIdentifier,\n      lineData: {\n        lineId: lineId,\n        label: label,\n        value: value,\n        type: mode,\n        arrayData: arrayData,\n        matrixData: matrixData,\n      },\n    });\n  }\n\n  function handleEnterPress(e: React.KeyboardEvent<HTMLInputElement>) {\n    if (e.key === \"Enter\") {\n      inputRef.current?.blur();\n      addLine();\n    }\n  }\n\n  function handleSelectChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const value = e.currentTarget.value;\n    if (\n      value === \"line\" ||\n      value === \"multiline\" ||\n      value === \"array\" ||\n      value === \"matrix\"\n    ) {\n      setMode(value);\n    }\n  }\n\n  function handleDelete() {\n    deleteLine({\n      caseIdentifier: caseIdentifier,\n      lineId: lineId,\n    });\n  }\n\n  function renderSwitch() {\n    switch (mode) {\n      case \"multiline\":\n        return (\n          <Textarea\n            size={\"sm\"}\n            defaultValue={value}\n            ref={inputRef}\n            onBlur={() => handleUpdateLine()}\n          />\n        );\n      case \"line\":\n        return (\n          <Input\n            defaultValue={value}\n            // isFullWidth\n            size={\"sm\"}\n            ref={inputRef}\n            onBlur={() => handleUpdateLine()}\n            onKeyPress={(e) => handleEnterPress(e)}\n          />\n        );\n      case \"array\":\n        return (\n          <Input\n            size={\"sm\"}\n            disabled\n            ref={inputRef}\n            value={\n              arrayData === undefined\n                ? \"\"\n                : arrayData?.value.substring(0, 20) + \"...\"\n            }\n          />\n        );\n      case \"matrix\":\n        return (\n          <Input\n            size={\"sm\"}\n            disabled\n            ref={inputRef}\n            value={\n              matrixData === undefined\n                ? \"\"\n                : matrixData?.value.substring(0, 20) + \"...\"\n            }\n          />\n        );\n    }\n  }\n\n  return (\n    <Box w={\"100%\"} p={3} border={\"1px solid rgba(5,5,5,0.1)\"} borderRadius={5}>\n      <HStack w={\"100%\"} h={\"100%\"}>\n        <Box {...provided.dragHandleProps}>\n          <DragHandleIcon />\n        </Box>\n\n        {!hide && (\n          <Editable\n            isTruncated\n            defaultValue={label}\n            placeholder={\"---\"}\n            fontSize={\"sm\"}\n            ref={labelRef}\n            textOverflow={\"clip\"}\n            minW={\"40px\"}\n            maxW={\"40px\"}\n            onSubmit={() => handleUpdateLine()}\n          >\n            <EditablePreview />\n            <EditableInput />\n          </Editable>\n        )}\n        {showInput && renderSwitch()}\n        {!hide && (\n          <Select\n            size={\"sm\"}\n            w={\n              mode === \"array\" || mode === \"matrix\" ? 200 - 38 + \"px\" : \"200px\"\n            }\n            value={type}\n            onChange={(e) => handleSelectChange(e)}\n          >\n            <option value={\"line\"}> Linea </option>\n            <option value={\"multiline\"}> Multilínea</option>\n            <option value={\"array\"}> Arreglo </option>\n            <option value={\"matrix\"}> Matriz </option>\n          </Select>\n        )}\n        {(mode === \"array\" || mode === \"matrix\") && (\n          <EditIcon cursor={\"pointer\"} onClick={onOpen} />\n        )}\n        <DeleteIcon cursor={\"pointer\"} onClick={() => handleDelete()} />\n      </HStack>\n      {mode === \"array\" && (\n        <ArrayGenDrawer\n          isOpen={isOpen}\n          onClose={onClose}\n          lineId={lineId}\n          caseIdentifier={caseIdentifier}\n          arrayData={arrayData}\n          label={label}\n        />\n      )}\n      {mode === \"matrix\" && (\n        <MatrixGenDrawer\n          isOpen={isOpen}\n          onClose={onClose}\n          lineId={lineId}\n          caseIdentifier={caseIdentifier}\n          matrixData={matrixData}\n          label={label}\n        />\n      )}\n    </Box>\n  );\n};\n\n// export default Line;\nexport default React.memo(Line, (prevState, nextState) => {\n  console.log(_.isEqual(prevState, nextState));\n  return _.isEqual(prevState, nextState);\n});\n","import { useEffect, useState } from \"react\";\nimport { caseIdentifier, IInput, ILine } from \"../Redux/Models/InputModel\";\nimport { useStoreActions, useStoreState } from \"../Redux/Store\";\nimport { ICase } from \"../Redux/Models/CasesModel\";\nimport _ from \"lodash\";\nimport { uuid } from \"uuidv4\";\n\nexport const useInputPage = (caseData: ICase) => {\n  const [pageData, setPageData] = useState<ILine[]>([]);\n  const inputData = useStoreState((state) => state.input.data);\n  const addInputPage = useStoreActions((actions) => actions.input.addData);\n  const layout = useStoreState((state) => state.input.layout);\n\n  const caseIdentifier = {\n    groupId: caseData.groupId,\n    caseId: caseData.caseId,\n  };\n\n  useEffect(() => {\n    const inputPage = inputData.find((inputElement) => {\n      // return JSON.stringify(inputElement.id) === JSON.stringify(caseIdentifier);\n      return _.isEqual(inputElement.id, caseIdentifier);\n    });\n    if (inputPage === undefined) {\n      if (layout !== undefined) {\n        const layoutNewIds = layout.map((layoutElement) => {\n          layoutElement.lineId = uuid();\n          return layoutElement;\n        });\n        addInputPage({ id: caseIdentifier, lines: layoutNewIds });\n        console.log(\"Created New\", layoutNewIds);\n        setPageData(layoutNewIds);\n      } else {\n        addInputPage({ id: caseIdentifier, lines: [] });\n        setPageData([]);\n      }\n    } else {\n      setPageData(inputPage.lines);\n    }\n  }, [caseData, inputData]);\n\n  return { pageData, setPageData };\n};\n","import * as React from \"react\";\nimport Line from \"./Line\";\nimport { Box, Button, Center, Flex, VStack } from \"@chakra-ui/react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase } from \"../../../Redux/Models/CasesModel\";\nimport { useInputPage } from \"../../../Hooks/useInputPage\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport { useState } from \"react\";\nimport { ILine } from \"../../../Redux/Models/InputModel\";\n\ninterface PropTypes {\n  groupName: string;\n  caseData: ICase;\n}\nconst InputWindow = (props: PropTypes) => {\n  const { groupName, caseData } = props;\n\n  const hidden = useStoreState((state) => state.input.hidden);\n  const addLine = useStoreActions((action) => action.input.addLine);\n  const setLines = useStoreActions((action) => action.input.setLines);\n  const { pageData, setPageData } = useInputPage(caseData);\n\n  const caseIdentifier = { groupId: caseData.groupId, caseId: caseData.caseId };\n\n  const addLineToStore = useCallback(() => {\n    addLine({\n      caseIdentifier: { groupId: caseData.groupId, caseId: caseData.caseId },\n      line: {\n        lineId: uuid(),\n        type: \"line\",\n        value: \"\",\n        label: \"New\",\n        arrayData: undefined,\n        matrixData: undefined,\n      },\n    });\n  }, [addLine, caseData]);\n\n  function handleDragEnd(result: DropResult) {\n    if (!result.destination) return;\n\n    const startIndex = result.source.index;\n    const endIndex = result.destination.index;\n\n    const newArray = Array.from(pageData);\n    const [removed] = newArray.splice(startIndex, 1);\n    newArray.splice(endIndex, 0, removed);\n\n    setPageData(newArray);\n    setLines({\n      caseIdentifier,\n      lineArray: newArray,\n    });\n  }\n\n  return (\n    <VStack ml={5}>\n      <DragDropContext onDragEnd={(result) => handleDragEnd(result)}>\n        <Droppable droppableId={caseData.groupId + caseData.caseId}>\n          {(provided, snapshot) => (\n            <Box\n              w={\"full\"}\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {pageData.map((line, index) => (\n                <Draggable\n                  key={line.lineId}\n                  draggableId={line.lineId}\n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <Box\n                      w={\"full\"}\n                      mb={3}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                    >\n                      <Line\n                        {...line}\n                        provided={provided}\n                        key={line.lineId}\n                        hide={hidden}\n                        caseIdentifier={caseIdentifier}\n                        addLine={addLineToStore}\n                      />\n                    </Box>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </Box>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Center>\n        <Button size={\"sm\"} onClick={addLineToStore}>\n          +\n        </Button>\n      </Center>\n    </VStack>\n  );\n};\n\nexport default InputWindow;\n","import { useStoreState } from \"../Redux/Store\";\nimport { useEffect, useState } from \"react\";\nimport { ICase } from \"../Redux/Models/CasesModel\";\n\nexport const useSelectedData = () => {\n  const emptyObject: ICase = {\n    name: \"None\",\n    caseId: \"None\",\n    groupId: \"None\",\n    points: 0,\n    defined: false,\n  };\n\n  const [groupName, setGroupName] = useState(\"None\");\n  const [caseData, setCaseData] = useState<ICase>(emptyObject);\n\n  const selectedCase = useStoreState((state) => state.cases.selected);\n  const selectedData = useStoreState((state) => state.cases.selectedData);\n\n  useEffect(() => {\n    if (selectedCase.caseId !== \"None\" || selectedCase.groupId !== \"None\") {\n      const objectData = selectedData(\n        selectedCase.groupId,\n        selectedCase.caseId\n      );\n      setGroupName(objectData.groupName);\n      setCaseData(objectData.caseData);\n      return;\n    }\n    setGroupName(\"None\");\n    setCaseData(emptyObject);\n  }, [selectedCase]);\n\n  return { groupName, caseData };\n};\n","export default __webpack_public_path__ + \"static/media/sloth.f36a3615.png\";","import * as React from \"react\";\nimport TopBar from \"./TopBar\";\nimport {\n  Box,\n  Center,\n  Divider,\n  HStack,\n  Image,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport InputWindow from \"./InputWindow\";\nimport { useSelectedData } from \"../../../Hooks/useSelectedData\";\nimport sloth from \"../../../Assets/Images/sloth.png\";\n\nconst Input = () => {\n  const selectedData = useSelectedData();\n\n  return (\n    <Box w={\"100%\"} h={\"100%\"}>\n      {selectedData.caseData.caseId === \"None\" ? (\n        <Center h=\"60vh\">\n          <VStack>\n            <Box w={\"300px\"} h={\"300px\"}>\n              <Image src={sloth} w={\"full\"} />\n            </Box>\n            <Text fontWeight={\"bold\"}> Selecciona un caso para empezar</Text>\n            <Box fontSize={9}>\n              <a href=\"https://www.freepik.com/vectors/tree\">\n                Tree vector created by pch.vector - www.freepik.com\n              </a>\n            </Box>\n          </VStack>\n        </Center>\n      ) : (\n        <div>\n          <TopBar {...selectedData} />\n          <Divider mb={4} />\n          <InputWindow {...selectedData} />\n        </div>\n      )}\n    </Box>\n  );\n};\nexport default Input;\n","import * as React from \"react\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport { HStack, Flex, Box } from \"@chakra-ui/react\";\nimport Input from \"./Input/Input\";\n\nconst Main = () => {\n  return (\n    <Flex>\n      <Box w={\"30%\"}>\n        <Sidebar />\n      </Box>\n      <Input />\n    </Flex>\n  );\n};\n\nexport default Main;\n","import sanitizeMarkdown from \"sanitize-markdown\";\nimport { getFirstHidden } from \"web-vitals/dist/lib/getFirstHidden\";\nimport MarkdownIt from \"markdown-it\";\n\n// @ts-ignore\nimport katex from \"katex\";\n// @ts-ignore\nimport markdownMath from \"markdown-it-texmath\";\n\nfunction splitBetweenTwo(\n  input: string[],\n  firstOccurrence: string,\n  secondOccurrence: string\n) {\n  const startIndex = input.findIndex(\n    (element) => element.trim() === firstOccurrence\n  );\n  const endIndex = input.findIndex(\n    (element) =>\n      element.trim() === secondOccurrence || element.trim() === \"||end\"\n  );\n\n  return {\n    result: input.slice(startIndex + 1, endIndex),\n    index: { startIndex, endIndex },\n  };\n}\n\nfunction getLines(input: string) {\n  let lines = input.split(\"\\n\");\n  let firstGlobalIndex = lines.findIndex((line) => line === \"||input\");\n  let lastGlobalIndex = lines.findIndex((line) => line === \"||end\");\n  const occurrences = [\n    { first: \"||input\", second: \"||output\" },\n    { first: \"||output\", second: \"||description\" },\n    { first: \"||description\", second: \"||input\" },\n  ];\n  let iterator = 0;\n  let row: string[] = [],\n    inputTable: string[][] = [];\n\n  do {\n    const firstOccurrence = occurrences[iterator % 3].first;\n    const secondOccurrence = occurrences[iterator % 3].second;\n    const { result, index } = splitBetweenTwo(\n      lines,\n      firstOccurrence,\n      secondOccurrence\n    );\n    if (index.startIndex === -1 || index.endIndex === -1) break;\n    lines = lines.slice(index.endIndex);\n    if (iterator !== 0 && iterator % 3 === 0) {\n      inputTable.push(row);\n      row = [];\n    }\n    row.push(\n      result.reduce((text, line) => (text += \"<pre>\" + line + \"</pre>\"), \"\")\n      // \"<pre>\" + result.join(\"\") + \"</pre>\"\n    );\n    iterator++;\n  } while (iterator < 1000);\n  inputTable.push(row);\n  return {\n    inputTable: inputTable,\n    index: { startIndex: firstGlobalIndex, finalIndex: lastGlobalIndex + 1 },\n  };\n}\n\nexport const parse = (input: string, includeTable = true) => {\n  const parser = new MarkdownIt({\n    html: true,\n  }).use(markdownMath, { engine: katex, delimiters: \"dollars\" });\n  const sanitizedInput = sanitizeMarkdown(input, { allowedTags: [\"br\"] });\n  if (!includeTable) {\n    return parser.render(sanitizedInput.replaceAll(\"$$\", \"\\n$$$$\\n\"));\n  }\n  const { inputTable, index } = getLines(sanitizedInput);\n  const finalTableOutput: string[] = [];\n  inputTable.forEach((row) => {\n    finalTableOutput.push(\"|\" + row.join(\"|\") + \"|\");\n  });\n  const sanitizedArray = sanitizedInput.split(\"\\n\");\n  const firstPart = sanitizedArray.slice(0, index.startIndex);\n  firstPart.push(\"| Entrada | Salida | Descripcion| \");\n  firstPart.push(\"| - | - | -| \");\n  const secondPart = sanitizedArray.slice(index.finalIndex);\n  // | Entrada | Salida | Descripcion|\n  // |-|-|-|\n  const finalArray = [...firstPart, ...finalTableOutput, ...secondPart];\n  const finalString = finalArray.join(\"\\n\");\n  return parser.render(finalString.replaceAll(\"$$\", \"\\n$$$$\\n\"));\n};\n","import * as React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport \"katex/dist/katex.min.css\";\nimport {\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Text,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  useColorModeValue,\n} from \"@chakra-ui/react\"; // `rehype-katex` does not import the CSS for you\nimport { parse } from \"./Markdown/Parser\";\nimport \"./Markdown/MarkdownDark.css\";\nimport \"./Markdown/MarkdownLight.css\";\nimport \"./Markdown/Markdown.css\";\nimport MarkdownIt from \"markdown-it\";\n// @ts-ignore\nimport markdownMath from \"markdown-it-texmath\";\n// @ts-ignore\nimport katex from \"katex\";\nimport ReactMde from \"react-mde\";\nimport \"./Markdown/EditorStyles/react-mde-all.css\";\nimport MarkdownEditor from \"./MarkdownEditor\";\nimport { useWriting } from \"../../Hooks/useWriting\";\nimport { useStoreActions } from \"../../Redux/Store\";\n\nconst Display = () => {\n  const markdownElements = useWriting();\n\n  const [markdown, setMarkdown] = useState(markdownElements[0]);\n  const [showEditor, setShowEditor] = useState(true);\n  const [showAll, setShowAll] = useState(false);\n\n  const divRef = useRef<HTMLDivElement>(null);\n  const generateRef = useRef<HTMLButtonElement>(null);\n  const hideRef = useRef<HTMLButtonElement>(null);\n  const showAllRef = useRef<HTMLButtonElement>(null);\n  const tabIndexRef = useRef(0);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", (key) => handleKeyPress(key));\n    return () =>\n      document.removeEventListener(\"keydown\", (key) => handleKeyPress(key));\n  }, []);\n\n  useEffect(() => {\n    console.log(markdownElements);\n    if (divRef.current != null)\n      divRef.current.innerHTML = showAll\n        ? parse(markdownElements[0])\n        : parse(\n            markdownElements[tabIndexRef.current],\n            tabIndexRef.current === 4 || tabIndexRef.current === 0\n          );\n\n    setMarkdown(markdownElements[tabIndexRef.current]);\n  }, [markdownElements, showAll, tabIndexRef.current]);\n\n  const style = useColorModeValue(\"light\", \"dark\");\n  const setStoreMarkdown = useStoreActions((actions) => actions.writing.set);\n\n  function handleKeyPress(key: KeyboardEvent) {\n    console.log(key);\n    if (key.ctrlKey && key.which === 83 && generateRef.current !== null) {\n      generateRef.current.click();\n    }\n    if (key.ctrlKey && key.which === 72 && hideRef.current !== null) {\n      hideRef.current.click();\n      hideRef.current.focus();\n    }\n    if (key.ctrlKey && key.which === 77 && showAllRef.current !== null) {\n      showAllRef.current.click();\n    }\n  }\n\n  function generateMarkdown() {\n    setStoreMarkdown({\n      markdown,\n      index: tabIndexRef.current,\n    });\n    // if (divRef.current != null) divRef.current.innerHTML = parse(markdown);\n  }\n\n  return (\n    <>\n      <Flex direction={\"column\"} w={\"100%\"} mb={10}>\n        <Tabs\n          size={\"sm\"}\n          isFitted\n          w={\"100%\"}\n          onChange={(index) => {\n            setMarkdown(markdownElements[index]);\n            tabIndexRef.current = index;\n          }}\n        >\n          <TabList>\n            <Tab>Todo</Tab>\n            <Tab>Descripción</Tab>\n            <Tab>Entrada</Tab>\n            <Tab>Salida</Tab>\n            <Tab>Ejemplo</Tab>\n            <Tab>Limites</Tab>\n          </TabList>\n        </Tabs>\n        <Flex mt={5}>\n          {showEditor && (\n            <Box className={style}>\n              <ReactMde value={markdown} onChange={setMarkdown} />{\" \"}\n            </Box>\n          )}\n          <Box\n            ml={5}\n            w={showEditor ? \"50%\" : \"100%\"}\n            ref={divRef}\n            className={style + \" markdown\"}\n          />\n        </Flex>\n      </Flex>\n      <Box pos={\"fixed\"} left={10} bottom={5}>\n        <Button\n          ref={hideRef}\n          size={\"sm\"}\n          colorScheme={\"twitter\"}\n          onClick={() => setShowEditor(!showEditor)}\n        >\n          <HStack>\n            <Text> Ocultar Editor</Text>\n            <Text fontSize={\"smaller\"} opacity={\"0.5\"}>\n              Ctrl + H\n            </Text>\n          </HStack>\n        </Button>\n      </Box>\n      <Box pos={\"fixed\"} right={10} bottom={5}>\n        <Button\n          mr={4}\n          colorScheme={\"blue\"}\n          size={\"sm\"}\n          ref={showAllRef}\n          onClick={() => setShowAll(!showAll)}\n          disabled={tabIndexRef.current === 0}\n        >\n          <HStack>\n            <Text> {showAll ? \"Ocultar Todo\" : \"Mostrar Todo\"}</Text>\n            <Text fontSize={\"smaller\"} opacity={\"0.5\"}>\n              Ctrl + M\n            </Text>\n          </HStack>\n        </Button>\n        <Button\n          ref={generateRef}\n          size={\"sm\"}\n          colorScheme={\"green\"}\n          onClick={() => generateMarkdown()}\n        >\n          <HStack>\n            <Text> Generar </Text>\n            <Text fontSize={\"smaller\"} opacity={\"0.5\"}>\n              Ctrl + S\n            </Text>\n          </HStack>\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default Display;\n","import { useStoreState } from \"../Redux/Store\";\nimport { useState, useEffect } from \"react\";\n\nexport const useWriting = () => {\n  const [markdownState, setMarkdownState] = useState<string[]>([]);\n\n  const all = useStoreState((state) => state.writing.all);\n  const description = useStoreState((state) => state.writing.description);\n  const input = useStoreState((state) => state.writing.input);\n  const output = useStoreState((state) => state.writing.output);\n  const example = useStoreState((state) => state.writing.example);\n  const limits = useStoreState((state) => state.writing.limits);\n\n  useEffect(() => {\n    console.log(\"Changed\");\n    setMarkdownState([all, description, input, output, example, limits]);\n  }, [all, description, input, output, example, limits]);\n\n  return markdownState;\n};\n","import * as React from \"react\";\nimport Display from \"./Display\";\nimport { HStack } from \"@chakra-ui/react\";\n\nconst WritingWindow = () => {\n  return (\n    <HStack>\n      <Display />\n    </HStack>\n  );\n};\n\nexport default WritingWindow;\n","import * as React from \"react\";\nimport { Container, HStack } from \"@chakra-ui/react\";\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\";\nimport { BiCodeBlock as CodeIcon } from \"react-icons/bi\";\nimport { BsPencil as EditIcon } from \"react-icons/bs\";\nimport { IoMdCheckmarkCircleOutline as CheckIcon } from \"react-icons/io\";\nimport Sidebar from \"./Cases/Sidebar/Sidebar\";\nimport Main from \"./Cases/Main\";\nimport WritingWindow from \"./Writing/WritingWindow\";\n\nconst MainWindow = () => {\n  return (\n    <>\n      <Container maxW={\"container.lg\"} mt={3} h={\"80vh\"} padding={\"0\"}>\n        <Tabs variant={\"enclosed\"} size={\"sm\"}>\n          <TabList>\n            <Tab>\n              <HStack>\n                <CodeIcon />\n                <p>Código Solución</p>\n              </HStack>\n            </Tab>\n            <Tab>\n              <HStack>\n                <CheckIcon />\n                <p>Casos de Prueba</p>\n              </HStack>\n            </Tab>\n            <Tab>\n              <HStack>\n                <EditIcon />\n                <p>Redacción</p>\n              </HStack>\n            </Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>1</TabPanel>\n            <TabPanel>\n              <Main />\n            </TabPanel>\n            <TabPanel>\n              <WritingWindow />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n        {/*<Sidebar />*/}\n      </Container>\n    </>\n  );\n};\n\nexport default MainWindow;\n","import { CopyIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Button,\n  Container,\n  HStack,\n  Spacer,\n  Text,\n  Textarea,\n  useClipboard,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { FcCheckmark } from \"react-icons/fc\";\nimport { useParams } from \"react-router-dom\";\nimport { useInputPage } from \"../Hooks/useInputPage\";\nimport { useSelectedData } from \"../Hooks/useSelectedData\";\nimport { useStoreState } from \"../Redux/Store\";\n\ninterface Params {\n  lineId: string;\n}\n\nconst RawArray = () => {\n  const { lineId } = useParams<Params>();\n\n  const caseData = useSelectedData();\n  const arrayData = useInputPage(caseData.caseData).pageData.find(\n    (lineElement) => lineElement.lineId === lineId\n  )?.arrayData;\n\n  const { hasCopied, onCopy } = useClipboard(\n    arrayData !== undefined ? arrayData.value : \"\"\n  );\n  console.log(arrayData);\n\n  return (\n    <Container maxW=\"container.lg\">\n      <HStack mt={5} mb={2}>\n        <Text fontSize={\"xl\"} fontWeight={\"bold\"}>\n          Arreglo:\n        </Text>\n        <Spacer />\n        <Text>\n          Tamaño: {arrayData?.size} | Mínimo: {arrayData?.minValue} | Máximo:\n          {arrayData?.maxValue}\n        </Text>\n        <Spacer />\n        <Box w={\"100px\"}>\n          <Button size=\"sm\" onClick={onCopy}>\n            {hasCopied ? (\n              <HStack>\n                <span>Copiado!</span>\n                <FcCheckmark />\n              </HStack>\n            ) : (\n              <HStack>\n                <span>Copiar</span>\n                <CopyIcon />\n              </HStack>\n            )}\n          </Button>\n        </Box>\n      </HStack>\n\n      <Textarea h={\"80vh\"} value={arrayData?.value} />\n    </Container>\n  );\n};\n\nexport default RawArray;\n","import { CopyIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Button,\n  Container,\n  HStack,\n  Spacer,\n  Text,\n  Textarea,\n  useClipboard,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { FcCheckmark } from \"react-icons/fc\";\nimport { useParams } from \"react-router-dom\";\nimport { useInputPage } from \"../Hooks/useInputPage\";\nimport { useSelectedData } from \"../Hooks/useSelectedData\";\nimport { useStoreState } from \"../Redux/Store\";\n\ninterface Params {\n  lineId: string;\n}\n\nconst RawMatrix = () => {\n  const { lineId } = useParams<Params>();\n\n  const caseData = useSelectedData();\n  const matrixData = useInputPage(caseData.caseData).pageData.find(\n    (lineElement) => lineElement.lineId === lineId\n  )?.matrixData;\n\n  const { hasCopied, onCopy } = useClipboard(\n    matrixData !== undefined ? matrixData.value : \"\"\n  );\n  console.log(matrixData);\n\n  return (\n    <Container maxW=\"container.lg\">\n      <HStack mt={5} mb={2}>\n        <Text fontSize={\"xl\"} fontWeight={\"bold\"}>\n          Arreglo:\n        </Text>\n        <Spacer />\n        <Text>\n          Filas: {matrixData?.rows} | Columnas: {matrixData?.columns} | Mínimo:{\" \"}\n          {matrixData?.minValue} | Máximo:\n          {matrixData?.maxValue}\n        </Text>\n        <Spacer />\n        <Box w={\"100px\"}>\n          <Button size=\"sm\" onClick={onCopy}>\n            {hasCopied ? (\n              <HStack>\n                <span>Copiado!</span>\n                <FcCheckmark />\n              </HStack>\n            ) : (\n              <HStack>\n                <span>Copiar</span>\n                <CopyIcon />\n              </HStack>\n            )}\n          </Button>\n        </Box>\n      </HStack>\n\n      <Textarea h={\"80vh\"} value={matrixData?.value} />\n    </Container>\n  );\n};\n\nexport default RawMatrix;\n","import * as React from \"react\";\nimport { ChakraProvider, theme } from \"@chakra-ui/react\";\nimport { useStoreRehydrated } from \"easy-peasy\";\nimport Navbar from \"./Components/Navbar\";\nimport Header from \"./Components/Header\";\nimport MainWindow from \"./Components/MainWindow\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport RawArray from \"./Pages/RawArray\";\nimport RawMatrix from \"./Pages/RawMatrix\";\nexport const App = () => {\n  const isRehydrated = useStoreRehydrated();\n\n  return (\n    <ChakraProvider theme={theme}>\n      {!isRehydrated ? (\n        <h1> Loading </h1>\n      ) : (\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route path=\"/array/:lineId\">\n              <RawArray />\n            </Route>\n            <Route path=\"/matrix/:lineId\">\n              <RawMatrix />\n            </Route>\n            <Route exact path=\"/\">\n              <>\n                <Header />\n                <MainWindow />\n              </>\n            </Route>\n          </Switch>\n        </Router>\n      )}\n    </ChakraProvider>\n  );\n};\n","import { ColorModeScript } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <ColorModeScript />\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}