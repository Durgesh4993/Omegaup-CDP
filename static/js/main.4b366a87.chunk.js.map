{"version":3,"sources":["ColorModeSwitcher.tsx","Components/Navbar.tsx","Redux/Models/TitleModel.ts","Redux/Models/CasesModel.ts","Redux/Store.ts","Redux/Models/InputModel.ts","Components/Header.tsx","Components/Cases/Sidebar/CaseItem.tsx","Components/Cases/Sidebar/EditGroupModal.tsx","Components/Cases/Sidebar/EditGroup.tsx","Components/Cases/Sidebar/DeleteGroup.tsx","Components/Cases/Sidebar/GroupItem.tsx","Components/Cases/Sidebar/Navigation.tsx","Util/chakraColors.ts","Components/Cases/Sidebar/AddCaseModal.tsx","Components/Cases/Sidebar/AddGroupModal.tsx","Components/Cases/Sidebar/Add.tsx","Components/Cases/Sidebar/Sidebar.tsx","Components/Cases/Sidebar/EditCaseModal.tsx","Components/Cases/Sidebar/EditCase.tsx","Components/Cases/Sidebar/DeleteItem.tsx","Components/Cases/Input/DeleteLinesModal.tsx","Components/Cases/Input/TopBar.tsx","Components/Cases/Input/Line.tsx","Components/Cases/Input/InputWindow.tsx","Hooks/useInputPage.ts","Assets/Images/sloth.png","Components/Cases/Input/Input.tsx","Hooks/useSelectedData.ts","Components/Cases/Main.tsx","Components/MainWindow.tsx","App.tsx","index.tsx"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","aria-label","Navbar","boxShadow","maxW","align","height","w","src","mr","label","TitleModel","titleName","setTitleName","action","state","payload","calculatePoints","maxPoints","notDefinedCount","forEach","element","name","cases","caseElement","defined","points","individualPoints","map","CasesModel","data","groupId","uuid","selected","caseId","selectedData","computed","groupState","find","groupElement","groupName","caseState","caseData","addGroup","push","editGroup","groupIndex","findIndex","undefined","removeGroup","filter","addCase","editCase","case","lastId","newGroup","caseIndex","removeCase","setSelected","globalModel","title","input","layout","hidden","lastCreated","addData","inputPage","removeData","id","inputElement","addLine","lineGroup","_","isEqual","caseIdentifier","lines","line","lineId","setLines","lineArray","removeLine","lineElement","removeAllLines","lineData","updateLine","lineIndex","setHidden","hide","setLayout","handleGroupChange","newGroupId","GlobalStore","createStore","persist","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","Header","titleText","setTitleText","actions","useState","isEditTitleActive","setIsEditTitleActive","useDisclosure","isOpen","onOpen","onClose","cancelRef","useRef","mt","defaultValue","fontWeight","placeholder","onEdit","onSubmit","event","value","onCancel","width","colorScheme","leastDestructiveRef","isCentered","ref","ml","sessionStorage","clear","window","location","reload","CaseItem","shouldShowPoints","setSelectedCase","selectedCase","isActive","toFixed","React","AddGroupModal","autoPoints","setAutoPoints","nameRef","pointsRef","definedRef","groupData","toast","useToast","e","preventDefault","isValid","current","description","status","isClosable","handleSubmit","isRequired","onChange","target","valueAsNumber","min","max","isDisabled","isChecked","isFullWidth","type","EditGroup","mb","EditGroupModal","DeleteGroup","GroupItem","showCases","setShowCases","borderColor","isLargeScreen","useMediaPredicate","isOpenEdit","onOpenEdit","onCloseEdit","isOpenRemove","onOpenRemove","onCloseRemove","direction","my","cursor","transition","_hover","borderLeft","paddingLeft","pageX","currentTarget","offsetLeft","clientWidth","handleCasesToggleClick","parseFloat","Math","round","isLazy","as","IconButton","syle","zIndex","ChevronDown","ChevronUp","motion","div","initial","opacity","y","animate","style","display","Navigation","group","key","colors","transparent","black","white","whiteAlpha","50","100","200","300","400","500","600","700","800","900","blackAlpha","gray","red","orange","yellow","green","teal","blue","cyan","purple","pink","linkedin","facebook","messenger","whatsapp","twitter","telegram","AddCaseModal","selectedValue","setSelectedValue","hasGroup","setHasGroup","caseName","pointsDefined","darkTheme","options","selectedGroupId","obj","theme","primary","chakraColors","primary25","primary50","primary75","neutral0","neutral5","neutral10","neutral20","neutral30","neutral40","neutral50","neutral80","neutral90","Add","submitButton","edit","Sidebar","divBorderColor","isOpenAdd","onOpenAdd","onCloseAdd","x","h","borderRight","EditCaseModal","EditCase","DeleteItem","selectCase","DeleteLinesModal","deleteAllLines","TopBar","isOpenLines","onOpenLines","onCloseLines","pl","pr","checked","Line","provided","mode","setMode","labelRef","inputRef","deleteLine","handleUpdateLine","children","innerHTML","useEffect","focus","p","border","borderRadius","dragHandleProps","DragHandle","isTruncated","textOverflow","minW","onBlur","disabled","onKeyPress","blur","handleEnterPress","handleSelectChange","Edit","Delete","prevState","nextState","console","log","InputWindow","pageData","setPageData","inputData","addInputPage","useInputPage","addLineToStore","useCallback","onDragEnd","result","destination","startIndex","source","index","endIndex","newArray","Array","from","splice","removed","handleDragEnd","droppableId","snapshot","droppableProps","innerRef","draggableId","draggableProps","Input","emptyObject","setGroupName","setCaseData","objectData","useSelectedData","sloth","href","Main","MainWindow","padding","App","isRehydrated","useStoreRehydrated","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.4b366a87.chunk.js","sourcesContent":["import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","import * as React from \"react\";\nimport { Box, Spacer, Flex, Image, Container, Tooltip } from \"@chakra-ui/react\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { ColorModeSwitcher } from \"../ColorModeSwitcher\";\n\nconst Navbar = () => {\n  return (\n    <Box boxShadow={\"md\"}>\n      <Container maxW={\"container.lg\"}>\n        <Flex align={\"center\"} height={\"38px\"}>\n          <Box w={\"86px\"}>\n            <Image\n              w={\"full\"}\n              src={\"https://omegaup.com/preguntas//omegaup_curves.png\"}\n            />\n          </Box>\n          <Spacer />\n          <Box mr={5}>\n            <ColorModeSwitcher />\n          </Box>\n          <Box>\n            <Tooltip\n              label={\"Colabora con nosotros en Github!\"}\n              aria-label={\"Colabora\"}\n            >\n              <span>\n                <AiFillGithub size={25} />\n              </span>\n            </Tooltip>\n          </Box>\n        </Flex>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Navbar;\n","import { action, Action } from \"easy-peasy\";\n\nexport interface ITitleModel {\n  titleName: string;\n  setTitleName: Action<ITitleModel, string>;\n}\n\nconst TitleModel = <ITitleModel>{\n  titleName: \"Nuevo Problema\",\n  setTitleName: action((state, payload) => {\n    state.titleName = payload;\n  }),\n};\n\nexport default TitleModel;\n","import { action, Action, Computed, computed } from \"easy-peasy\";\nimport { uuid } from \"uuidv4\";\n\nexport interface IGroup {\n  groupId: string;\n  name: string;\n  points: number;\n  defined: boolean;\n  cases: ICase[];\n}\n\nexport interface ICase {\n  caseId: string;\n  name: string;\n  groupId: string;\n  points: number;\n  defined: boolean;\n}\n\ninterface caseIndentifier {\n  groupId: string;\n  caseId: string;\n}\n\nexport interface ICasesModel {\n  data: IGroup[];\n  selected: caseIndentifier;\n  selectedData: Computed<\n    ICasesModel,\n    (groupId: string, caseId: string) => { groupName: string; caseData: ICase }\n  >;\n\n  addGroup: Action<ICasesModel, IGroup>;\n  editGroup: Action<ICasesModel, IGroup>;\n  removeGroup: Action<ICasesModel, string>;\n\n  addCase: Action<ICasesModel, ICase>;\n  editCase: Action<ICasesModel, { case: ICase; lastId: string }>;\n  removeCase: Action<ICasesModel, caseIndentifier>;\n\n  setSelected: Action<ICasesModel, caseIndentifier>;\n}\n\nfunction calculatePoints(state: IGroup[]) {\n  let maxPoints = 100;\n  let notDefinedCount = 0;\n\n  state.forEach((element) => {\n    if (element.name === \"Sin Grupo\") {\n      element.cases.forEach((caseElement) => {\n        if (caseElement.defined) {\n          maxPoints -= caseElement.points ? caseElement.points : 0;\n        } else {\n          notDefinedCount++;\n        }\n      });\n    } else {\n      if (element.defined) {\n        maxPoints -= element.points ? element.points : 0;\n      } else {\n        notDefinedCount++;\n      }\n    }\n  });\n\n  let individualPoints = maxPoints / notDefinedCount;\n\n  state = state.map((element) => {\n    if (element.name === \"Sin Grupo\") {\n      element.cases = element.cases.map((caseElement) => {\n        if (!caseElement.defined) {\n          caseElement.points = individualPoints;\n        }\n        return caseElement;\n      });\n    }\n    if (!element.defined) {\n      element.points = individualPoints;\n    }\n    return element;\n  });\n\n  return state;\n}\n\nconst CasesModel = {\n  data: [\n    {\n      groupId: uuid(),\n      name: \"Sin Grupo\",\n      cases: [],\n      defined: false,\n      points: 0,\n    },\n  ],\n  selected: {\n    groupId: \"None\",\n    caseId: \"None\",\n  },\n  selectedData: computed((state) => {\n    return (groupId, caseId) => {\n      const groupState = state.data.find(\n        (groupElement) => groupElement.groupId === groupId\n      );\n\n      const groupName = groupState ? groupState.name : \"None\";\n\n      const caseState = groupState?.cases.find(\n        (caseElement) => caseElement.caseId === caseId\n      );\n\n      if (caseState) return { groupName: groupName, caseData: caseState };\n    };\n  }),\n  addGroup: action((state, payload) => {\n    state.data.push(payload);\n    state.data = calculatePoints(state.data);\n  }),\n  editGroup: action((state, payload) => {\n    const groupIndex = state.data.findIndex(\n      (groupElement) => groupElement.groupId === payload.groupId\n    );\n\n    if (groupIndex !== undefined) state.data[groupIndex] = payload;\n\n    state.data = calculatePoints(state.data);\n  }),\n  removeGroup: action((state, payload) => {\n    state.data = state.data.filter((element) => {\n      return element.groupId !== payload;\n    });\n    state.data = calculatePoints(state.data);\n  }),\n  addCase: action((state, payload) => {\n    const groupState = state.data.find(\n      (groupElement) => groupElement.groupId === payload.groupId\n    );\n    groupState?.cases.push(payload);\n    state.data = calculatePoints(state.data);\n  }),\n  editCase: action((state, payload) => {\n    const { case: caseData, lastId } = payload;\n\n    const groupState = state.data.find(\n      (groupElement) => groupElement.groupId === lastId\n    );\n\n    if (lastId !== caseData.groupId) {\n      if (groupState) {\n        groupState.cases = groupState.cases.filter(\n          (caseElement) => caseElement.caseId !== caseData.caseId\n        );\n      }\n\n      const newGroup = state.data.find(\n        (groupElement) => groupElement.groupId === caseData.groupId\n      );\n\n      newGroup?.cases.push(caseData);\n      state.data = calculatePoints(state.data);\n      return;\n    }\n\n    const caseIndex = groupState?.cases.findIndex(\n      (caseElement) => caseElement.caseId === caseData.caseId\n    );\n\n    if (groupState !== undefined && caseIndex !== undefined) {\n      groupState.cases[caseIndex] = caseData;\n    }\n\n    state.data = calculatePoints(state.data);\n  }),\n\n  removeCase: action((state, payload) => {\n    const groupState = state.data.find(\n      (groupElement) => groupElement.groupId === payload.groupId\n    );\n\n    if (groupState !== undefined) {\n      groupState.cases = groupState.cases.filter(\n        (caseElement) => caseElement.caseId !== payload.caseId\n      );\n    }\n    state.data = calculatePoints(state.data);\n  }),\n  setSelected: action((state, payload) => {\n    state.selected = payload;\n  }),\n} as ICasesModel;\n\nexport default CasesModel;\n","import title, { ITitleModel } from \"./Models/TitleModel\";\nimport cases, { ICasesModel } from \"./Models/CasesModel\";\nimport input, { IInputModel } from \"./Models/InputModel\";\n\nimport { createStore, createTypedHooks, persist } from \"easy-peasy\";\n\nconst globalModel = {\n  title,\n  cases,\n  input,\n};\n\ninterface IGlobalModel {\n  title: ITitleModel;\n  cases: ICasesModel;\n  input: IInputModel;\n}\n\nconst GlobalStore = createStore(persist(globalModel));\nexport default GlobalStore;\n\nconst typedHooks = createTypedHooks<IGlobalModel>();\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n","import { action, Action, computed, Computed } from \"easy-peasy\";\nimport _ from \"lodash\";\n\nexport interface ILine {\n  lineId: string;\n  type: \"line\" | \"multiline\" | \"array\" | \"matrix\";\n  label: string;\n  value: string;\n}\n\nexport interface IInput {\n  id: caseIdentifier;\n  lines: ILine[];\n}\n\nexport interface caseIdentifier {\n  groupId: string;\n  caseId: string;\n}\n\nexport interface IInputModel {\n  data: IInput[];\n  layout: ILine[] | undefined;\n  hidden: boolean;\n  lastCreated: string;\n\n  addData: Action<IInputModel, IInput>;\n  removeData: Action<IInputModel, caseIdentifier>;\n\n  addLine: Action<IInputModel, { caseIdentifier: caseIdentifier; line: ILine }>;\n  setLines: Action<\n    IInputModel,\n    {\n      caseIdentifier: caseIdentifier;\n      lineArray: ILine[];\n    }\n  >;\n  removeLine: Action<\n    IInputModel,\n    { caseIdentifier: caseIdentifier; lineId: string }\n  >;\n  removeAllLines: Action<IInputModel, caseIdentifier>;\n  lineData: Computed<\n    IInputModel,\n    (caseIdentifier: caseIdentifier, lineId: string) => ILine\n  >;\n  updateLine: Action<\n    IInputModel,\n    { caseIdentifier: caseIdentifier; lineId: string; lineData: ILine }\n  >;\n  handleGroupChange: Action<\n    IInputModel,\n    { caseId: string; newGroupId: string }\n  >;\n  setHidden: Action<IInputModel, boolean>;\n  setLayout: Action<IInputModel, ILine[]>;\n}\n\nconst InputModel = {\n  data: [],\n  layout: undefined,\n  hidden: false,\n  lastCreated: \"\",\n\n  addData: action((state, inputPage) => {\n    state.data.push(inputPage);\n  }),\n  removeData: action((state, id) => {\n    state.data.filter((inputElement) => {\n      return inputElement.id !== id;\n    });\n  }),\n  addLine: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, payload.caseIdentifier)\n    );\n    lineGroup?.lines.push(payload.line);\n    state.lastCreated = payload.line.lineId;\n  }),\n  setLines: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, payload.caseIdentifier)\n    );\n\n    if (lineGroup !== undefined) {\n      lineGroup.lines = payload.lineArray;\n    }\n  }),\n  removeLine: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, payload.caseIdentifier)\n    );\n    if (lineGroup !== undefined) {\n      lineGroup.lines = lineGroup?.lines.filter(\n        (lineElement) => lineElement.lineId !== payload.lineId\n      );\n    }\n  }),\n  removeAllLines: action((state, payload) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(payload, inputElement.id)\n    );\n\n    if (lineGroup !== undefined) {\n      lineGroup.lines = [];\n    }\n  }),\n  lineData: computed((state) => {\n    return (caseIdentifier, lineId) => {\n      const lineGroup = state.data.find(\n        (inputElement) => inputElement.id === caseIdentifier\n      );\n\n      const line = lineGroup?.lines.find(\n        (lineElement) => lineElement.lineId === lineId\n      );\n\n      if (line) return line;\n    };\n  }),\n  updateLine: action((state, { caseIdentifier, lineId, lineData }) => {\n    const lineGroup = state.data.find((inputElement) =>\n      _.isEqual(inputElement.id, caseIdentifier)\n    );\n\n    const lineIndex = lineGroup?.lines.findIndex(\n      (lineElement) => lineElement.lineId === lineId\n    );\n\n    if (lineGroup !== undefined && lineIndex !== undefined) {\n      lineGroup.lines[lineIndex] = lineData;\n    }\n  }),\n\n  setHidden: action((state, hide) => {\n    state.hidden = hide;\n  }),\n  setLayout: action((state, layout) => {\n    state.layout = layout;\n  }),\n\n  handleGroupChange: action((state, { caseId, newGroupId }) => {\n    const inputPage = state.data.find(\n      (inputElement) => inputElement.id.caseId === caseId\n    );\n    if (inputPage !== undefined) {\n      inputPage.id.groupId = newGroupId;\n    }\n  }),\n} as IInputModel;\n\nexport default InputModel;\n","import * as React from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  Editable,\n  EditableInput,\n  EditablePreview,\n  HStack,\n  Spacer,\n  useDisclosure,\n  AlertDialogOverlay,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogFooter,\n  AlertDialogBody,\n  AlertDialog,\n} from \"@chakra-ui/react\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../Redux/Store\";\n\nconst Header = () => {\n  const titleText = useStoreState((state) => state.title.titleName);\n  const setTitleText = useStoreActions((actions) => actions.title.setTitleName);\n\n  const [isEditTitleActive, setIsEditTitleActive] = useState(false);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = useRef<HTMLButtonElement>(null);\n\n  function handleTitleSubmit(value: string) {\n    setIsEditTitleActive(false);\n    setTitleText(value);\n  }\n\n  function createNewProblem() {\n    sessionStorage.clear();\n    window.location.reload();\n  }\n\n  return (\n    <Container maxW={\"container.lg\"}>\n      <Box mt={\"5\"}>\n        <HStack>\n          <Editable\n            defaultValue={titleText}\n            fontSize={\"xl\"}\n            fontWeight={\"bold\"}\n            placeholder={\"Escribe el nombre del problema\"}\n            onEdit={() => setIsEditTitleActive(true)}\n            onSubmit={(event) => handleTitleSubmit(event)}\n            onCancel={() => setIsEditTitleActive(false)}\n            width={isEditTitleActive ? \"50%\" : undefined}\n          >\n            <EditablePreview />\n            <EditableInput />\n          </Editable>\n          <span>\n            <AiFillEdit />\n          </span>\n          <Spacer />\n          <Button size={\"sm\"}> Cargar Problema </Button>\n          <Button size={\"sm\"} colorScheme={\"blue\"}>\n            Guardar Problema\n          </Button>\n          <Button size={\"sm\"} colorScheme={\"orange\"} onClick={onOpen}>\n            Nuevo Problema\n          </Button>\n          <AlertDialog\n            leastDestructiveRef={cancelRef}\n            onClose={onClose}\n            isOpen={isOpen}\n            isCentered\n          >\n            <AlertDialogOverlay />\n\n            <AlertDialogContent>\n              <AlertDialogHeader>Crear nuevo problema</AlertDialogHeader>\n              <AlertDialogBody>\n                ¿Deseas crear un nuevo problema? Se borrará TODO el problema\n                anterior. Guarda el problema primero antes de crear uno nuevo.\n              </AlertDialogBody>\n              <AlertDialogFooter>\n                <Button ref={cancelRef} onClick={onClose}>\n                  No\n                </Button>\n                <Button\n                  colorScheme=\"red\"\n                  ml={3}\n                  onClick={() => createNewProblem()}\n                >\n                  Sí\n                </Button>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialog>\n        </HStack>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport { Badge, Button, HStack } from \"@chakra-ui/react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase } from \"../../../Redux/Models/CasesModel\";\n\ninterface PropTypes extends ICase {\n  shouldShowPoints: boolean;\n}\nconst CaseItem = (props: PropTypes) => {\n  const { name, points, caseId, groupId, defined, shouldShowPoints } = props;\n\n  const setSelectedCase = useStoreActions(\n    (actions) => actions.cases.setSelected\n  );\n  const selectedCase = useStoreState((state) => state.cases.selected);\n\n  function handleSelectedCase() {\n    setSelectedCase({ caseId: caseId, groupId: groupId });\n  }\n\n  return (\n    <Button\n      variant={\"ghost\"}\n      size={\"sm\"}\n      onClick={() => handleSelectedCase()}\n      isActive={\n        selectedCase.caseId === caseId && selectedCase.groupId === groupId\n      }\n    >\n      <HStack>\n        <span>{name}</span>\n        {shouldShowPoints && (\n          <Badge colorScheme={defined ? \"green\" : \"blue\"}>\n            {points.toFixed(2) + \" PTS\"}\n          </Badge>\n        )}\n      </HStack>\n    </Button>\n  );\n};\n\nexport default React.memo(CaseItem);\n","import * as React from \"react\";\nimport {\n  Checkbox,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Select,\n  toast,\n  useToast,\n  Button,\n} from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase, IGroup } from \"../../../Redux/Models/CasesModel\";\nimport { uuid } from \"uuidv4\";\n\ninterface PropTypes extends IGroup {\n  onClose: () => void;\n}\n\nconst AddGroupModal = (props: PropTypes) => {\n  const { groupId, name, points, defined, onClose, cases } = props;\n\n  const [autoPoints, setAutoPoints] = useState(!defined);\n\n  const nameRef = useRef<string>(name);\n  const pointsRef = useRef<number>(points);\n  const definedRef = useRef<boolean>(defined);\n\n  const editGroup = useStoreActions((actions) => actions.cases.editGroup);\n  const groupData = useStoreState((state) => state.cases.data);\n\n  const toast = useToast();\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    let isValid = true;\n    groupData.forEach((groupElement) => {\n      if (groupElement.name === nameRef.current && nameRef.current !== name) {\n        isValid = false;\n        return;\n      }\n    });\n\n    if (!isValid) {\n      toast({\n        title: \"Error al crear grupo\",\n        description: \"No puedes tener grupos con el mismo nombre\",\n        status: \"error\",\n        isClosable: true,\n      });\n      return;\n    }\n\n    editGroup({\n      groupId: groupId,\n      points: pointsRef.current,\n      defined: definedRef.current,\n      name: nameRef.current,\n      cases: cases,\n    });\n\n    onClose();\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <FormControl mt={3} isRequired>\n        <FormLabel> Nombre del grupo</FormLabel>\n        <Input\n          onChange={(e) => (nameRef.current = e.target.value)}\n          defaultValue={name}\n        />\n      </FormControl>\n      <FormControl mt={5}>\n        <FormLabel> Puntaje </FormLabel>\n        <NumberInput\n          defaultValue={points}\n          onChange={(e, valueAsNumber) => (pointsRef.current = valueAsNumber)}\n          min={0}\n          max={100}\n          isDisabled={autoPoints}\n        >\n          <NumberInputField />\n          <NumberInputStepper>\n            <NumberIncrementStepper />\n            <NumberDecrementStepper />\n          </NumberInputStepper>\n        </NumberInput>\n        {autoPoints && (\n          <FormHelperText>\n            El programa calculará automáticamente el puntaje\n          </FormHelperText>\n        )}\n        <Checkbox\n          mt={3}\n          isChecked={autoPoints}\n          onChange={() => {\n            setAutoPoints(!autoPoints);\n            definedRef.current = autoPoints;\n          }}\n        >\n          Puntaje automático\n        </Checkbox>\n      </FormControl>\n      <Button colorScheme=\"green\" isFullWidth mt={10} type={\"submit\"}>\n        Agregar Problema\n      </Button>\n    </form>\n  );\n};\n\nexport default AddGroupModal;\n","import * as React from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport AddCaseModal from \"./AddCaseModal\";\nimport AddGroupModal from \"./AddGroupModal\";\nimport { IGroup } from \"../../../Redux/Models/CasesModel\";\nimport EditGroupModal from \"./EditGroupModal\";\n\ninterface PropTypes extends IGroup {\n  isOpen: boolean;\n  onClose: () => void;\n}\nconst EditGroup = (props: PropTypes) => {\n  const { isOpen, onClose } = props;\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader> Editar Grupo </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody mb={5}>\n          <EditGroupModal {...props} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default EditGroup;\n","import * as React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useStoreActions } from \"../../../Redux/Store\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n  groupId: string;\n}\n\nconst DeleteGroup = (props: PropTypes) => {\n  const { isOpen, onClose, groupId } = props;\n\n  const toast = useToast();\n\n  const removeGroup = useStoreActions((actions) => actions.cases.removeGroup);\n\n  function deleteGroup() {\n    toast({\n      title: \"Grupo borrado\",\n      description: \"El grupo ha sido borrado exitosamente\",\n      status: \"success\",\n      isClosable: true,\n    });\n\n    removeGroup(groupId);\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Borar Grupo</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          ¿Estás seguro que deseas borrar este grupo? Este cambio no se puede\n          deshacer\n        </ModalBody>\n        <ModalFooter>\n          <Button variant={\"ghost\"} mr={3} onClick={onClose}>\n            Cerrar\n          </Button>\n          <Button\n            colorScheme=\"red\"\n            type={\"submit\"}\n            onClick={() => deleteGroup()}\n          >\n            Borrar Grupo\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DeleteGroup;\n","import * as React from \"react\";\nimport {\n  Badge,\n  Box,\n  Divider,\n  HStack,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Spacer,\n  Tooltip,\n  useColorModeValue,\n  useDisclosure,\n  Flex,\n} from \"@chakra-ui/react\";\nimport { HiOutlineDotsVertical as Dots } from \"react-icons/hi\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport CaseItem from \"./CaseItem\";\nimport { useStoreState } from \"../../../Redux/Store\";\nimport { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport EditGroup from \"./EditGroup\";\nimport { IGroup } from \"../../../Redux/Models/CasesModel\";\nimport DeleteGroup from \"./DeleteGroup\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@chakra-ui/icons\";\n\ninterface PropTypes extends IGroup {}\n\nconst GroupItem = (props: PropTypes) => {\n  const { name, defined, points, groupId } = props;\n  const [showCases, setShowCases] = useState(\n    name === \"mainGroup\" ? true : false\n  );\n\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.600\");\n  const caseState = useStoreState((state) => {\n    return state.cases.data.find((element) => element.name === name);\n  });\n\n  const isLargeScreen = useMediaPredicate(\"(min-width: 830px)\");\n\n  const {\n    isOpen: isOpenEdit,\n    onOpen: onOpenEdit,\n    onClose: onCloseEdit,\n  } = useDisclosure();\n  const {\n    isOpen: isOpenRemove,\n    onOpen: onOpenRemove,\n    onClose: onCloseRemove,\n  } = useDisclosure();\n\n  function handleCasesToggleClick(event: React.MouseEvent<HTMLDivElement>) {\n    let percentage =\n      ((event.pageX - event.currentTarget.offsetLeft) * 100) /\n      event.currentTarget.clientWidth;\n    if (percentage < 80) setShowCases(!showCases);\n  }\n\n  return (\n    <Flex direction={\"column\"}>\n      <Box my={2}>\n        <HStack\n          mb={2}\n          cursor={\"pointer\"}\n          transition={\"padding-left 0.1s\"}\n          _hover={{\n            borderLeft: \"2px\",\n            borderColor: `${borderColor}`,\n            paddingLeft: \"5px\",\n          }}\n          onClick={(event) => handleCasesToggleClick(event)}\n        >\n          <Box>{name === \"mainGroup\" ? \"Sin Grupo\" : name}</Box>\n          <Spacer />\n          {name !== \"Sin Grupo\" ? (\n            <>\n              <Tooltip\n                label={\n                  \"Estos serán los puntos que obtendrá el usuario si resuelve correctamente el grupo\"\n                }\n              >\n                <Badge colorScheme={defined ? \"green\" : \"blue\"} size={\"sm\"}>\n                  {isLargeScreen ? (\n                    <span> {parseFloat(\"\" + points).toFixed(2) + \" pts\"}</span>\n                  ) : (\n                    <span>{points && Math.round(points)} </span>\n                  )}\n                </Badge>\n              </Tooltip>\n\n              <Menu isLazy>\n                <MenuButton\n                  as={IconButton}\n                  icon={<Dots />}\n                  size={\"sm\"}\n                  syle={{ zIndex: 99 }}\n                />\n                <MenuList>\n                  <MenuItem fontSize={\"sm\"} onClick={onOpenEdit}>\n                    Editar Grupo\n                  </MenuItem>\n                  <MenuItem fontSize={\"sm\"} onClick={onOpenRemove}>\n                    Eliminar Grupo\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n              <EditGroup {...props} isOpen={isOpenEdit} onClose={onCloseEdit} />\n              <DeleteGroup\n                isOpen={isOpenRemove}\n                onClose={onCloseRemove}\n                groupId={groupId}\n              />\n            </>\n          ) : showCases ? (\n            <ChevronDownIcon />\n          ) : (\n            <ChevronUpIcon />\n          )}\n        </HStack>\n        <Divider />\n      </Box>\n      <Box ml={2}>\n        {caseState &&\n          showCases &&\n          caseState.cases.map((element) => (\n            <motion.div\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              style={{ display: \"inline-block\" }}\n              key={element.caseId}\n            >\n              <CaseItem {...element} shouldShowPoints={name === \"Sin Grupo\"} />\n            </motion.div>\n          ))}\n      </Box>\n    </Flex>\n  );\n};\n\nexport default GroupItem;\n","import * as React from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport {\n  Box,\n  Modal,\n  ModalContent,\n  ModalOverlay,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport GroupItem from \"./GroupItem\";\n\nconst Navigation = () => {\n  const caseState = useStoreState((state) => state.cases.data);\n\n  return (\n    <>\n      <Box mt={2}>\n        {caseState.map((group) => (\n          <GroupItem {...group} key={group.groupId} />\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default Navigation;\n","/**\n * @deprecated\n * You can derive the Colors type from the DefaultChakraTheme:\n *\n * type Colors = DefaultChakraTheme[\"colors\"]\n */\nexport type Colors = typeof colors;\n\nconst colors = {\n  transparent: \"transparent\",\n  current: \"currentColor\",\n  black: \"#000000\",\n  white: \"#FFFFFF\",\n\n  whiteAlpha: {\n    50: \"rgba(255, 255, 255, 0.04)\",\n    100: \"rgba(255, 255, 255, 0.06)\",\n    200: \"rgba(255, 255, 255, 0.08)\",\n    300: \"rgba(255, 255, 255, 0.16)\",\n    400: \"rgba(255, 255, 255, 0.24)\",\n    500: \"rgba(255, 255, 255, 0.36)\",\n    600: \"rgba(255, 255, 255, 0.48)\",\n    700: \"rgba(255, 255, 255, 0.64)\",\n    800: \"rgba(255, 255, 255, 0.80)\",\n    900: \"rgba(255, 255, 255, 0.92)\",\n  },\n\n  blackAlpha: {\n    50: \"rgba(0, 0, 0, 0.04)\",\n    100: \"rgba(0, 0, 0, 0.06)\",\n    200: \"rgba(0, 0, 0, 0.08)\",\n    300: \"rgba(0, 0, 0, 0.16)\",\n    400: \"rgba(0, 0, 0, 0.24)\",\n    500: \"rgba(0, 0, 0, 0.36)\",\n    600: \"rgba(0, 0, 0, 0.48)\",\n    700: \"rgba(0, 0, 0, 0.64)\",\n    800: \"rgba(0, 0, 0, 0.80)\",\n    900: \"rgba(0, 0, 0, 0.92)\",\n  },\n\n  gray: {\n    50: \"#F7FAFC\",\n    100: \"#EDF2F7\",\n    200: \"#E2E8F0\",\n    300: \"#CBD5E0\",\n    400: \"#A0AEC0\",\n    500: \"#718096\",\n    600: \"#4A5568\",\n    700: \"#2D3748\",\n    800: \"#1A202C\",\n    900: \"#171923\",\n  },\n\n  red: {\n    50: \"#FFF5F5\",\n    100: \"#FED7D7\",\n    200: \"#FEB2B2\",\n    300: \"#FC8181\",\n    400: \"#F56565\",\n    500: \"#E53E3E\",\n    600: \"#C53030\",\n    700: \"#9B2C2C\",\n    800: \"#822727\",\n    900: \"#63171B\",\n  },\n\n  orange: {\n    50: \"#FFFAF0\",\n    100: \"#FEEBC8\",\n    200: \"#FBD38D\",\n    300: \"#F6AD55\",\n    400: \"#ED8936\",\n    500: \"#DD6B20\",\n    600: \"#C05621\",\n    700: \"#9C4221\",\n    800: \"#7B341E\",\n    900: \"#652B19\",\n  },\n\n  yellow: {\n    50: \"#FFFFF0\",\n    100: \"#FEFCBF\",\n    200: \"#FAF089\",\n    300: \"#F6E05E\",\n    400: \"#ECC94B\",\n    500: \"#D69E2E\",\n    600: \"#B7791F\",\n    700: \"#975A16\",\n    800: \"#744210\",\n    900: \"#5F370E\",\n  },\n\n  green: {\n    50: \"#F0FFF4\",\n    100: \"#C6F6D5\",\n    200: \"#9AE6B4\",\n    300: \"#68D391\",\n    400: \"#48BB78\",\n    500: \"#38A169\",\n    600: \"#2F855A\",\n    700: \"#276749\",\n    800: \"#22543D\",\n    900: \"#1C4532\",\n  },\n\n  teal: {\n    50: \"#E6FFFA\",\n    100: \"#B2F5EA\",\n    200: \"#81E6D9\",\n    300: \"#4FD1C5\",\n    400: \"#38B2AC\",\n    500: \"#319795\",\n    600: \"#2C7A7B\",\n    700: \"#285E61\",\n    800: \"#234E52\",\n    900: \"#1D4044\",\n  },\n\n  blue: {\n    50: \"#ebf8ff\",\n    100: \"#bee3f8\",\n    200: \"#90cdf4\",\n    300: \"#63b3ed\",\n    400: \"#4299e1\",\n    500: \"#3182ce\",\n    600: \"#2b6cb0\",\n    700: \"#2c5282\",\n    800: \"#2a4365\",\n    900: \"#1A365D\",\n  },\n\n  cyan: {\n    50: \"#EDFDFD\",\n    100: \"#C4F1F9\",\n    200: \"#9DECF9\",\n    300: \"#76E4F7\",\n    400: \"#0BC5EA\",\n    500: \"#00B5D8\",\n    600: \"#00A3C4\",\n    700: \"#0987A0\",\n    800: \"#086F83\",\n    900: \"#065666\",\n  },\n\n  purple: {\n    50: \"#FAF5FF\",\n    100: \"#E9D8FD\",\n    200: \"#D6BCFA\",\n    300: \"#B794F4\",\n    400: \"#9F7AEA\",\n    500: \"#805AD5\",\n    600: \"#6B46C1\",\n    700: \"#553C9A\",\n    800: \"#44337A\",\n    900: \"#322659\",\n  },\n\n  pink: {\n    50: \"#FFF5F7\",\n    100: \"#FED7E2\",\n    200: \"#FBB6CE\",\n    300: \"#F687B3\",\n    400: \"#ED64A6\",\n    500: \"#D53F8C\",\n    600: \"#B83280\",\n    700: \"#97266D\",\n    800: \"#702459\",\n    900: \"#521B41\",\n  },\n\n  linkedin: {\n    50: \"#E8F4F9\",\n    100: \"#CFEDFB\",\n    200: \"#9BDAF3\",\n    300: \"#68C7EC\",\n    400: \"#34B3E4\",\n    500: \"#00A0DC\",\n    600: \"#008CC9\",\n    700: \"#0077B5\",\n    800: \"#005E93\",\n    900: \"#004471\",\n  },\n\n  facebook: {\n    50: \"#E8F4F9\",\n    100: \"#D9DEE9\",\n    200: \"#B7C2DA\",\n    300: \"#6482C0\",\n    400: \"#4267B2\",\n    500: \"#385898\",\n    600: \"#314E89\",\n    700: \"#29487D\",\n    800: \"#223B67\",\n    900: \"#1E355B\",\n  },\n\n  messenger: {\n    50: \"#D0E6FF\",\n    100: \"#B9DAFF\",\n    200: \"#A2CDFF\",\n    300: \"#7AB8FF\",\n    400: \"#2E90FF\",\n    500: \"#0078FF\",\n    600: \"#0063D1\",\n    700: \"#0052AC\",\n    800: \"#003C7E\",\n    900: \"#002C5C\",\n  },\n\n  whatsapp: {\n    50: \"#dffeec\",\n    100: \"#b9f5d0\",\n    200: \"#90edb3\",\n    300: \"#65e495\",\n    400: \"#3cdd78\",\n    500: \"#22c35e\",\n    600: \"#179848\",\n    700: \"#0c6c33\",\n    800: \"#01421c\",\n    900: \"#001803\",\n  },\n\n  twitter: {\n    50: \"#E5F4FD\",\n    100: \"#C8E9FB\",\n    200: \"#A8DCFA\",\n    300: \"#83CDF7\",\n    400: \"#57BBF5\",\n    500: \"#1DA1F2\",\n    600: \"#1A94DA\",\n    700: \"#1681BF\",\n    800: \"#136B9E\",\n    900: \"#0D4D71\",\n  },\n\n  telegram: {\n    50: \"#E3F2F9\",\n    100: \"#C5E4F3\",\n    200: \"#A2D4EC\",\n    300: \"#7AC1E4\",\n    400: \"#47A9DA\",\n    500: \"#0088CC\",\n    600: \"#007AB8\",\n    700: \"#006BA1\",\n    800: \"#005885\",\n    900: \"#003F5E\",\n  },\n};\n\nexport default colors;\n","import * as React from \"react\";\nimport {\n  Button,\n  Checkbox,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  useColorModeValue,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport RSelect from \"react-select\";\nimport { uuid } from \"uuidv4\";\nimport chakraColors from \"../../../Util/chakraColors\";\n\ninterface PropTypes {\n  onClose: () => void;\n}\n\n// TODO handle logic for no group cases\n\nconst AddCaseModal = ({ onClose }: PropTypes) => {\n  const [autoPoints, setAutoPoints] = useState(true);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const [hasGroup, setHasGroup] = useState(false);\n\n  const caseName = useRef<string>(\"\");\n  const points = useRef<number>(50);\n  const pointsDefined = useRef<boolean>(false);\n\n  const addCase = useStoreActions((actions) => actions.cases.addCase);\n  const groupData = useStoreState((state) => state.cases.data);\n\n  const toast = useToast();\n  const darkTheme = useColorModeValue(false, true);\n\n  let options = groupData.map((groupElement) => {\n    return {\n      value: groupElement.groupId,\n      label: groupElement.name,\n    };\n  });\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    let isValid = true;\n    let selectedGroupId = selectedValue;\n\n    if (selectedGroupId === \"\") {\n      selectedGroupId = options[0].value;\n    }\n\n    groupData.forEach((groupElement) => {\n      if (groupElement.groupId === selectedGroupId) {\n        groupElement.cases.forEach((caseElement) => {\n          if (caseElement.name === caseName.current) {\n            isValid = false;\n            return;\n          }\n        });\n      }\n      if (!isValid) return;\n    });\n\n    if (!isValid) {\n      toast({\n        title: \"Error al crear caso\",\n        description:\n          \"No puedes tener casos con el mismo nombre en un mismo grupo\",\n        status: \"error\",\n        isClosable: true,\n      });\n      return;\n    }\n\n    addCase({\n      caseId: uuid(),\n      name: caseName.current,\n      groupId: selectedGroupId,\n      points: points.current,\n      defined: pointsDefined.current,\n    });\n\n    onClose();\n  }\n\n  function handleSelectChange(event: any) {\n    setSelectedValue(event.value);\n    setHasGroup(event.value !== options[0].value);\n  }\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <FormControl mt={3} isRequired>\n        <FormLabel> Nombre del caso</FormLabel>\n        <Input onChange={(e) => (caseName.current = e.target.value)} />\n      </FormControl>\n      <FormControl mt={5} isRequired>\n        <FormLabel> Nombre del grupo</FormLabel>\n        <RSelect\n          defaultValue={{ label: \"Sin Grupo\", value: options[0].value }}\n          options={options}\n          value={options.find((obj) => obj.value === selectedValue)}\n          onChange={handleSelectChange}\n          theme={\n            darkTheme\n              ? (theme) => ({\n                  ...theme,\n                  colors: {\n                    ...theme.colors,\n                    primary: chakraColors.blue[200], // Selected\n                    primary25: chakraColors.gray[600], // Ring\n                    primary50: chakraColors.blue[600], // Ring\n                    primary75: chakraColors.blue[700], // Ring\n                    neutral0: chakraColors.gray[700],\n                    neutral5: chakraColors.gray[700],\n                    neutral10: chakraColors.gray[700],\n                    neutral20: chakraColors.gray[600],\n                    neutral30: chakraColors.gray[500],\n                    neutral40: chakraColors.white,\n                    neutral50: chakraColors.white,\n                    neutral80: chakraColors.white,\n                    neutral90: chakraColors.white,\n                  },\n                })\n              : undefined\n          }\n        />\n      </FormControl>\n      {!hasGroup && (\n        <FormControl mt={5}>\n          <FormLabel> Puntaje </FormLabel>\n          <NumberInput\n            onChange={(e, valueAsNumber) => (points.current = valueAsNumber)}\n            min={0}\n            max={100}\n            isDisabled={autoPoints}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n          {autoPoints && (\n            <FormHelperText>\n              El programa calculará automáticamente el puntaje\n            </FormHelperText>\n          )}\n          <Checkbox\n            mt={3}\n            isChecked={autoPoints}\n            onChange={() => {\n              setAutoPoints(!autoPoints);\n              pointsDefined.current = autoPoints;\n            }}\n          >\n            Puntaje automático\n          </Checkbox>\n        </FormControl>\n      )}\n      <Button colorScheme=\"green\" isFullWidth mt={10} type=\"submit\">\n        Agregar Caso\n      </Button>\n    </form>\n  );\n};\n\nexport default AddCaseModal;\n","import * as React from \"react\";\nimport {\n  Checkbox,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Select,\n  toast,\n  useToast,\n  Button,\n} from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase } from \"../../../Redux/Models/CasesModel\";\nimport { uuid } from \"uuidv4\";\n\ninterface PropTypes {\n  onClose: () => void;\n}\n\nconst AddGroupModal = ({ onClose }: PropTypes) => {\n  const [autoPoints, setAutoPoints] = useState(true);\n\n  const groupName = useRef<string>(\"\");\n  const points = useRef<number>(50);\n  const pointsDefined = useRef<boolean>(false);\n\n  const addGroup = useStoreActions((actions) => actions.cases.addGroup);\n  const groupData = useStoreState((state) => state.cases.data);\n\n  const toast = useToast();\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    let isValid = true;\n    groupData.forEach((groupElement) => {\n      if (groupElement.name === groupName.current) {\n        isValid = false;\n        return;\n      }\n    });\n\n    if (!isValid) {\n      toast({\n        title: \"Error al crear grupo\",\n        description: \"No puedes tener grupos con el mismo nombre\",\n        status: \"error\",\n        isClosable: true,\n      });\n      return;\n    }\n\n    addGroup({\n      groupId: uuid(),\n      name: groupName.current,\n      points: points.current,\n      defined: pointsDefined.current,\n      cases: [],\n    });\n\n    onClose();\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <FormControl mt={3} isRequired>\n        <FormLabel> Nombre del grupo</FormLabel>\n        <Input onChange={(e) => (groupName.current = e.target.value)} />\n      </FormControl>\n      <FormControl mt={5}>\n        <FormLabel> Puntaje </FormLabel>\n        <NumberInput\n          onChange={(e, valueAsNumber) => (points.current = valueAsNumber)}\n          min={0}\n          max={100}\n          isDisabled={autoPoints}\n        >\n          <NumberInputField />\n          <NumberInputStepper>\n            <NumberIncrementStepper />\n            <NumberDecrementStepper />\n          </NumberInputStepper>\n        </NumberInput>\n        {autoPoints && (\n          <FormHelperText>\n            El programa calculará automáticamente el puntaje\n          </FormHelperText>\n        )}\n        <Checkbox\n          mt={3}\n          isChecked={autoPoints}\n          onChange={() => {\n            setAutoPoints(!autoPoints);\n            pointsDefined.current = autoPoints;\n          }}\n        >\n          Puntaje automático\n        </Checkbox>\n      </FormControl>\n      <Button colorScheme=\"green\" isFullWidth mt={10} type={\"submit\"}>\n        Agregar Problema\n      </Button>\n    </form>\n  );\n};\n\nexport default AddGroupModal;\n","import * as React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n} from \"@chakra-ui/react\";\nimport AddCaseModal from \"./AddCaseModal\";\nimport AddGroupModal from \"./AddGroupModal\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst Add = ({ isOpen, onClose }: PropTypes) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Agregar </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Tabs size={\"sm\"}>\n            <TabList>\n              <Tab> Caso </Tab>\n              <Tab> Grupo </Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <AddCaseModal onClose={onClose} submitButton={\"Agregar\"} />\n              </TabPanel>\n              <TabPanel>\n                <AddGroupModal\n                  onClose={onClose}\n                  submitButton={\"Agregar\"}\n                  edit={false}\n                />\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default Add;\n","import * as React from \"react\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Spacer,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { motion } from \"framer-motion\";\nimport Navigation from \"./Navigation\";\nimport { useMediaPredicate } from \"react-media-hook\";\nimport Add from \"./Add\";\nconst Sidebar = () => {\n  const divBorderColor = useColorModeValue(\"gray.200\", \"gray.600\");\n\n  const {\n    isOpen: isOpenAdd,\n    onOpen: onOpenAdd,\n    onClose: onCloseAdd,\n  } = useDisclosure();\n\n  const isLargeScreen = useMediaPredicate(\"(min-width: 830px)\");\n\n  return (\n    <motion.div initial={{ opacity: 0, x: -50 }} animate={{ opacity: 1, x: 0 }}>\n      <Box\n        w={\"100%\"}\n        h={\"75vh\"}\n        borderRight={\"1px\"}\n        borderColor={divBorderColor}\n      >\n        <Box width={\"90%\"}>\n          <Flex align={\"center\"} mb={4}>\n            <Text mr={5} fontSize={\"xl\"} fontWeight={\"bold\"}>\n              Grupos\n            </Text>\n            <Spacer />\n            <Button size={\"sm\"} colorScheme={\"green\"} onClick={onOpenAdd}>\n              {isLargeScreen ? <p> Agregar</p> : <p> + </p>}\n            </Button>\n            <Add isOpen={isOpenAdd} onClose={onCloseAdd} />\n          </Flex>\n          <Divider />\n          <Navigation />\n        </Box>\n      </Box>\n    </motion.div>\n  );\n};\n\nexport default Sidebar;\n","import * as React from \"react\";\nimport {\n  Checkbox,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  Select,\n  toast,\n  useToast,\n  Button,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase, IGroup } from \"../../../Redux/Models/CasesModel\";\nimport RSelect from \"react-select\";\nimport chakraColors from \"../../../Util/chakraColors\";\ninterface PropTypes extends ICase {\n  onClose: () => void;\n}\nconst EditCaseModal = (props: PropTypes) => {\n  const { groupId, caseId, name, points, defined, onClose } = props;\n\n  const [autoPoints, setAutoPoints] = useState(!defined);\n  const [selectedValue, setSelectedValue] = useState(groupId);\n\n  const nameRef = useRef<string>(name);\n  const pointsRef = useRef<number>(points);\n  const definedRef = useRef<boolean>(defined);\n\n  const editCase = useStoreActions((actions) => actions.cases.editCase);\n  const groupData = useStoreState((state) => state.cases.data);\n  const handleGroupChange = useStoreActions(\n    (actions) => actions.input.handleGroupChange\n  );\n\n  const toast = useToast();\n  const darkTheme = useColorModeValue(false, true);\n\n  let options = groupData.map((groupElement) => {\n    return {\n      value: groupElement.groupId,\n      label: groupElement.name,\n    };\n  });\n\n  const [hasGroup, setHasGroup] = useState(groupId !== options[0].value);\n\n  // Tengo que quitarlo primero del grupo donde estaba antes\n  // Tengo que agregarlo al nuevo grupo\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    let isValid = true;\n    let selectedGroupId = selectedValue;\n\n    if (selectedGroupId === \"\") {\n      selectedGroupId = options[0].value;\n    }\n\n    groupData.forEach((groupElement) => {\n      if (groupElement.groupId === groupId) {\n        groupElement.cases.forEach((caseElement) => {\n          if (\n            caseElement.name === nameRef.current &&\n            nameRef.current !== name\n          ) {\n            isValid = false;\n            return;\n          }\n        });\n        if (!isValid) return;\n      }\n    });\n\n    if (!isValid) {\n      toast({\n        title: \"Error al crear grupo\",\n        description: \"No puedes tener grupos con el mismo nombre\",\n        status: \"error\",\n        isClosable: true,\n      });\n      return;\n    }\n\n    // cambiar el selected\n    editCase({\n      case: {\n        caseId: caseId,\n        name: nameRef.current,\n        points: pointsRef.current,\n        groupId: selectedGroupId,\n        defined: definedRef.current,\n      },\n      lastId: groupId,\n    });\n\n    handleGroupChange({ caseId: caseId, newGroupId: selectedGroupId });\n\n    onClose();\n  }\n\n  function handleSelectChange(event: any) {\n    setSelectedValue(event.value);\n    setHasGroup(event.value !== options[0].value);\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <FormControl mt={3} isRequired>\n        <FormLabel> Nombre del caso</FormLabel>\n        <Input\n          onChange={(e) => (nameRef.current = e.target.value)}\n          defaultValue={name}\n        />\n      </FormControl>\n      <FormControl mt={5} isRequired>\n        <FormLabel> Nombre del grupo</FormLabel>\n        <RSelect\n          defaultValue={options.find((obj) => obj.value === groupId)}\n          options={options}\n          value={options.find((obj) => obj.value === selectedValue)}\n          onChange={handleSelectChange}\n          theme={\n            darkTheme\n              ? (theme) => ({\n                  ...theme,\n                  colors: {\n                    ...theme.colors,\n                    primary: chakraColors.blue[200], // Selected\n                    primary25: chakraColors.gray[600], // Ring\n                    primary50: chakraColors.blue[600], // Ring\n                    primary75: chakraColors.blue[700], // Ring\n                    neutral0: chakraColors.gray[700],\n                    neutral5: chakraColors.gray[700],\n                    neutral10: chakraColors.gray[700],\n                    neutral20: chakraColors.gray[600],\n                    neutral30: chakraColors.gray[500],\n                    neutral40: chakraColors.white,\n                    neutral50: chakraColors.white,\n                    neutral80: chakraColors.white,\n                    neutral90: chakraColors.white,\n                  },\n                })\n              : undefined\n          }\n        />\n      </FormControl>\n      {!hasGroup && (\n        <FormControl mt={5}>\n          <FormLabel> Puntaje </FormLabel>\n          <NumberInput\n            onChange={(e, valueAsNumber) => (pointsRef.current = valueAsNumber)}\n            defaultValue={points}\n            min={0}\n            max={100}\n            isDisabled={autoPoints}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n          {autoPoints && (\n            <FormHelperText>\n              El programa calculará automáticamente el puntaje\n            </FormHelperText>\n          )}\n          <Checkbox\n            mt={3}\n            isChecked={autoPoints}\n            onChange={() => {\n              setAutoPoints(!autoPoints);\n              definedRef.current = autoPoints;\n            }}\n          >\n            Puntaje automático\n          </Checkbox>\n        </FormControl>\n      )}\n      <Button colorScheme=\"green\" isFullWidth mt={10} type={\"submit\"}>\n        Editar Caso\n      </Button>\n    </form>\n  );\n};\n\nexport default EditCaseModal;\n","import * as React from \"react\";\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/react\";\nimport AddCaseModal from \"./AddCaseModal\";\nimport AddGroupModal from \"./AddGroupModal\";\nimport { ICase, IGroup } from \"../../../Redux/Models/CasesModel\";\nimport EditGroupModal from \"./EditGroupModal\";\nimport EditCaseModal from \"./EditCaseModal\";\n\ninterface PropTypes extends ICase {\n  isOpen: boolean;\n  onClose: () => void;\n}\nconst EditCase = (props: PropTypes) => {\n  const { isOpen, onClose } = props;\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader> Editar Caso </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody mb={5}>\n          <EditCaseModal {...props} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default EditCase;\n","import * as React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useStoreActions } from \"../../../Redux/Store\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n  groupId: string;\n  caseId: string;\n}\n\nconst DeleteItem = (props: PropTypes) => {\n  const { isOpen, onClose, groupId, caseId } = props;\n\n  const toast = useToast();\n\n  const removeCase = useStoreActions((actions) => actions.cases.removeCase);\n  const selectCase = useStoreActions((actions) => actions.cases.setSelected);\n\n  function deleteCase() {\n    toast({\n      title: \"Caso borrado\",\n      description: \"El caso ha sido borrado exitosamente\",\n      status: \"success\",\n      isClosable: true,\n    });\n\n    removeCase({\n      caseId: caseId,\n      groupId: groupId,\n    });\n    selectCase({ caseId: \"None\", groupId: \"None\" });\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Borrar Caso</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          ¿Estás seguro que deseas borrar este caso? Este cambio no se puede\n          deshacer\n        </ModalBody>\n        <ModalFooter>\n          <Button variant={\"ghost\"} mr={3} onClick={onClose}>\n            Cerrar\n          </Button>\n          <Button\n            colorScheme=\"red\"\n            type={\"submit\"}\n            onClick={() => deleteCase()}\n          >\n            Borrar Caso\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DeleteItem;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport { caseIdentifier } from \"../../../Redux/Models/InputModel\";\nimport { useStoreActions } from \"../../../Redux/Store\";\n\ninterface PropTypes {\n  isOpen: boolean;\n  onClose: () => void;\n  caseIdentifier: caseIdentifier;\n}\nconst DeleteLinesModal = (props: PropTypes) => {\n  const { isOpen, onClose, caseIdentifier } = props;\n  const deleteAllLines = useStoreActions(\n    (actions) => actions.input.removeAllLines\n  );\n\n  function handleDeleteAllLines() {\n    deleteAllLines(caseIdentifier);\n    onClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader> Borrar todas las Líneas </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          ¿Estás seguro que deseas borrar todas las líneas? Todo el contenido\n          dentro de estas será borrado. Esta acción no se puede deshacer.\n        </ModalBody>\n        <ModalFooter>\n          <Button variant={\"ghost\"} mr={3} onClick={onClose}>\n            Cerrar\n          </Button>\n          <Button\n            colorScheme=\"red\"\n            type={\"submit\"}\n            onClick={() => handleDeleteAllLines()}\n          >\n            Borrar Líneas\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default DeleteLinesModal;\n","import * as React from \"react\";\nimport {\n  HStack,\n  Text,\n  Spacer,\n  Button,\n  useDisclosure,\n  Box,\n  Switch,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/react\";\nimport EditCase from \"../Sidebar/EditCase\";\nimport { HiOutlineDotsVertical as Dots } from \"react-icons/hi\";\nimport DeleteItem from \"../Sidebar/DeleteItem\";\nimport { useSelectedData } from \"../../../Hooks/useSelectedData\";\nimport { ICase } from \"../../../Redux/Models/CasesModel\";\nimport { BsEye, BsFillEyeSlashFill } from \"react-icons/all\";\nimport { ChangeEvent } from \"react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport DeleteLinesModal from \"./DeleteLinesModal\";\n\ninterface PropTypes {\n  groupName: string;\n  caseData: ICase;\n}\nconst TopBar = (props: PropTypes) => {\n  const { groupName, caseData } = props;\n  const {\n    isOpen: isOpenEdit,\n    onOpen: onOpenEdit,\n    onClose: onCloseEdit,\n  } = useDisclosure();\n  const {\n    isOpen: isOpenRemove,\n    onOpen: onOpenRemove,\n    onClose: onCloseRemove,\n  } = useDisclosure();\n  const {\n    isOpen: isOpenLines,\n    onOpen: onOpenLines,\n    onClose: onCloseLines,\n  } = useDisclosure();\n\n  const hidden = useStoreState((state) => state.input.hidden);\n  const setHidden = useStoreActions((actions) => actions.input.setHidden);\n\n  function handleHidden(event: ChangeEvent<HTMLInputElement>) {\n    setHidden(event.target.checked);\n  }\n\n  return (\n    <Box mb={2}>\n      <HStack h={\"20%\"} w={\"100%\"} pl={5}>\n        <Text fontWeight={\"bold\"} fontSize={20}>\n          {caseData.name}\n        </Text>\n        <h2> {groupName}</h2>\n        <Spacer />\n        <HStack pr={5}>\n          <BsFillEyeSlashFill />\n          <Switch onChange={(e) => handleHidden(e)} isChecked={hidden} />\n        </HStack>\n        <Button size={\"sm\"} onClick={onOpenEdit}>\n          Editar Caso\n        </Button>\n        <Button size={\"sm\"} onClick={onOpenRemove}>\n          {\" \"}\n          Eliminar Caso{\" \"}\n        </Button>\n        <Menu>\n          <MenuButton\n            as={IconButton}\n            icon={<Dots />}\n            size={\"sm\"}\n            syle={{ zIndex: 99 }}\n          />\n          <MenuList>\n            <MenuItem fontSize={\"sm\"}>Layout</MenuItem>\n            <MenuItem fontSize={\"sm\"} onClick={onOpenLines}>\n              Borrar Lineas\n            </MenuItem>\n          </MenuList>\n        </Menu>\n      </HStack>\n      <EditCase isOpen={isOpenEdit} onClose={onCloseEdit} {...caseData} />\n      <DeleteItem\n        isOpen={isOpenRemove}\n        onClose={onCloseRemove}\n        groupId={caseData.groupId}\n        caseId={caseData.caseId}\n      />\n      <DeleteLinesModal\n        isOpen={isOpenLines}\n        onClose={onCloseLines}\n        caseIdentifier={{ groupId: caseData.groupId, caseId: caseData.caseId }}\n      />\n    </Box>\n  );\n};\n\nexport default TopBar;\n","import * as React from \"react\";\nimport {\n  Input,\n  Editable,\n  Flex,\n  EditablePreview,\n  EditableInput,\n  Box,\n  HStack,\n  Select,\n  Textarea,\n} from \"@chakra-ui/react\";\nimport { DeleteIcon, DragHandleIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useRef, useState } from \"react\";\nimport {\n  caseIdentifier as ICaseIdentifier,\n  ILine,\n} from \"../../../Redux/Models/InputModel\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport _ from \"lodash\";\nimport { DraggableProvided } from \"react-beautiful-dnd\";\n\n// TODO: Focus automatico al presionar enter\n// TODO: no deberia de mostrar nada si ninguna caso esta seleccionado\n// TODO: Al borrar caso/grupo deberia ir al modo no seleccionado\n\ninterface PropTypes extends ILine {\n  caseIdentifier: ICaseIdentifier;\n  addLine: () => void;\n  hide?: boolean;\n  provided: DraggableProvided;\n}\n\nconst Line = (props: PropTypes) => {\n  const {\n    hide = false,\n    lineId,\n    type,\n    value,\n    label,\n    caseIdentifier,\n    addLine,\n    provided,\n  } = props;\n\n  const [mode, setMode] = useState(type);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<any>(null);\n\n  const updateLine = useStoreActions((actions) => actions.input.updateLine);\n  const deleteLine = useStoreActions((actions) => actions.input.removeLine);\n  const lastCreated = useStoreState((state) => state.input.lastCreated);\n\n  useEffect(() => {\n    handleUpdateLine();\n  }, [mode]);\n\n  useEffect(() => {\n    if (lastCreated === lineId) {\n      inputRef.current.focus();\n    }\n  }, [lastCreated]);\n\n  function handleUpdateLine() {\n    let label =\n      labelRef.current !== null ? labelRef.current.children[0].innerHTML : \"\";\n    let value = inputRef.current !== null ? inputRef.current.value : \"\";\n\n    updateLine({\n      lineId: lineId,\n      caseIdentifier: caseIdentifier,\n      lineData: { lineId: lineId, label: label, value: value, type: mode },\n    });\n  }\n\n  function handleEnterPress(e: React.KeyboardEvent<HTMLInputElement>) {\n    if (e.key === \"Enter\") {\n      inputRef.current?.blur();\n      addLine();\n    }\n  }\n\n  function handleSelectChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const value = e.currentTarget.value;\n    if (\n      value === \"line\" ||\n      value === \"multiline\" ||\n      value === \"array\" ||\n      value === \"matrix\"\n    ) {\n      setMode(value);\n    }\n  }\n\n  function handleDelete() {\n    deleteLine({\n      caseIdentifier: caseIdentifier,\n      lineId: lineId,\n    });\n  }\n\n  return (\n    <Box w={\"100%\"} p={3} border={\"1px solid rgba(5,5,5,0.1)\"} borderRadius={5}>\n      <HStack w={\"100%\"} h={\"100%\"}>\n        <Box {...provided.dragHandleProps}>\n          <DragHandleIcon />\n        </Box>\n\n        {!hide && (\n          <Editable\n            isTruncated\n            defaultValue={label}\n            fontSize={\"sm\"}\n            ref={labelRef}\n            textOverflow={\"clip\"}\n            minW={\"40px\"}\n            maxW={\"40px\"}\n            onSubmit={() => handleUpdateLine()}\n          >\n            <EditablePreview />\n            <EditableInput />\n          </Editable>\n        )}\n        {mode === \"multiline\" ? (\n          <Textarea\n            size={\"sm\"}\n            defaultValue={value}\n            ref={inputRef}\n            onBlur={() => handleUpdateLine()}\n          />\n        ) : (\n          <Input\n            defaultValue={value}\n            // isFullWidth\n            size={\"sm\"}\n            disabled={mode === \"array\" || mode === \"matrix\"}\n            ref={inputRef}\n            onBlur={() => handleUpdateLine()}\n            onKeyPress={(e) => handleEnterPress(e)}\n          />\n        )}\n        {!hide && (\n          <Select\n            size={\"sm\"}\n            w={\n              mode === \"array\" || mode === \"matrix\" ? 200 - 38 + \"px\" : \"200px\"\n            }\n            value={type}\n            onChange={(e) => handleSelectChange(e)}\n          >\n            <option value={\"line\"}> Linea </option>\n            <option value={\"multiline\"}> Multilínea</option>\n            <option value={\"array\"}> Arreglo </option>\n            <option value={\"matrix\"}> Matriz </option>\n          </Select>\n        )}\n        {(mode === \"array\" || mode === \"matrix\") && (\n          <EditIcon cursor={\"pointer\"} />\n        )}\n        <DeleteIcon cursor={\"pointer\"} onClick={() => handleDelete()} />\n      </HStack>\n    </Box>\n  );\n};\n\n// export default Line;\nexport default React.memo(Line, (prevState, nextState) => {\n  console.log(_.isEqual(prevState, nextState));\n  return _.isEqual(prevState, nextState);\n});\n","import * as React from \"react\";\nimport Line from \"./Line\";\nimport { Box, Button, Center, Flex, VStack } from \"@chakra-ui/react\";\nimport { useStoreActions, useStoreState } from \"../../../Redux/Store\";\nimport { ICase } from \"../../../Redux/Models/CasesModel\";\nimport { useInputPage } from \"../../../Hooks/useInputPage\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport { useState } from \"react\";\nimport { ILine } from \"../../../Redux/Models/InputModel\";\n\ninterface PropTypes {\n  groupName: string;\n  caseData: ICase;\n}\nconst InputWindow = (props: PropTypes) => {\n  const { groupName, caseData } = props;\n\n  const hidden = useStoreState((state) => state.input.hidden);\n  const addLine = useStoreActions((action) => action.input.addLine);\n  const setLines = useStoreActions((action) => action.input.setLines);\n  const { pageData, setPageData } = useInputPage(caseData);\n\n  const caseIdentifier = { groupId: caseData.groupId, caseId: caseData.caseId };\n\n  const addLineToStore = useCallback(() => {\n    addLine({\n      caseIdentifier: { groupId: caseData.groupId, caseId: caseData.caseId },\n      line: { lineId: uuid(), type: \"line\", value: \"\", label: \"Nombre\" },\n    });\n  }, [addLine, caseData]);\n\n  function handleDragEnd(result: DropResult) {\n    if (!result.destination) return;\n\n    const startIndex = result.source.index;\n    const endIndex = result.destination.index;\n\n    const newArray = Array.from(pageData);\n    const [removed] = newArray.splice(startIndex, 1);\n    newArray.splice(endIndex, 0, removed);\n\n    setPageData(newArray);\n    setLines({\n      caseIdentifier,\n      lineArray: newArray,\n    });\n  }\n\n  return (\n    <VStack ml={5}>\n      <DragDropContext onDragEnd={(result) => handleDragEnd(result)}>\n        <Droppable droppableId={caseData.groupId + caseData.caseId}>\n          {(provided, snapshot) => (\n            <Box\n              w={\"full\"}\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {pageData.map((line, index) => (\n                <Draggable\n                  key={line.lineId}\n                  draggableId={line.lineId}\n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <Box\n                      w={\"full\"}\n                      mb={3}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                    >\n                      <Line\n                        {...line}\n                        provided={provided}\n                        key={line.lineId}\n                        hide={hidden}\n                        caseIdentifier={caseIdentifier}\n                        addLine={addLineToStore}\n                      />\n                    </Box>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </Box>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Center>\n        <Button size={\"sm\"} onClick={addLineToStore}>\n          +\n        </Button>\n      </Center>\n    </VStack>\n  );\n};\n\nexport default InputWindow;\n","import { useEffect, useState } from \"react\";\nimport { caseIdentifier, IInput, ILine } from \"../Redux/Models/InputModel\";\nimport { useStoreActions, useStoreState } from \"../Redux/Store\";\nimport { ICase } from \"../Redux/Models/CasesModel\";\nimport _ from \"lodash\";\n\nexport const useInputPage = (caseData: ICase) => {\n  const [pageData, setPageData] = useState<ILine[]>([]);\n  const inputData = useStoreState((state) => state.input.data);\n  const addInputPage = useStoreActions((actions) => actions.input.addData);\n\n  const caseIdentifier = {\n    groupId: caseData.groupId,\n    caseId: caseData.caseId,\n  };\n\n  useEffect(() => {\n    const inputPage = inputData.find((inputElement) => {\n      // return JSON.stringify(inputElement.id) === JSON.stringify(caseIdentifier);\n      return _.isEqual(inputElement.id, caseIdentifier);\n    });\n    if (inputPage === undefined) {\n      addInputPage({ id: caseIdentifier, lines: [] });\n      setPageData([]);\n    } else {\n      setPageData(inputPage.lines);\n    }\n  }, [caseData, inputData]);\n\n  return {pageData, setPageData};\n};\n","export default __webpack_public_path__ + \"static/media/sloth.f36a3615.png\";","import * as React from \"react\";\nimport TopBar from \"./TopBar\";\nimport {\n  Box,\n  Center,\n  Divider,\n  HStack,\n  Image,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport InputWindow from \"./InputWindow\";\nimport { useSelectedData } from \"../../../Hooks/useSelectedData\";\nimport sloth from \"../../../Assets/Images/sloth.png\";\n\nconst Input = () => {\n  const selectedData = useSelectedData();\n\n  return (\n    <Box w={\"100%\"} h={\"100%\"}>\n      {selectedData.caseData.caseId === \"None\" ? (\n        <Center h=\"60vh\">\n          <VStack>\n            <Box w={\"300px\"} h={\"300px\"}>\n              <Image src={sloth} w={\"full\"} />\n            </Box>\n            <Text fontWeight={\"bold\"}> Selecciona un caso para empezar</Text>\n            <Box fontSize={9}>\n              <a href=\"https://www.freepik.com/vectors/tree\">\n                Tree vector created by pch.vector - www.freepik.com\n              </a>\n            </Box>\n          </VStack>\n        </Center>\n      ) : (\n        <div>\n          <TopBar {...selectedData} />\n          <Divider mb={4} />\n          <InputWindow {...selectedData} />\n        </div>\n      )}\n    </Box>\n  );\n};\nexport default Input;\n","import { useStoreState } from \"../Redux/Store\";\nimport { useEffect, useState } from \"react\";\nimport { ICase } from \"../Redux/Models/CasesModel\";\n\nexport const useSelectedData = () => {\n  const emptyObject: ICase = {\n    name: \"None\",\n    caseId: \"None\",\n    groupId: \"None\",\n    points: 0,\n    defined: false,\n  };\n\n  const [groupName, setGroupName] = useState(\"None\");\n  const [caseData, setCaseData] = useState<ICase>(emptyObject);\n\n  const selectedCase = useStoreState((state) => state.cases.selected);\n  const selectedData = useStoreState((state) => state.cases.selectedData);\n\n  useEffect(() => {\n    if (selectedCase.caseId !== \"None\" || selectedCase.groupId !== \"None\") {\n      const objectData = selectedData(\n        selectedCase.groupId,\n        selectedCase.caseId\n      );\n      setGroupName(objectData.groupName);\n      setCaseData(objectData.caseData);\n      return;\n    }\n    setGroupName(\"None\");\n    setCaseData(emptyObject);\n  }, [selectedCase]);\n\n  return { groupName, caseData };\n};\n","import * as React from \"react\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport { HStack, Flex, Box } from \"@chakra-ui/react\";\nimport Input from \"./Input/Input\";\n\nconst Main = () => {\n  return (\n    <Flex>\n      <Box w={\"30%\"}>\n        <Sidebar />\n      </Box>\n      <Input />\n    </Flex>\n  );\n};\n\nexport default Main;\n","import * as React from \"react\";\nimport { Container, HStack } from \"@chakra-ui/react\";\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\";\nimport { BiCodeBlock as CodeIcon } from \"react-icons/bi\";\nimport { BsPencil as EditIcon } from \"react-icons/bs\";\nimport { IoMdCheckmarkCircleOutline as CheckIcon } from \"react-icons/io\";\nimport Sidebar from \"./Cases/Sidebar/Sidebar\";\nimport Main from \"./Cases/Main\";\n\nconst MainWindow = () => {\n  return (\n    <>\n      <Container maxW={\"container.lg\"} mt={3} h={\"80vh\"} padding={\"0\"}>\n        <Tabs variant={\"enclosed\"} size={\"sm\"}>\n          <TabList>\n            <Tab>\n              <HStack>\n                <CodeIcon />\n                <p>Código Solución</p>\n              </HStack>\n            </Tab>\n            <Tab>\n              <HStack>\n                <CheckIcon />\n                <p>Casos de Prueba</p>\n              </HStack>\n            </Tab>\n            <Tab>\n              <HStack>\n                <EditIcon />\n                <p>Redacción</p>\n              </HStack>\n            </Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>1</TabPanel>\n            <TabPanel>\n              <Main />\n            </TabPanel>\n            <TabPanel>3</TabPanel>\n          </TabPanels>\n        </Tabs>\n        {/*<Sidebar />*/}\n      </Container>\n    </>\n  );\n};\n\nexport default MainWindow;\n","import * as React from \"react\";\nimport { ChakraProvider, theme } from \"@chakra-ui/react\";\nimport { useStoreRehydrated } from \"easy-peasy\";\nimport Navbar from \"./Components/Navbar\";\nimport Header from \"./Components/Header\";\nimport MainWindow from \"./Components/MainWindow\";\n\nexport const App = () => {\n  const isRehydrated = useStoreRehydrated();\n\n  return (\n    <ChakraProvider theme={theme}>\n      {!isRehydrated ? (\n        <h1> Loading </h1>\n      ) : (\n        <>\n          <Navbar />\n          <Header />\n          <MainWindow />\n        </>\n      )}\n    </ChakraProvider>\n  );\n};\n","import { ColorModeScript } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <ColorModeScript />\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}